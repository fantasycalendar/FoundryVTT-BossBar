{
  "version": 3,
  "sources": ["../../node_modules/autoprefixer/lib/utils.js", "../../node_modules/autoprefixer/lib/browsers.js", "../../node_modules/autoprefixer/lib/vendor.js", "../../node_modules/autoprefixer/lib/prefixer.js", "../../node_modules/autoprefixer/lib/declaration.js", "../../node_modules/fraction.js/fraction.js", "../../node_modules/autoprefixer/lib/resolution.js", "../../node_modules/autoprefixer/lib/transition.js", "../../node_modules/autoprefixer/lib/old-value.js", "../../node_modules/autoprefixer/lib/value.js", "../../node_modules/autoprefixer/lib/hacks/grid-utils.js", "../../node_modules/autoprefixer/lib/processor.js", "../../node_modules/autoprefixer/lib/brackets.js", "../../node_modules/autoprefixer/lib/supports.js", "../../node_modules/autoprefixer/lib/old-selector.js", "../../node_modules/autoprefixer/lib/selector.js", "../../node_modules/autoprefixer/lib/at-rule.js", "../../node_modules/autoprefixer/lib/hacks/fullscreen.js", "../../node_modules/autoprefixer/lib/hacks/placeholder.js", "../../node_modules/autoprefixer/lib/hacks/placeholder-shown.js", "../../node_modules/autoprefixer/lib/hacks/file-selector-button.js", "../../node_modules/autoprefixer/lib/hacks/flex-spec.js", "../../node_modules/autoprefixer/lib/hacks/flex.js", "../../node_modules/autoprefixer/lib/hacks/order.js", "../../node_modules/autoprefixer/lib/hacks/filter.js", "../../node_modules/autoprefixer/lib/hacks/grid-end.js", "../../node_modules/autoprefixer/lib/hacks/animation.js", "../../node_modules/autoprefixer/lib/hacks/flex-flow.js", "../../node_modules/autoprefixer/lib/hacks/flex-grow.js", "../../node_modules/autoprefixer/lib/hacks/flex-wrap.js", "../../node_modules/autoprefixer/lib/hacks/grid-area.js", "../../node_modules/autoprefixer/lib/hacks/place-self.js", "../../node_modules/autoprefixer/lib/hacks/grid-start.js", "../../node_modules/autoprefixer/lib/hacks/align-self.js", "../../node_modules/autoprefixer/lib/hacks/appearance.js", "../../node_modules/autoprefixer/lib/hacks/flex-basis.js", "../../node_modules/autoprefixer/lib/hacks/mask-border.js", "../../node_modules/autoprefixer/lib/hacks/mask-composite.js", "../../node_modules/autoprefixer/lib/hacks/align-items.js", "../../node_modules/autoprefixer/lib/hacks/user-select.js", "../../node_modules/autoprefixer/lib/hacks/flex-shrink.js", "../../node_modules/autoprefixer/lib/hacks/break-props.js", "../../node_modules/autoprefixer/lib/hacks/writing-mode.js", "../../node_modules/autoprefixer/lib/hacks/border-image.js", "../../node_modules/autoprefixer/lib/hacks/align-content.js", "../../node_modules/autoprefixer/lib/hacks/border-radius.js", "../../node_modules/autoprefixer/lib/hacks/block-logical.js", "../../node_modules/autoprefixer/lib/hacks/grid-template.js", "../../node_modules/autoprefixer/lib/hacks/inline-logical.js", "../../node_modules/autoprefixer/lib/hacks/grid-row-align.js", "../../node_modules/autoprefixer/lib/hacks/transform-decl.js", "../../node_modules/autoprefixer/lib/hacks/flex-direction.js", "../../node_modules/autoprefixer/lib/hacks/image-rendering.js", "../../node_modules/autoprefixer/lib/hacks/backdrop-filter.js", "../../node_modules/autoprefixer/lib/hacks/background-clip.js", "../../node_modules/autoprefixer/lib/hacks/text-decoration.js", "../../node_modules/autoprefixer/lib/hacks/justify-content.js", "../../node_modules/autoprefixer/lib/hacks/background-size.js", "../../node_modules/autoprefixer/lib/hacks/grid-row-column.js", "../../node_modules/autoprefixer/lib/hacks/grid-rows-columns.js", "../../node_modules/autoprefixer/lib/hacks/grid-column-align.js", "../../node_modules/autoprefixer/lib/hacks/print-color-adjust.js", "../../node_modules/autoprefixer/lib/hacks/overscroll-behavior.js", "../../node_modules/autoprefixer/lib/hacks/grid-template-areas.js", "../../node_modules/autoprefixer/lib/hacks/text-emphasis-position.js", "../../node_modules/autoprefixer/lib/hacks/text-decoration-skip-ink.js", "../../node_modules/normalize-range/index.js", "../../node_modules/autoprefixer/lib/hacks/gradient.js", "../../node_modules/autoprefixer/lib/hacks/intrinsic.js", "../../node_modules/autoprefixer/lib/hacks/pixelated.js", "../../node_modules/autoprefixer/lib/hacks/image-set.js", "../../node_modules/autoprefixer/lib/hacks/cross-fade.js", "../../node_modules/autoprefixer/lib/hacks/display-flex.js", "../../node_modules/autoprefixer/lib/hacks/display-grid.js", "../../node_modules/autoprefixer/lib/hacks/filter-value.js", "../../node_modules/autoprefixer/lib/hacks/autofill.js", "../../node_modules/autoprefixer/lib/prefixes.js", "../../node_modules/autoprefixer/data/prefixes.js", "../../node_modules/autoprefixer/lib/info.js", "../../node_modules/autoprefixer/lib/autoprefixer.js", "dep:@typhonjs-fvtt_runtime___autoprefixer"],
  "sourcesContent": ["let { list } = require('postcss')\n\n/**\n * Throw special error, to tell beniary,\n * that this error is from Autoprefixer.\n */\nmodule.exports.error = function (text) {\n  let err = new Error(text)\n  err.autoprefixer = true\n  throw err\n}\n\n/**\n * Return array, that doesn\u2019t contain duplicates.\n */\nmodule.exports.uniq = function (array) {\n  return [...new Set(array)]\n}\n\n/**\n * Return \"-webkit-\" on \"-webkit- old\"\n */\nmodule.exports.removeNote = function (string) {\n  if (!string.includes(' ')) {\n    return string\n  }\n\n  return string.split(' ')[0]\n}\n\n/**\n * Escape RegExp symbols\n */\nmodule.exports.escapeRegexp = function (string) {\n  return string.replace(/[$()*+-.?[\\\\\\]^{|}]/g, '\\\\$&')\n}\n\n/**\n * Return regexp to check, that CSS string contain word\n */\nmodule.exports.regexp = function (word, escape = true) {\n  if (escape) {\n    word = this.escapeRegexp(word)\n  }\n  return new RegExp(`(^|[\\\\s,(])(${word}($|[\\\\s(,]))`, 'gi')\n}\n\n/**\n * Change comma list\n */\nmodule.exports.editList = function (value, callback) {\n  let origin = list.comma(value)\n  let changed = callback(origin, [])\n\n  if (origin === changed) {\n    return value\n  }\n\n  let join = value.match(/,\\s*/)\n  join = join ? join[0] : ', '\n  return changed.join(join)\n}\n\n/**\n * Split the selector into parts.\n * It returns 3 level deep array because selectors can be comma\n * separated (1), space separated (2), and combined (3)\n * @param {String} selector selector string\n * @return {Array<Array<Array>>} 3 level deep array of split selector\n * @see utils.test.js for examples\n */\nmodule.exports.splitSelector = function (selector) {\n  return list.comma(selector).map(i => {\n    return list.space(i).map(k => {\n      return k.split(/(?=\\.|#)/g)\n    })\n  })\n}\n\n/**\n * Return true if a given value only contains numbers.\n * @param {*} value\n * @returns {boolean}\n */\nmodule.exports.isPureNumber = function (value) {\n  if (typeof value === 'number') {\n    return true\n  }\n  if (typeof value === 'string') {\n    return /^[0-9]+$/.test(value)\n  }\n  return false\n}\n", "let browserslist = require('browserslist')\nlet agents = require('caniuse-lite').agents\n\nlet utils = require('./utils')\n\nclass Browsers {\n  /**\n   * Return all prefixes for default browser data\n   */\n  static prefixes() {\n    if (this.prefixesCache) {\n      return this.prefixesCache\n    }\n\n    this.prefixesCache = []\n    for (let name in agents) {\n      this.prefixesCache.push(`-${agents[name].prefix}-`)\n    }\n\n    this.prefixesCache = utils\n      .uniq(this.prefixesCache)\n      .sort((a, b) => b.length - a.length)\n\n    return this.prefixesCache\n  }\n\n  /**\n   * Check is value contain any possible prefix\n   */\n  static withPrefix(value) {\n    if (!this.prefixesRegexp) {\n      this.prefixesRegexp = new RegExp(this.prefixes().join('|'))\n    }\n\n    return this.prefixesRegexp.test(value)\n  }\n\n  constructor(data, requirements, options, browserslistOpts) {\n    this.data = data\n    this.options = options || {}\n    this.browserslistOpts = browserslistOpts || {}\n    this.selected = this.parse(requirements)\n  }\n\n  /**\n   * Return browsers selected by requirements\n   */\n  parse(requirements) {\n    let opts = {}\n    for (let i in this.browserslistOpts) {\n      opts[i] = this.browserslistOpts[i]\n    }\n    opts.path = this.options.from\n    return browserslist(requirements, opts)\n  }\n\n  /**\n   * Return prefix for selected browser\n   */\n  prefix(browser) {\n    let [name, version] = browser.split(' ')\n    let data = this.data[name]\n\n    let prefix = data.prefix_exceptions && data.prefix_exceptions[version]\n    if (!prefix) {\n      prefix = data.prefix\n    }\n    return `-${prefix}-`\n  }\n\n  /**\n   * Is browser is selected by requirements\n   */\n  isSelected(browser) {\n    return this.selected.includes(browser)\n  }\n}\n\nmodule.exports = Browsers\n", "module.exports = {\n  prefix(prop) {\n    let match = prop.match(/^(-\\w+-)/)\n    if (match) {\n      return match[0]\n    }\n\n    return ''\n  },\n\n  unprefixed(prop) {\n    return prop.replace(/^-\\w+-/, '')\n  }\n}\n", "let Browsers = require('./browsers')\nlet vendor = require('./vendor')\nlet utils = require('./utils')\n\n/**\n * Recursively clone objects\n */\nfunction clone(obj, parent) {\n  let cloned = new obj.constructor()\n\n  for (let i of Object.keys(obj || {})) {\n    let value = obj[i]\n    if (i === 'parent' && typeof value === 'object') {\n      if (parent) {\n        cloned[i] = parent\n      }\n    } else if (i === 'source' || i === null) {\n      cloned[i] = value\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(x => clone(x, cloned))\n    } else if (\n      i !== '_autoprefixerPrefix' &&\n      i !== '_autoprefixerValues' &&\n      i !== 'proxyCache'\n    ) {\n      if (typeof value === 'object' && value !== null) {\n        value = clone(value, cloned)\n      }\n      cloned[i] = value\n    }\n  }\n\n  return cloned\n}\n\nclass Prefixer {\n  /**\n   * Add hack to selected names\n   */\n  static hack(klass) {\n    if (!this.hacks) {\n      this.hacks = {}\n    }\n    return klass.names.map(name => {\n      this.hacks[name] = klass\n      return this.hacks[name]\n    })\n  }\n\n  /**\n   * Load hacks for some names\n   */\n  static load(name, prefixes, all) {\n    let Klass = this.hacks && this.hacks[name]\n    if (Klass) {\n      return new Klass(name, prefixes, all)\n    } else {\n      return new this(name, prefixes, all)\n    }\n  }\n\n  /**\n   * Clone node and clean autprefixer custom caches\n   */\n  static clone(node, overrides) {\n    let cloned = clone(node)\n    for (let name in overrides) {\n      cloned[name] = overrides[name]\n    }\n    return cloned\n  }\n\n  constructor(name, prefixes, all) {\n    this.prefixes = prefixes\n    this.name = name\n    this.all = all\n  }\n\n  /**\n   * Find prefix in node parents\n   */\n  parentPrefix(node) {\n    let prefix\n\n    if (typeof node._autoprefixerPrefix !== 'undefined') {\n      prefix = node._autoprefixerPrefix\n    } else if (node.type === 'decl' && node.prop[0] === '-') {\n      prefix = vendor.prefix(node.prop)\n    } else if (node.type === 'root') {\n      prefix = false\n    } else if (\n      node.type === 'rule' &&\n      node.selector.includes(':-') &&\n      /:(-\\w+-)/.test(node.selector)\n    ) {\n      prefix = node.selector.match(/:(-\\w+-)/)[1]\n    } else if (node.type === 'atrule' && node.name[0] === '-') {\n      prefix = vendor.prefix(node.name)\n    } else {\n      prefix = this.parentPrefix(node.parent)\n    }\n\n    if (!Browsers.prefixes().includes(prefix)) {\n      prefix = false\n    }\n\n    node._autoprefixerPrefix = prefix\n\n    return node._autoprefixerPrefix\n  }\n\n  /**\n   * Clone node with prefixes\n   */\n  process(node, result) {\n    if (!this.check(node)) {\n      return undefined\n    }\n\n    let parent = this.parentPrefix(node)\n\n    let prefixes = this.prefixes.filter(\n      prefix => !parent || parent === utils.removeNote(prefix)\n    )\n\n    let added = []\n    for (let prefix of prefixes) {\n      if (this.add(node, prefix, added.concat([prefix]), result)) {\n        added.push(prefix)\n      }\n    }\n\n    return added\n  }\n\n  /**\n   * Shortcut for Prefixer.clone\n   */\n  clone(node, overrides) {\n    return Prefixer.clone(node, overrides)\n  }\n}\n\nmodule.exports = Prefixer\n", "let Prefixer = require('./prefixer')\nlet Browsers = require('./browsers')\nlet utils = require('./utils')\n\nclass Declaration extends Prefixer {\n  /**\n   * Always true, because we already get prefixer by property name\n   */\n  check(/* decl */) {\n    return true\n  }\n\n  /**\n   * Return prefixed version of property\n   */\n  prefixed(prop, prefix) {\n    return prefix + prop\n  }\n\n  /**\n   * Return unprefixed version of property\n   */\n  normalize(prop) {\n    return prop\n  }\n\n  /**\n   * Check `value`, that it contain other prefixes, rather than `prefix`\n   */\n  otherPrefixes(value, prefix) {\n    for (let other of Browsers.prefixes()) {\n      if (other === prefix) {\n        continue\n      }\n      if (value.includes(other)) {\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * Set prefix to declaration\n   */\n  set(decl, prefix) {\n    decl.prop = this.prefixed(decl.prop, prefix)\n    return decl\n  }\n\n  /**\n   * Should we use visual cascade for prefixes\n   */\n  needCascade(decl) {\n    if (!decl._autoprefixerCascade) {\n      decl._autoprefixerCascade =\n        this.all.options.cascade !== false && decl.raw('before').includes('\\n')\n    }\n    return decl._autoprefixerCascade\n  }\n\n  /**\n   * Return maximum length of possible prefixed property\n   */\n  maxPrefixed(prefixes, decl) {\n    if (decl._autoprefixerMax) {\n      return decl._autoprefixerMax\n    }\n\n    let max = 0\n    for (let prefix of prefixes) {\n      prefix = utils.removeNote(prefix)\n      if (prefix.length > max) {\n        max = prefix.length\n      }\n    }\n    decl._autoprefixerMax = max\n\n    return decl._autoprefixerMax\n  }\n\n  /**\n   * Calculate indentation to create visual cascade\n   */\n  calcBefore(prefixes, decl, prefix = '') {\n    let max = this.maxPrefixed(prefixes, decl)\n    let diff = max - utils.removeNote(prefix).length\n\n    let before = decl.raw('before')\n    if (diff > 0) {\n      before += Array(diff).fill(' ').join('')\n    }\n\n    return before\n  }\n\n  /**\n   * Remove visual cascade\n   */\n  restoreBefore(decl) {\n    let lines = decl.raw('before').split('\\n')\n    let min = lines[lines.length - 1]\n\n    this.all.group(decl).up(prefixed => {\n      let array = prefixed.raw('before').split('\\n')\n      let last = array[array.length - 1]\n      if (last.length < min.length) {\n        min = last\n      }\n    })\n\n    lines[lines.length - 1] = min\n    decl.raws.before = lines.join('\\n')\n  }\n\n  /**\n   * Clone and insert new declaration\n   */\n  insert(decl, prefix, prefixes) {\n    let cloned = this.set(this.clone(decl), prefix)\n    if (!cloned) return undefined\n\n    let already = decl.parent.some(\n      i => i.prop === cloned.prop && i.value === cloned.value\n    )\n    if (already) {\n      return undefined\n    }\n\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n    return decl.parent.insertBefore(decl, cloned)\n  }\n\n  /**\n   * Did this declaration has this prefix above\n   */\n  isAlready(decl, prefixed) {\n    let already = this.all.group(decl).up(i => i.prop === prefixed)\n    if (!already) {\n      already = this.all.group(decl).down(i => i.prop === prefixed)\n    }\n    return already\n  }\n\n  /**\n   * Clone and add prefixes for declaration\n   */\n  add(decl, prefix, prefixes, result) {\n    let prefixed = this.prefixed(decl.prop, prefix)\n    if (\n      this.isAlready(decl, prefixed) ||\n      this.otherPrefixes(decl.value, prefix)\n    ) {\n      return undefined\n    }\n    return this.insert(decl, prefix, prefixes, result)\n  }\n\n  /**\n   * Add spaces for visual cascade\n   */\n  process(decl, result) {\n    if (!this.needCascade(decl)) {\n      super.process(decl, result)\n      return\n    }\n\n    let prefixes = super.process(decl, result)\n\n    if (!prefixes || !prefixes.length) {\n      return\n    }\n\n    this.restoreBefore(decl)\n    decl.raws.before = this.calcBefore(prefixes, decl)\n  }\n\n  /**\n   * Return list of prefixed properties to clean old prefixes\n   */\n  old(prop, prefix) {\n    return [this.prefixed(prop, prefix)]\n  }\n}\n\nmodule.exports = Declaration\n", "/**\n * @license Fraction.js v4.2.0 05/03/2022\n * https://www.xarg.org/2014/03/rational-numbers-in-javascript/\n *\n * Copyright (c) 2021, Robert Eisele (robert@xarg.org)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n **/\n\n\n/**\n *\n * This class offers the possibility to calculate fractions.\n * You can pass a fraction in different formats. Either as array, as double, as string or as an integer.\n *\n * Array/Object form\n * [ 0 => <nominator>, 1 => <denominator> ]\n * [ n => <nominator>, d => <denominator> ]\n *\n * Integer form\n * - Single integer value\n *\n * Double form\n * - Single double value\n *\n * String form\n * 123.456 - a simple double\n * 123/456 - a string fraction\n * 123.'456' - a double with repeating decimal places\n * 123.(456) - synonym\n * 123.45'6' - a double with repeating last place\n * 123.45(6) - synonym\n *\n * Example:\n *\n * var f = new Fraction(\"9.4'31'\");\n * f.mul([-4, 3]).div(4.9);\n *\n */\n\n(function(root) {\n\n  \"use strict\";\n\n  // Maximum search depth for cyclic rational numbers. 2000 should be more than enough.\n  // Example: 1/7 = 0.(142857) has 6 repeating decimal places.\n  // If MAX_CYCLE_LEN gets reduced, long cycles will not be detected and toString() only gets the first 10 digits\n  var MAX_CYCLE_LEN = 2000;\n\n  // Parsed data to avoid calling \"new\" all the time\n  var P = {\n    \"s\": 1,\n    \"n\": 0,\n    \"d\": 1\n  };\n\n  function assign(n, s) {\n\n    if (isNaN(n = parseInt(n, 10))) {\n      throw Fraction['InvalidParameter'];\n    }\n    return n * s;\n  }\n\n  // Creates a new Fraction internally without the need of the bulky constructor\n  function newFraction(n, d) {\n\n    if (d === 0) {\n      throw Fraction['DivisionByZero'];\n    }\n\n    var f = Object.create(Fraction.prototype);\n    f[\"s\"] = n < 0 ? -1 : 1;\n\n    n = n < 0 ? -n : n;\n\n    var a = gcd(n, d);\n\n    f[\"n\"] = n / a;\n    f[\"d\"] = d / a;\n    return f;\n  }\n\n  function factorize(num) {\n\n    var factors = {};\n\n    var n = num;\n    var i = 2;\n    var s = 4;\n\n    while (s <= n) {\n\n      while (n % i === 0) {\n        n/= i;\n        factors[i] = (factors[i] || 0) + 1;\n      }\n      s+= 1 + 2 * i++;\n    }\n\n    if (n !== num) {\n      if (n > 1)\n        factors[n] = (factors[n] || 0) + 1;\n    } else {\n      factors[num] = (factors[num] || 0) + 1;\n    }\n    return factors;\n  }\n\n  var parse = function(p1, p2) {\n\n    var n = 0, d = 1, s = 1;\n    var v = 0, w = 0, x = 0, y = 1, z = 1;\n\n    var A = 0, B = 1;\n    var C = 1, D = 1;\n\n    var N = 10000000;\n    var M;\n\n    if (p1 === undefined || p1 === null) {\n      /* void */\n    } else if (p2 !== undefined) {\n      n = p1;\n      d = p2;\n      s = n * d;\n\n      if (n % 1 !== 0 || d % 1 !== 0) {\n        throw Fraction['NonIntegerParameter'];\n      }\n\n    } else\n      switch (typeof p1) {\n\n        case \"object\":\n          {\n            if (\"d\" in p1 && \"n\" in p1) {\n              n = p1[\"n\"];\n              d = p1[\"d\"];\n              if (\"s\" in p1)\n                n*= p1[\"s\"];\n            } else if (0 in p1) {\n              n = p1[0];\n              if (1 in p1)\n                d = p1[1];\n            } else {\n              throw Fraction['InvalidParameter'];\n            }\n            s = n * d;\n            break;\n          }\n        case \"number\":\n          {\n            if (p1 < 0) {\n              s = p1;\n              p1 = -p1;\n            }\n\n            if (p1 % 1 === 0) {\n              n = p1;\n            } else if (p1 > 0) { // check for != 0, scale would become NaN (log(0)), which converges really slow\n\n              if (p1 >= 1) {\n                z = Math.pow(10, Math.floor(1 + Math.log(p1) / Math.LN10));\n                p1/= z;\n              }\n\n              // Using Farey Sequences\n              // http://www.johndcook.com/blog/2010/10/20/best-rational-approximation/\n\n              while (B <= N && D <= N) {\n                M = (A + C) / (B + D);\n\n                if (p1 === M) {\n                  if (B + D <= N) {\n                    n = A + C;\n                    d = B + D;\n                  } else if (D > B) {\n                    n = C;\n                    d = D;\n                  } else {\n                    n = A;\n                    d = B;\n                  }\n                  break;\n\n                } else {\n\n                  if (p1 > M) {\n                    A+= C;\n                    B+= D;\n                  } else {\n                    C+= A;\n                    D+= B;\n                  }\n\n                  if (B > N) {\n                    n = C;\n                    d = D;\n                  } else {\n                    n = A;\n                    d = B;\n                  }\n                }\n              }\n              n*= z;\n            } else if (isNaN(p1) || isNaN(p2)) {\n              d = n = NaN;\n            }\n            break;\n          }\n        case \"string\":\n          {\n            B = p1.match(/\\d+|./g);\n\n            if (B === null)\n              throw Fraction['InvalidParameter'];\n\n            if (B[A] === '-') {// Check for minus sign at the beginning\n              s = -1;\n              A++;\n            } else if (B[A] === '+') {// Check for plus sign at the beginning\n              A++;\n            }\n\n            if (B.length === A + 1) { // Check if it's just a simple number \"1234\"\n              w = assign(B[A++], s);\n            } else if (B[A + 1] === '.' || B[A] === '.') { // Check if it's a decimal number\n\n              if (B[A] !== '.') { // Handle 0.5 and .5\n                v = assign(B[A++], s);\n              }\n              A++;\n\n              // Check for decimal places\n              if (A + 1 === B.length || B[A + 1] === '(' && B[A + 3] === ')' || B[A + 1] === \"'\" && B[A + 3] === \"'\") {\n                w = assign(B[A], s);\n                y = Math.pow(10, B[A].length);\n                A++;\n              }\n\n              // Check for repeating places\n              if (B[A] === '(' && B[A + 2] === ')' || B[A] === \"'\" && B[A + 2] === \"'\") {\n                x = assign(B[A + 1], s);\n                z = Math.pow(10, B[A + 1].length) - 1;\n                A+= 3;\n              }\n\n            } else if (B[A + 1] === '/' || B[A + 1] === ':') { // Check for a simple fraction \"123/456\" or \"123:456\"\n              w = assign(B[A], s);\n              y = assign(B[A + 2], 1);\n              A+= 3;\n            } else if (B[A + 3] === '/' && B[A + 1] === ' ') { // Check for a complex fraction \"123 1/2\"\n              v = assign(B[A], s);\n              w = assign(B[A + 2], s);\n              y = assign(B[A + 4], 1);\n              A+= 5;\n            }\n\n            if (B.length <= A) { // Check for more tokens on the stack\n              d = y * z;\n              s = /* void */\n              n = x + d * v + z * w;\n              break;\n            }\n\n            /* Fall through on error */\n          }\n        default:\n          throw Fraction['InvalidParameter'];\n      }\n\n    if (d === 0) {\n      throw Fraction['DivisionByZero'];\n    }\n\n    P[\"s\"] = s < 0 ? -1 : 1;\n    P[\"n\"] = Math.abs(n);\n    P[\"d\"] = Math.abs(d);\n  };\n\n  function modpow(b, e, m) {\n\n    var r = 1;\n    for (; e > 0; b = (b * b) % m, e >>= 1) {\n\n      if (e & 1) {\n        r = (r * b) % m;\n      }\n    }\n    return r;\n  }\n\n\n  function cycleLen(n, d) {\n\n    for (; d % 2 === 0;\n      d/= 2) {\n    }\n\n    for (; d % 5 === 0;\n      d/= 5) {\n    }\n\n    if (d === 1) // Catch non-cyclic numbers\n      return 0;\n\n    // If we would like to compute really large numbers quicker, we could make use of Fermat's little theorem:\n    // 10^(d-1) % d == 1\n    // However, we don't need such large numbers and MAX_CYCLE_LEN should be the capstone,\n    // as we want to translate the numbers to strings.\n\n    var rem = 10 % d;\n    var t = 1;\n\n    for (; rem !== 1; t++) {\n      rem = rem * 10 % d;\n\n      if (t > MAX_CYCLE_LEN)\n        return 0; // Returning 0 here means that we don't print it as a cyclic number. It's likely that the answer is `d-1`\n    }\n    return t;\n  }\n\n\n  function cycleStart(n, d, len) {\n\n    var rem1 = 1;\n    var rem2 = modpow(10, len, d);\n\n    for (var t = 0; t < 300; t++) { // s < ~log10(Number.MAX_VALUE)\n      // Solve 10^s == 10^(s+t) (mod d)\n\n      if (rem1 === rem2)\n        return t;\n\n      rem1 = rem1 * 10 % d;\n      rem2 = rem2 * 10 % d;\n    }\n    return 0;\n  }\n\n  function gcd(a, b) {\n\n    if (!a)\n      return b;\n    if (!b)\n      return a;\n\n    while (1) {\n      a%= b;\n      if (!a)\n        return b;\n      b%= a;\n      if (!b)\n        return a;\n    }\n  };\n\n  /**\n   * Module constructor\n   *\n   * @constructor\n   * @param {number|Fraction=} a\n   * @param {number=} b\n   */\n  function Fraction(a, b) {\n\n    parse(a, b);\n\n    if (this instanceof Fraction) {\n      a = gcd(P[\"d\"], P[\"n\"]); // Abuse variable a\n      this[\"s\"] = P[\"s\"];\n      this[\"n\"] = P[\"n\"] / a;\n      this[\"d\"] = P[\"d\"] / a;\n    } else {\n      return newFraction(P['s'] * P['n'], P['d']);\n    }\n  }\n\n  Fraction['DivisionByZero'] = new Error(\"Division by Zero\");\n  Fraction['InvalidParameter'] = new Error(\"Invalid argument\");\n  Fraction['NonIntegerParameter'] = new Error(\"Parameters must be integer\");\n\n  Fraction.prototype = {\n\n    \"s\": 1,\n    \"n\": 0,\n    \"d\": 1,\n\n    /**\n     * Calculates the absolute value\n     *\n     * Ex: new Fraction(-4).abs() => 4\n     **/\n    \"abs\": function() {\n\n      return newFraction(this[\"n\"], this[\"d\"]);\n    },\n\n    /**\n     * Inverts the sign of the current fraction\n     *\n     * Ex: new Fraction(-4).neg() => 4\n     **/\n    \"neg\": function() {\n\n      return newFraction(-this[\"s\"] * this[\"n\"], this[\"d\"]);\n    },\n\n    /**\n     * Adds two rational numbers\n     *\n     * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => 467 / 30\n     **/\n    \"add\": function(a, b) {\n\n      parse(a, b);\n      return newFraction(\n        this[\"s\"] * this[\"n\"] * P[\"d\"] + P[\"s\"] * this[\"d\"] * P[\"n\"],\n        this[\"d\"] * P[\"d\"]\n      );\n    },\n\n    /**\n     * Subtracts two rational numbers\n     *\n     * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => -427 / 30\n     **/\n    \"sub\": function(a, b) {\n\n      parse(a, b);\n      return newFraction(\n        this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * this[\"d\"] * P[\"n\"],\n        this[\"d\"] * P[\"d\"]\n      );\n    },\n\n    /**\n     * Multiplies two rational numbers\n     *\n     * Ex: new Fraction(\"-17.(345)\").mul(3) => 5776 / 111\n     **/\n    \"mul\": function(a, b) {\n\n      parse(a, b);\n      return newFraction(\n        this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"n\"],\n        this[\"d\"] * P[\"d\"]\n      );\n    },\n\n    /**\n     * Divides two rational numbers\n     *\n     * Ex: new Fraction(\"-17.(345)\").inverse().div(3)\n     **/\n    \"div\": function(a, b) {\n\n      parse(a, b);\n      return newFraction(\n        this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"d\"],\n        this[\"d\"] * P[\"n\"]\n      );\n    },\n\n    /**\n     * Clones the actual object\n     *\n     * Ex: new Fraction(\"-17.(345)\").clone()\n     **/\n    \"clone\": function() {\n      return newFraction(this['s'] * this['n'], this['d']);\n    },\n\n    /**\n     * Calculates the modulo of two rational numbers - a more precise fmod\n     *\n     * Ex: new Fraction('4.(3)').mod([7, 8]) => (13/3) % (7/8) = (5/6)\n     **/\n    \"mod\": function(a, b) {\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return new Fraction(NaN);\n      }\n\n      if (a === undefined) {\n        return newFraction(this[\"s\"] * this[\"n\"] % this[\"d\"], 1);\n      }\n\n      parse(a, b);\n      if (0 === P[\"n\"] && 0 === this[\"d\"]) {\n        throw Fraction['DivisionByZero'];\n      }\n\n      /*\n       * First silly attempt, kinda slow\n       *\n       return that[\"sub\"]({\n       \"n\": num[\"n\"] * Math.floor((this.n / this.d) / (num.n / num.d)),\n       \"d\": num[\"d\"],\n       \"s\": this[\"s\"]\n       });*/\n\n      /*\n       * New attempt: a1 / b1 = a2 / b2 * q + r\n       * => b2 * a1 = a2 * b1 * q + b1 * b2 * r\n       * => (b2 * a1 % a2 * b1) / (b1 * b2)\n       */\n      return newFraction(\n        this[\"s\"] * (P[\"d\"] * this[\"n\"]) % (P[\"n\"] * this[\"d\"]),\n        P[\"d\"] * this[\"d\"]\n      );\n    },\n\n    /**\n     * Calculates the fractional gcd of two rational numbers\n     *\n     * Ex: new Fraction(5,8).gcd(3,7) => 1/56\n     */\n    \"gcd\": function(a, b) {\n\n      parse(a, b);\n\n      // gcd(a / b, c / d) = gcd(a, c) / lcm(b, d)\n\n      return newFraction(gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]), P[\"d\"] * this[\"d\"]);\n    },\n\n    /**\n     * Calculates the fractional lcm of two rational numbers\n     *\n     * Ex: new Fraction(5,8).lcm(3,7) => 15\n     */\n    \"lcm\": function(a, b) {\n\n      parse(a, b);\n\n      // lcm(a / b, c / d) = lcm(a, c) / gcd(b, d)\n\n      if (P[\"n\"] === 0 && this[\"n\"] === 0) {\n        return newFraction(0, 1);\n      }\n      return newFraction(P[\"n\"] * this[\"n\"], gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]));\n    },\n\n    /**\n     * Calculates the ceil of a rational number\n     *\n     * Ex: new Fraction('4.(3)').ceil() => (5 / 1)\n     **/\n    \"ceil\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return newFraction(Math.ceil(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Calculates the floor of a rational number\n     *\n     * Ex: new Fraction('4.(3)').floor() => (4 / 1)\n     **/\n    \"floor\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return newFraction(Math.floor(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Rounds a rational numbers\n     *\n     * Ex: new Fraction('4.(3)').round() => (4 / 1)\n     **/\n    \"round\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return newFraction(Math.round(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Gets the inverse of the fraction, means numerator and denominator are exchanged\n     *\n     * Ex: new Fraction([-3, 4]).inverse() => -4 / 3\n     **/\n    \"inverse\": function() {\n\n      return newFraction(this[\"s\"] * this[\"d\"], this[\"n\"]);\n    },\n\n    /**\n     * Calculates the fraction to some rational exponent, if possible\n     *\n     * Ex: new Fraction(-1,2).pow(-3) => -8\n     */\n    \"pow\": function(a, b) {\n\n      parse(a, b);\n\n      // Trivial case when exp is an integer\n\n      if (P['d'] === 1) {\n\n        if (P['s'] < 0) {\n          return newFraction(Math.pow(this['s'] * this[\"d\"], P['n']), Math.pow(this[\"n\"], P['n']));\n        } else {\n          return newFraction(Math.pow(this['s'] * this[\"n\"], P['n']), Math.pow(this[\"d\"], P['n']));\n        }\n      }\n\n      // Negative roots become complex\n      //     (-a/b)^(c/d) = x\n      // <=> (-1)^(c/d) * (a/b)^(c/d) = x\n      // <=> (cos(pi) + i*sin(pi))^(c/d) * (a/b)^(c/d) = x         # rotate 1 by 180\u00B0\n      // <=> (cos(c*pi/d) + i*sin(c*pi/d)) * (a/b)^(c/d) = x       # DeMoivre's formula in Q ( https://proofwiki.org/wiki/De_Moivre%27s_Formula/Rational_Index )\n      // From which follows that only for c=0 the root is non-complex. c/d is a reduced fraction, so that sin(c/dpi)=0 occurs for d=1, which is handled by our trivial case.\n      if (this['s'] < 0) return null;\n\n      // Now prime factor n and d\n      var N = factorize(this['n']);\n      var D = factorize(this['d']);\n\n      // Exponentiate and take root for n and d individually\n      var n = 1;\n      var d = 1;\n      for (var k in N) {\n        if (k === '1') continue;\n        if (k === '0') {\n          n = 0;\n          break;\n        }\n        N[k]*= P['n'];\n\n        if (N[k] % P['d'] === 0) {\n          N[k]/= P['d'];\n        } else return null;\n        n*= Math.pow(k, N[k]);\n      }\n\n      for (var k in D) {\n        if (k === '1') continue;\n        D[k]*= P['n'];\n\n        if (D[k] % P['d'] === 0) {\n          D[k]/= P['d'];\n        } else return null;\n        d*= Math.pow(k, D[k]);\n      }\n\n      if (P['s'] < 0) {\n        return newFraction(d, n);\n      }\n      return newFraction(n, d);\n    },\n\n    /**\n     * Check if two rational numbers are the same\n     *\n     * Ex: new Fraction(19.6).equals([98, 5]);\n     **/\n    \"equals\": function(a, b) {\n\n      parse(a, b);\n      return this[\"s\"] * this[\"n\"] * P[\"d\"] === P[\"s\"] * P[\"n\"] * this[\"d\"]; // Same as compare() === 0\n    },\n\n    /**\n     * Check if two rational numbers are the same\n     *\n     * Ex: new Fraction(19.6).equals([98, 5]);\n     **/\n    \"compare\": function(a, b) {\n\n      parse(a, b);\n      var t = (this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * P[\"n\"] * this[\"d\"]);\n      return (0 < t) - (t < 0);\n    },\n\n    \"simplify\": function(eps) {\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return this;\n      }\n\n      eps = eps || 0.001;\n\n      var thisABS = this['abs']();\n      var cont = thisABS['toContinued']();\n\n      for (var i = 1; i < cont.length; i++) {\n\n        var s = newFraction(cont[i - 1], 1);\n        for (var k = i - 2; k >= 0; k--) {\n          s = s['inverse']()['add'](cont[k]);\n        }\n\n        if (s['sub'](thisABS)['abs']().valueOf() < eps) {\n          return s['mul'](this['s']);\n        }\n      }\n      return this;\n    },\n\n    /**\n     * Check if two rational numbers are divisible\n     *\n     * Ex: new Fraction(19.6).divisible(1.5);\n     */\n    \"divisible\": function(a, b) {\n\n      parse(a, b);\n      return !(!(P[\"n\"] * this[\"d\"]) || ((this[\"n\"] * P[\"d\"]) % (P[\"n\"] * this[\"d\"])));\n    },\n\n    /**\n     * Returns a decimal representation of the fraction\n     *\n     * Ex: new Fraction(\"100.'91823'\").valueOf() => 100.91823918239183\n     **/\n    'valueOf': function() {\n\n      return this[\"s\"] * this[\"n\"] / this[\"d\"];\n    },\n\n    /**\n     * Returns a string-fraction representation of a Fraction object\n     *\n     * Ex: new Fraction(\"1.'3'\").toFraction(true) => \"4 1/3\"\n     **/\n    'toFraction': function(excludeWhole) {\n\n      var whole, str = \"\";\n      var n = this[\"n\"];\n      var d = this[\"d\"];\n      if (this[\"s\"] < 0) {\n        str+= '-';\n      }\n\n      if (d === 1) {\n        str+= n;\n      } else {\n\n        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {\n          str+= whole;\n          str+= \" \";\n          n%= d;\n        }\n\n        str+= n;\n        str+= '/';\n        str+= d;\n      }\n      return str;\n    },\n\n    /**\n     * Returns a latex representation of a Fraction object\n     *\n     * Ex: new Fraction(\"1.'3'\").toLatex() => \"\\frac{4}{3}\"\n     **/\n    'toLatex': function(excludeWhole) {\n\n      var whole, str = \"\";\n      var n = this[\"n\"];\n      var d = this[\"d\"];\n      if (this[\"s\"] < 0) {\n        str+= '-';\n      }\n\n      if (d === 1) {\n        str+= n;\n      } else {\n\n        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {\n          str+= whole;\n          n%= d;\n        }\n\n        str+= \"\\\\frac{\";\n        str+= n;\n        str+= '}{';\n        str+= d;\n        str+= '}';\n      }\n      return str;\n    },\n\n    /**\n     * Returns an array of continued fraction elements\n     *\n     * Ex: new Fraction(\"7/8\").toContinued() => [0,1,7]\n     */\n    'toContinued': function() {\n\n      var t;\n      var a = this['n'];\n      var b = this['d'];\n      var res = [];\n\n      if (isNaN(a) || isNaN(b)) {\n        return res;\n      }\n\n      do {\n        res.push(Math.floor(a / b));\n        t = a % b;\n        a = b;\n        b = t;\n      } while (a !== 1);\n\n      return res;\n    },\n\n    /**\n     * Creates a string representation of a fraction with all digits\n     *\n     * Ex: new Fraction(\"100.'91823'\").toString() => \"100.(91823)\"\n     **/\n    'toString': function(dec) {\n\n      var N = this[\"n\"];\n      var D = this[\"d\"];\n\n      if (isNaN(N) || isNaN(D)) {\n        return \"NaN\";\n      }\n\n      dec = dec || 15; // 15 = decimal places when no repetation\n\n      var cycLen = cycleLen(N, D); // Cycle length\n      var cycOff = cycleStart(N, D, cycLen); // Cycle start\n\n      var str = this['s'] < 0 ? \"-\" : \"\";\n\n      str+= N / D | 0;\n\n      N%= D;\n      N*= 10;\n\n      if (N)\n        str+= \".\";\n\n      if (cycLen) {\n\n        for (var i = cycOff; i--;) {\n          str+= N / D | 0;\n          N%= D;\n          N*= 10;\n        }\n        str+= \"(\";\n        for (var i = cycLen; i--;) {\n          str+= N / D | 0;\n          N%= D;\n          N*= 10;\n        }\n        str+= \")\";\n      } else {\n        for (var i = dec; N && i--;) {\n          str+= N / D | 0;\n          N%= D;\n          N*= 10;\n        }\n      }\n      return str;\n    }\n  };\n\n  if (typeof define === \"function\" && define[\"amd\"]) {\n    define([], function() {\n      return Fraction;\n    });\n  } else if (typeof exports === \"object\") {\n    Object.defineProperty(Fraction, \"__esModule\", { 'value': true });\n    Fraction['default'] = Fraction;\n    Fraction['Fraction'] = Fraction;\n    module['exports'] = Fraction;\n  } else {\n    root['Fraction'] = Fraction;\n  }\n\n})(this);\n", "let FractionJs = require('fraction.js')\n\nlet Prefixer = require('./prefixer')\nlet utils = require('./utils')\n\nconst REGEXP = /(min|max)-resolution\\s*:\\s*\\d*\\.?\\d+(dppx|dpcm|dpi|x)/gi\nconst SPLIT = /(min|max)-resolution(\\s*:\\s*)(\\d*\\.?\\d+)(dppx|dpcm|dpi|x)/i\n\nclass Resolution extends Prefixer {\n  /**\n   * Return prefixed query name\n   */\n  prefixName(prefix, name) {\n    if (prefix === '-moz-') {\n      return name + '--moz-device-pixel-ratio'\n    } else {\n      return prefix + name + '-device-pixel-ratio'\n    }\n  }\n\n  /**\n   * Return prefixed query\n   */\n  prefixQuery(prefix, name, colon, value, units) {\n    value = new FractionJs(value)\n\n    // 1dpcm = 2.54dpi\n    // 1dppx = 96dpi\n    if (units === 'dpi') {\n      value = value.div(96)\n    } else if (units === 'dpcm') {\n      value = value.mul(2.54).div(96)\n    }\n    value = value.simplify()\n\n    if (prefix === '-o-') {\n      value = value.n + '/' + value.d\n    }\n    return this.prefixName(prefix, name) + colon + value\n  }\n\n  /**\n   * Remove prefixed queries\n   */\n  clean(rule) {\n    if (!this.bad) {\n      this.bad = []\n      for (let prefix of this.prefixes) {\n        this.bad.push(this.prefixName(prefix, 'min'))\n        this.bad.push(this.prefixName(prefix, 'max'))\n      }\n    }\n\n    rule.params = utils.editList(rule.params, queries => {\n      return queries.filter(query => this.bad.every(i => !query.includes(i)))\n    })\n  }\n\n  /**\n   * Add prefixed queries\n   */\n  process(rule) {\n    let parent = this.parentPrefix(rule)\n    let prefixes = parent ? [parent] : this.prefixes\n\n    rule.params = utils.editList(rule.params, (origin, prefixed) => {\n      for (let query of origin) {\n        if (\n          !query.includes('min-resolution') &&\n          !query.includes('max-resolution')\n        ) {\n          prefixed.push(query)\n          continue\n        }\n\n        for (let prefix of prefixes) {\n          let processed = query.replace(REGEXP, str => {\n            let parts = str.match(SPLIT)\n            return this.prefixQuery(\n              prefix,\n              parts[1],\n              parts[2],\n              parts[3],\n              parts[4]\n            )\n          })\n          prefixed.push(processed)\n        }\n        prefixed.push(query)\n      }\n\n      return utils.uniq(prefixed)\n    })\n  }\n}\n\nmodule.exports = Resolution\n", "let { list } = require('postcss')\nlet parser = require('postcss-value-parser')\n\nlet Browsers = require('./browsers')\nlet vendor = require('./vendor')\n\nclass Transition {\n  constructor(prefixes) {\n    this.props = ['transition', 'transition-property']\n    this.prefixes = prefixes\n  }\n\n  /**\n   * Process transition and add prefixes for all necessary properties\n   */\n  add(decl, result) {\n    let prefix, prop\n    let add = this.prefixes.add[decl.prop]\n    let vendorPrefixes = this.ruleVendorPrefixes(decl)\n    let declPrefixes = vendorPrefixes || (add && add.prefixes) || []\n\n    let params = this.parse(decl.value)\n    let names = params.map(i => this.findProp(i))\n    let added = []\n\n    if (names.some(i => i[0] === '-')) {\n      return\n    }\n\n    for (let param of params) {\n      prop = this.findProp(param)\n      if (prop[0] === '-') continue\n\n      let prefixer = this.prefixes.add[prop]\n      if (!prefixer || !prefixer.prefixes) continue\n\n      for (prefix of prefixer.prefixes) {\n        if (vendorPrefixes && !vendorPrefixes.some(p => prefix.includes(p))) {\n          continue\n        }\n\n        let prefixed = this.prefixes.prefixed(prop, prefix)\n        if (prefixed !== '-ms-transform' && !names.includes(prefixed)) {\n          if (!this.disabled(prop, prefix)) {\n            added.push(this.clone(prop, prefixed, param))\n          }\n        }\n      }\n    }\n\n    params = params.concat(added)\n    let value = this.stringify(params)\n\n    let webkitClean = this.stringify(\n      this.cleanFromUnprefixed(params, '-webkit-')\n    )\n    if (declPrefixes.includes('-webkit-')) {\n      this.cloneBefore(decl, `-webkit-${decl.prop}`, webkitClean)\n    }\n    this.cloneBefore(decl, decl.prop, webkitClean)\n    if (declPrefixes.includes('-o-')) {\n      let operaClean = this.stringify(this.cleanFromUnprefixed(params, '-o-'))\n      this.cloneBefore(decl, `-o-${decl.prop}`, operaClean)\n    }\n\n    for (prefix of declPrefixes) {\n      if (prefix !== '-webkit-' && prefix !== '-o-') {\n        let prefixValue = this.stringify(\n          this.cleanOtherPrefixes(params, prefix)\n        )\n        this.cloneBefore(decl, prefix + decl.prop, prefixValue)\n      }\n    }\n\n    if (value !== decl.value && !this.already(decl, decl.prop, value)) {\n      this.checkForWarning(result, decl)\n      decl.cloneBefore()\n      decl.value = value\n    }\n  }\n\n  /**\n   * Find property name\n   */\n  findProp(param) {\n    let prop = param[0].value\n    if (/^\\d/.test(prop)) {\n      for (let [i, token] of param.entries()) {\n        if (i !== 0 && token.type === 'word') {\n          return token.value\n        }\n      }\n    }\n    return prop\n  }\n\n  /**\n   * Does we already have this declaration\n   */\n  already(decl, prop, value) {\n    return decl.parent.some(i => i.prop === prop && i.value === value)\n  }\n\n  /**\n   * Add declaration if it is not exist\n   */\n  cloneBefore(decl, prop, value) {\n    if (!this.already(decl, prop, value)) {\n      decl.cloneBefore({ prop, value })\n    }\n  }\n\n  /**\n   * Show transition-property warning\n   */\n  checkForWarning(result, decl) {\n    if (decl.prop !== 'transition-property') {\n      return\n    }\n\n    let isPrefixed = false\n    let hasAssociatedProp = false\n\n    decl.parent.each(i => {\n      if (i.type !== 'decl') {\n        return undefined\n      }\n      if (i.prop.indexOf('transition-') !== 0) {\n        return undefined\n      }\n      let values = list.comma(i.value)\n      // check if current Rule's transition-property comma separated value list needs prefixes\n      if (i.prop === 'transition-property') {\n        values.forEach(value => {\n          let lookup = this.prefixes.add[value]\n          if (lookup && lookup.prefixes && lookup.prefixes.length > 0) {\n            isPrefixed = true\n          }\n        })\n        return undefined\n      }\n      // check if another transition-* prop in current Rule has comma separated value list\n      hasAssociatedProp = hasAssociatedProp || values.length > 1\n      return false\n    })\n\n    if (isPrefixed && hasAssociatedProp) {\n      decl.warn(\n        result,\n        'Replace transition-property to transition, ' +\n          'because Autoprefixer could not support ' +\n          'any cases of transition-property ' +\n          'and other transition-*'\n      )\n    }\n  }\n\n  /**\n   * Process transition and remove all unnecessary properties\n   */\n  remove(decl) {\n    let params = this.parse(decl.value)\n    params = params.filter(i => {\n      let prop = this.prefixes.remove[this.findProp(i)]\n      return !prop || !prop.remove\n    })\n    let value = this.stringify(params)\n\n    if (decl.value === value) {\n      return\n    }\n\n    if (params.length === 0) {\n      decl.remove()\n      return\n    }\n\n    let double = decl.parent.some(i => {\n      return i.prop === decl.prop && i.value === value\n    })\n    let smaller = decl.parent.some(i => {\n      return i !== decl && i.prop === decl.prop && i.value.length > value.length\n    })\n\n    if (double || smaller) {\n      decl.remove()\n      return\n    }\n\n    decl.value = value\n  }\n\n  /**\n   * Parse properties list to array\n   */\n  parse(value) {\n    let ast = parser(value)\n    let result = []\n    let param = []\n    for (let node of ast.nodes) {\n      param.push(node)\n      if (node.type === 'div' && node.value === ',') {\n        result.push(param)\n        param = []\n      }\n    }\n    result.push(param)\n    return result.filter(i => i.length > 0)\n  }\n\n  /**\n   * Return properties string from array\n   */\n  stringify(params) {\n    if (params.length === 0) {\n      return ''\n    }\n    let nodes = []\n    for (let param of params) {\n      if (param[param.length - 1].type !== 'div') {\n        param.push(this.div(params))\n      }\n      nodes = nodes.concat(param)\n    }\n    if (nodes[0].type === 'div') {\n      nodes = nodes.slice(1)\n    }\n    if (nodes[nodes.length - 1].type === 'div') {\n      nodes = nodes.slice(0, +-2 + 1 || undefined)\n    }\n    return parser.stringify({ nodes })\n  }\n\n  /**\n   * Return new param array with different name\n   */\n  clone(origin, name, param) {\n    let result = []\n    let changed = false\n    for (let i of param) {\n      if (!changed && i.type === 'word' && i.value === origin) {\n        result.push({ type: 'word', value: name })\n        changed = true\n      } else {\n        result.push(i)\n      }\n    }\n    return result\n  }\n\n  /**\n   * Find or create separator\n   */\n  div(params) {\n    for (let param of params) {\n      for (let node of param) {\n        if (node.type === 'div' && node.value === ',') {\n          return node\n        }\n      }\n    }\n    return { type: 'div', value: ',', after: ' ' }\n  }\n\n  cleanOtherPrefixes(params, prefix) {\n    return params.filter(param => {\n      let current = vendor.prefix(this.findProp(param))\n      return current === '' || current === prefix\n    })\n  }\n\n  /**\n   * Remove all non-webkit prefixes and unprefixed params if we have prefixed\n   */\n  cleanFromUnprefixed(params, prefix) {\n    let remove = params\n      .map(i => this.findProp(i))\n      .filter(i => i.slice(0, prefix.length) === prefix)\n      .map(i => this.prefixes.unprefixed(i))\n\n    let result = []\n    for (let param of params) {\n      let prop = this.findProp(param)\n      let p = vendor.prefix(prop)\n      if (!remove.includes(prop) && (p === prefix || p === '')) {\n        result.push(param)\n      }\n    }\n    return result\n  }\n\n  /**\n   * Check property for disabled by option\n   */\n  disabled(prop, prefix) {\n    let other = ['order', 'justify-content', 'align-self', 'align-content']\n    if (prop.includes('flex') || other.includes(prop)) {\n      if (this.prefixes.options.flexbox === false) {\n        return true\n      }\n\n      if (this.prefixes.options.flexbox === 'no-2009') {\n        return prefix.includes('2009')\n      }\n    }\n    return undefined\n  }\n\n  /**\n   * Check if transition prop is inside vendor specific rule\n   */\n  ruleVendorPrefixes(decl) {\n    let { parent } = decl\n\n    if (parent.type !== 'rule') {\n      return false\n    } else if (!parent.selector.includes(':-')) {\n      return false\n    }\n\n    let selectors = Browsers.prefixes().filter(s =>\n      parent.selector.includes(':' + s)\n    )\n\n    return selectors.length > 0 ? selectors : false\n  }\n}\n\nmodule.exports = Transition\n", "let utils = require('./utils')\n\nclass OldValue {\n  constructor(unprefixed, prefixed, string, regexp) {\n    this.unprefixed = unprefixed\n    this.prefixed = prefixed\n    this.string = string || prefixed\n    this.regexp = regexp || utils.regexp(prefixed)\n  }\n\n  /**\n   * Check, that value contain old value\n   */\n  check(value) {\n    if (value.includes(this.string)) {\n      return !!value.match(this.regexp)\n    }\n    return false\n  }\n}\n\nmodule.exports = OldValue\n", "let Prefixer = require('./prefixer')\nlet OldValue = require('./old-value')\nlet vendor = require('./vendor')\nlet utils = require('./utils')\n\nclass Value extends Prefixer {\n  /**\n   * Clone decl for each prefixed values\n   */\n  static save(prefixes, decl) {\n    let prop = decl.prop\n    let result = []\n\n    for (let prefix in decl._autoprefixerValues) {\n      let value = decl._autoprefixerValues[prefix]\n\n      if (value === decl.value) {\n        continue\n      }\n\n      let item\n      let propPrefix = vendor.prefix(prop)\n\n      if (propPrefix === '-pie-') {\n        continue\n      }\n\n      if (propPrefix === prefix) {\n        item = decl.value = value\n        result.push(item)\n        continue\n      }\n\n      let prefixed = prefixes.prefixed(prop, prefix)\n      let rule = decl.parent\n\n      if (!rule.every(i => i.prop !== prefixed)) {\n        result.push(item)\n        continue\n      }\n\n      let trimmed = value.replace(/\\s+/, ' ')\n      let already = rule.some(\n        i => i.prop === decl.prop && i.value.replace(/\\s+/, ' ') === trimmed\n      )\n\n      if (already) {\n        result.push(item)\n        continue\n      }\n\n      let cloned = this.clone(decl, { value })\n      item = decl.parent.insertBefore(decl, cloned)\n\n      result.push(item)\n    }\n\n    return result\n  }\n\n  /**\n   * Is declaration need to be prefixed\n   */\n  check(decl) {\n    let value = decl.value\n    if (!value.includes(this.name)) {\n      return false\n    }\n\n    return !!value.match(this.regexp())\n  }\n\n  /**\n   * Lazy regexp loading\n   */\n  regexp() {\n    return this.regexpCache || (this.regexpCache = utils.regexp(this.name))\n  }\n\n  /**\n   * Add prefix to values in string\n   */\n  replace(string, prefix) {\n    return string.replace(this.regexp(), `$1${prefix}$2`)\n  }\n\n  /**\n   * Get value with comments if it was not changed\n   */\n  value(decl) {\n    if (decl.raws.value && decl.raws.value.value === decl.value) {\n      return decl.raws.value.raw\n    } else {\n      return decl.value\n    }\n  }\n\n  /**\n   * Save values with next prefixed token\n   */\n  add(decl, prefix) {\n    if (!decl._autoprefixerValues) {\n      decl._autoprefixerValues = {}\n    }\n    let value = decl._autoprefixerValues[prefix] || this.value(decl)\n\n    let before\n    do {\n      before = value\n      value = this.replace(value, prefix)\n      if (value === false) return\n    } while (value !== before)\n\n    decl._autoprefixerValues[prefix] = value\n  }\n\n  /**\n   * Return function to fast find prefixed value\n   */\n  old(prefix) {\n    return new OldValue(this.name, prefix + this.name)\n  }\n}\n\nmodule.exports = Value\n", "let parser = require('postcss-value-parser')\nlet list = require('postcss').list\n\nlet uniq = require('../utils').uniq\nlet escapeRegexp = require('../utils').escapeRegexp\nlet splitSelector = require('../utils').splitSelector\n\nfunction convert(value) {\n  if (\n    value &&\n    value.length === 2 &&\n    value[0] === 'span' &&\n    parseInt(value[1], 10) > 0\n  ) {\n    return [false, parseInt(value[1], 10)]\n  }\n\n  if (value && value.length === 1 && parseInt(value[0], 10) > 0) {\n    return [parseInt(value[0], 10), false]\n  }\n\n  return [false, false]\n}\n\nexports.translate = translate\n\nfunction translate(values, startIndex, endIndex) {\n  let startValue = values[startIndex]\n  let endValue = values[endIndex]\n\n  if (!startValue) {\n    return [false, false]\n  }\n\n  let [start, spanStart] = convert(startValue)\n  let [end, spanEnd] = convert(endValue)\n\n  if (start && !endValue) {\n    return [start, false]\n  }\n\n  if (spanStart && end) {\n    return [end - spanStart, spanStart]\n  }\n\n  if (start && spanEnd) {\n    return [start, spanEnd]\n  }\n\n  if (start && end) {\n    return [start, end - start]\n  }\n\n  return [false, false]\n}\n\nexports.parse = parse\n\nfunction parse(decl) {\n  let node = parser(decl.value)\n\n  let values = []\n  let current = 0\n  values[current] = []\n\n  for (let i of node.nodes) {\n    if (i.type === 'div') {\n      current += 1\n      values[current] = []\n    } else if (i.type === 'word') {\n      values[current].push(i.value)\n    }\n  }\n\n  return values\n}\n\nexports.insertDecl = insertDecl\n\nfunction insertDecl(decl, prop, value) {\n  if (value && !decl.parent.some(i => i.prop === `-ms-${prop}`)) {\n    decl.cloneBefore({\n      prop: `-ms-${prop}`,\n      value: value.toString()\n    })\n  }\n}\n\n// Track transforms\n\nexports.prefixTrackProp = prefixTrackProp\n\nfunction prefixTrackProp({ prop, prefix }) {\n  return prefix + prop.replace('template-', '')\n}\n\nfunction transformRepeat({ nodes }, { gap }) {\n  let { count, size } = nodes.reduce(\n    (result, node) => {\n      if (node.type === 'div' && node.value === ',') {\n        result.key = 'size'\n      } else {\n        result[result.key].push(parser.stringify(node))\n      }\n      return result\n    },\n    {\n      key: 'count',\n      size: [],\n      count: []\n    }\n  )\n\n  // insert gap values\n  if (gap) {\n    size = size.filter(i => i.trim())\n    let val = []\n    for (let i = 1; i <= count; i++) {\n      size.forEach((item, index) => {\n        if (index > 0 || i > 1) {\n          val.push(gap)\n        }\n        val.push(item)\n      })\n    }\n\n    return val.join(' ')\n  }\n\n  return `(${size.join('')})[${count.join('')}]`\n}\n\nexports.prefixTrackValue = prefixTrackValue\n\nfunction prefixTrackValue({ value, gap }) {\n  let result = parser(value).nodes.reduce((nodes, node) => {\n    if (node.type === 'function' && node.value === 'repeat') {\n      return nodes.concat({\n        type: 'word',\n        value: transformRepeat(node, { gap })\n      })\n    }\n    if (gap && node.type === 'space') {\n      return nodes.concat(\n        {\n          type: 'space',\n          value: ' '\n        },\n        {\n          type: 'word',\n          value: gap\n        },\n        node\n      )\n    }\n    return nodes.concat(node)\n  }, [])\n\n  return parser.stringify(result)\n}\n\n// Parse grid-template-areas\n\nlet DOTS = /^\\.+$/\n\nfunction track(start, end) {\n  return { start, end, span: end - start }\n}\n\nfunction getColumns(line) {\n  return line.trim().split(/\\s+/g)\n}\n\nexports.parseGridAreas = parseGridAreas\n\nfunction parseGridAreas({ rows, gap }) {\n  return rows.reduce((areas, line, rowIndex) => {\n    if (gap.row) rowIndex *= 2\n\n    if (line.trim() === '') return areas\n\n    getColumns(line).forEach((area, columnIndex) => {\n      if (DOTS.test(area)) return\n\n      if (gap.column) columnIndex *= 2\n\n      if (typeof areas[area] === 'undefined') {\n        areas[area] = {\n          column: track(columnIndex + 1, columnIndex + 2),\n          row: track(rowIndex + 1, rowIndex + 2)\n        }\n      } else {\n        let { column, row } = areas[area]\n\n        column.start = Math.min(column.start, columnIndex + 1)\n        column.end = Math.max(column.end, columnIndex + 2)\n        column.span = column.end - column.start\n\n        row.start = Math.min(row.start, rowIndex + 1)\n        row.end = Math.max(row.end, rowIndex + 2)\n        row.span = row.end - row.start\n      }\n    })\n\n    return areas\n  }, {})\n}\n\n// Parse grid-template\n\nfunction testTrack(node) {\n  return node.type === 'word' && /^\\[.+]$/.test(node.value)\n}\n\nfunction verifyRowSize(result) {\n  if (result.areas.length > result.rows.length) {\n    result.rows.push('auto')\n  }\n  return result\n}\n\nexports.parseTemplate = parseTemplate\n\nfunction parseTemplate({ decl, gap }) {\n  let gridTemplate = parser(decl.value).nodes.reduce(\n    (result, node) => {\n      let { type, value } = node\n\n      if (testTrack(node) || type === 'space') return result\n\n      // area\n      if (type === 'string') {\n        result = verifyRowSize(result)\n        result.areas.push(value)\n      }\n\n      // values and function\n      if (type === 'word' || type === 'function') {\n        result[result.key].push(parser.stringify(node))\n      }\n\n      // divider(/)\n      if (type === 'div' && value === '/') {\n        result.key = 'columns'\n        result = verifyRowSize(result)\n      }\n\n      return result\n    },\n    {\n      key: 'rows',\n      columns: [],\n      rows: [],\n      areas: []\n    }\n  )\n\n  return {\n    areas: parseGridAreas({\n      rows: gridTemplate.areas,\n      gap\n    }),\n    columns: prefixTrackValue({\n      value: gridTemplate.columns.join(' '),\n      gap: gap.column\n    }),\n    rows: prefixTrackValue({\n      value: gridTemplate.rows.join(' '),\n      gap: gap.row\n    })\n  }\n}\n\n// Insert parsed grid areas\n\n/**\n * Get an array of -ms- prefixed props and values\n * @param  {Object} [area] area object with column and row data\n * @param  {Boolean} [addRowSpan] should we add grid-column-row value?\n * @param  {Boolean} [addColumnSpan] should we add grid-column-span value?\n * @return {Array<Object>}\n */\nfunction getMSDecls(area, addRowSpan = false, addColumnSpan = false) {\n  let result = [\n    {\n      prop: '-ms-grid-row',\n      value: String(area.row.start)\n    }\n  ]\n  if (area.row.span > 1 || addRowSpan) {\n    result.push({\n      prop: '-ms-grid-row-span',\n      value: String(area.row.span)\n    })\n  }\n  result.push({\n    prop: '-ms-grid-column',\n    value: String(area.column.start)\n  })\n  if (area.column.span > 1 || addColumnSpan) {\n    result.push({\n      prop: '-ms-grid-column-span',\n      value: String(area.column.span)\n    })\n  }\n  return result\n}\n\nfunction getParentMedia(parent) {\n  if (parent.type === 'atrule' && parent.name === 'media') {\n    return parent\n  }\n  if (!parent.parent) {\n    return false\n  }\n  return getParentMedia(parent.parent)\n}\n\n/**\n * change selectors for rules with duplicate grid-areas.\n * @param  {Array<Rule>} rules\n * @param  {Array<String>} templateSelectors\n * @return {Array<Rule>} rules with changed selectors\n */\nfunction changeDuplicateAreaSelectors(ruleSelectors, templateSelectors) {\n  ruleSelectors = ruleSelectors.map(selector => {\n    let selectorBySpace = list.space(selector)\n    let selectorByComma = list.comma(selector)\n\n    if (selectorBySpace.length > selectorByComma.length) {\n      selector = selectorBySpace.slice(-1).join('')\n    }\n    return selector\n  })\n\n  return ruleSelectors.map(ruleSelector => {\n    let newSelector = templateSelectors.map((tplSelector, index) => {\n      let space = index === 0 ? '' : ' '\n      return `${space}${tplSelector} > ${ruleSelector}`\n    })\n\n    return newSelector\n  })\n}\n\n/**\n * check if selector of rules are equal\n * @param  {Rule} ruleA\n * @param  {Rule} ruleB\n * @return {Boolean}\n */\nfunction selectorsEqual(ruleA, ruleB) {\n  return ruleA.selectors.some(sel => {\n    return ruleB.selectors.includes(sel)\n  })\n}\n\n/**\n * Parse data from all grid-template(-areas) declarations\n * @param  {Root} css css root\n * @return {Object} parsed data\n */\nfunction parseGridTemplatesData(css) {\n  let parsed = []\n\n  // we walk through every grid-template(-areas) declaration and store\n  // data with the same area names inside the item\n  css.walkDecls(/grid-template(-areas)?$/, d => {\n    let rule = d.parent\n    let media = getParentMedia(rule)\n    let gap = getGridGap(d)\n    let inheritedGap = inheritGridGap(d, gap)\n    let { areas } = parseTemplate({ decl: d, gap: inheritedGap || gap })\n    let areaNames = Object.keys(areas)\n\n    // skip node if it doesn't have areas\n    if (areaNames.length === 0) {\n      return true\n    }\n\n    // check parsed array for item that include the same area names\n    // return index of that item\n    let index = parsed.reduce((acc, { allAreas }, idx) => {\n      let hasAreas = allAreas && areaNames.some(area => allAreas.includes(area))\n      return hasAreas ? idx : acc\n    }, null)\n\n    if (index !== null) {\n      // index is found, add the grid-template data to that item\n      let { allAreas, rules } = parsed[index]\n\n      // check if rule has no duplicate area names\n      let hasNoDuplicates = rules.some(r => {\n        return r.hasDuplicates === false && selectorsEqual(r, rule)\n      })\n\n      let duplicatesFound = false\n\n      // check need to gather all duplicate area names\n      let duplicateAreaNames = rules.reduce((acc, r) => {\n        if (!r.params && selectorsEqual(r, rule)) {\n          duplicatesFound = true\n          return r.duplicateAreaNames\n        }\n        if (!duplicatesFound) {\n          areaNames.forEach(name => {\n            if (r.areas[name]) {\n              acc.push(name)\n            }\n          })\n        }\n        return uniq(acc)\n      }, [])\n\n      // update grid-row/column-span values for areas with duplicate\n      // area names. @see #1084 and #1146\n      rules.forEach(r => {\n        areaNames.forEach(name => {\n          let area = r.areas[name]\n          if (area && area.row.span !== areas[name].row.span) {\n            areas[name].row.updateSpan = true\n          }\n\n          if (area && area.column.span !== areas[name].column.span) {\n            areas[name].column.updateSpan = true\n          }\n        })\n      })\n\n      parsed[index].allAreas = uniq([...allAreas, ...areaNames])\n      parsed[index].rules.push({\n        hasDuplicates: !hasNoDuplicates,\n        params: media.params,\n        selectors: rule.selectors,\n        node: rule,\n        duplicateAreaNames,\n        areas\n      })\n    } else {\n      // index is NOT found, push the new item to the parsed array\n      parsed.push({\n        allAreas: areaNames,\n        areasCount: 0,\n        rules: [\n          {\n            hasDuplicates: false,\n            duplicateRules: [],\n            params: media.params,\n            selectors: rule.selectors,\n            node: rule,\n            duplicateAreaNames: [],\n            areas\n          }\n        ]\n      })\n    }\n\n    return undefined\n  })\n\n  return parsed\n}\n\n/**\n * insert prefixed grid-area declarations\n * @param  {Root}  css css root\n * @param  {Function} isDisabled check if the rule is disabled\n * @return {void}\n */\nexports.insertAreas = insertAreas\n\nfunction insertAreas(css, isDisabled) {\n  // parse grid-template declarations\n  let gridTemplatesData = parseGridTemplatesData(css)\n\n  // return undefined if no declarations found\n  if (gridTemplatesData.length === 0) {\n    return undefined\n  }\n\n  // we need to store the rules that we will insert later\n  let rulesToInsert = {}\n\n  css.walkDecls('grid-area', gridArea => {\n    let gridAreaRule = gridArea.parent\n    let hasPrefixedRow = gridAreaRule.first.prop === '-ms-grid-row'\n    let gridAreaMedia = getParentMedia(gridAreaRule)\n\n    if (isDisabled(gridArea)) {\n      return undefined\n    }\n\n    let gridAreaRuleIndex = css.index(gridAreaMedia || gridAreaRule)\n\n    let value = gridArea.value\n    // found the data that matches grid-area identifier\n    let data = gridTemplatesData.filter(d => d.allAreas.includes(value))[0]\n\n    if (!data) {\n      return true\n    }\n\n    let lastArea = data.allAreas[data.allAreas.length - 1]\n    let selectorBySpace = list.space(gridAreaRule.selector)\n    let selectorByComma = list.comma(gridAreaRule.selector)\n    let selectorIsComplex =\n      selectorBySpace.length > 1 &&\n      selectorBySpace.length > selectorByComma.length\n\n    // prevent doubling of prefixes\n    if (hasPrefixedRow) {\n      return false\n    }\n\n    // create the empty object with the key as the last area name\n    // e.g if we have templates with \"a b c\" values, \"c\" will be the last area\n    if (!rulesToInsert[lastArea]) {\n      rulesToInsert[lastArea] = {}\n    }\n\n    let lastRuleIsSet = false\n\n    // walk through every grid-template rule data\n    for (let rule of data.rules) {\n      let area = rule.areas[value]\n      let hasDuplicateName = rule.duplicateAreaNames.includes(value)\n\n      // if we can't find the area name, update lastRule and continue\n      if (!area) {\n        let lastRule = rulesToInsert[lastArea].lastRule\n        let lastRuleIndex\n        if (lastRule) {\n          lastRuleIndex = css.index(lastRule)\n        } else {\n          /* c8 ignore next 2 */\n          lastRuleIndex = -1\n        }\n\n        if (gridAreaRuleIndex > lastRuleIndex) {\n          rulesToInsert[lastArea].lastRule = gridAreaMedia || gridAreaRule\n        }\n        continue\n      }\n\n      // for grid-templates inside media rule we need to create empty\n      // array to push prefixed grid-area rules later\n      if (rule.params && !rulesToInsert[lastArea][rule.params]) {\n        rulesToInsert[lastArea][rule.params] = []\n      }\n\n      if ((!rule.hasDuplicates || !hasDuplicateName) && !rule.params) {\n        // grid-template has no duplicates and not inside media rule\n\n        getMSDecls(area, false, false)\n          .reverse()\n          .forEach(i =>\n            gridAreaRule.prepend(\n              Object.assign(i, {\n                raws: {\n                  between: gridArea.raws.between\n                }\n              })\n            )\n          )\n\n        rulesToInsert[lastArea].lastRule = gridAreaRule\n        lastRuleIsSet = true\n      } else if (rule.hasDuplicates && !rule.params && !selectorIsComplex) {\n        // grid-template has duplicates and not inside media rule\n        let cloned = gridAreaRule.clone()\n        cloned.removeAll()\n\n        getMSDecls(area, area.row.updateSpan, area.column.updateSpan)\n          .reverse()\n          .forEach(i =>\n            cloned.prepend(\n              Object.assign(i, {\n                raws: {\n                  between: gridArea.raws.between\n                }\n              })\n            )\n          )\n\n        cloned.selectors = changeDuplicateAreaSelectors(\n          cloned.selectors,\n          rule.selectors\n        )\n\n        if (rulesToInsert[lastArea].lastRule) {\n          rulesToInsert[lastArea].lastRule.after(cloned)\n        }\n        rulesToInsert[lastArea].lastRule = cloned\n        lastRuleIsSet = true\n      } else if (\n        rule.hasDuplicates &&\n        !rule.params &&\n        selectorIsComplex &&\n        gridAreaRule.selector.includes(rule.selectors[0])\n      ) {\n        // grid-template has duplicates and not inside media rule\n        // and the selector is complex\n        gridAreaRule.walkDecls(/-ms-grid-(row|column)/, d => d.remove())\n        getMSDecls(area, area.row.updateSpan, area.column.updateSpan)\n          .reverse()\n          .forEach(i =>\n            gridAreaRule.prepend(\n              Object.assign(i, {\n                raws: {\n                  between: gridArea.raws.between\n                }\n              })\n            )\n          )\n      } else if (rule.params) {\n        // grid-template is inside media rule\n        // if we're inside media rule, we need to store prefixed rules\n        // inside rulesToInsert object to be able to preserve the order of media\n        // rules and merge them easily\n        let cloned = gridAreaRule.clone()\n        cloned.removeAll()\n\n        getMSDecls(area, area.row.updateSpan, area.column.updateSpan)\n          .reverse()\n          .forEach(i =>\n            cloned.prepend(\n              Object.assign(i, {\n                raws: {\n                  between: gridArea.raws.between\n                }\n              })\n            )\n          )\n\n        if (rule.hasDuplicates && hasDuplicateName) {\n          cloned.selectors = changeDuplicateAreaSelectors(\n            cloned.selectors,\n            rule.selectors\n          )\n        }\n\n        cloned.raws = rule.node.raws\n\n        if (css.index(rule.node.parent) > gridAreaRuleIndex) {\n          // append the prefixed rules right inside media rule\n          // with grid-template\n          rule.node.parent.append(cloned)\n        } else {\n          // store the rule to insert later\n          rulesToInsert[lastArea][rule.params].push(cloned)\n        }\n\n        // set new rule as last rule ONLY if we didn't set lastRule for\n        // this grid-area before\n        if (!lastRuleIsSet) {\n          rulesToInsert[lastArea].lastRule = gridAreaMedia || gridAreaRule\n        }\n      }\n    }\n\n    return undefined\n  })\n\n  // append stored rules inside the media rules\n  Object.keys(rulesToInsert).forEach(area => {\n    let data = rulesToInsert[area]\n    let lastRule = data.lastRule\n    Object.keys(data)\n      .reverse()\n      .filter(p => p !== 'lastRule')\n      .forEach(params => {\n        if (data[params].length > 0 && lastRule) {\n          lastRule.after({ name: 'media', params })\n          lastRule.next().append(data[params])\n        }\n      })\n  })\n\n  return undefined\n}\n\n/**\n * Warn user if grid area identifiers are not found\n * @param  {Object} areas\n * @param  {Declaration} decl\n * @param  {Result} result\n * @return {void}\n */\nexports.warnMissedAreas = warnMissedAreas\n\nfunction warnMissedAreas(areas, decl, result) {\n  let missed = Object.keys(areas)\n\n  decl.root().walkDecls('grid-area', gridArea => {\n    missed = missed.filter(e => e !== gridArea.value)\n  })\n\n  if (missed.length > 0) {\n    decl.warn(result, 'Can not find grid areas: ' + missed.join(', '))\n  }\n\n  return undefined\n}\n\n/**\n * compare selectors with grid-area rule and grid-template rule\n * show warning if grid-template selector is not found\n * (this function used for grid-area rule)\n * @param  {Declaration} decl\n * @param  {Result} result\n * @return {void}\n */\nexports.warnTemplateSelectorNotFound = warnTemplateSelectorNotFound\n\nfunction warnTemplateSelectorNotFound(decl, result) {\n  let rule = decl.parent\n  let root = decl.root()\n  let duplicatesFound = false\n\n  // slice selector array. Remove the last part (for comparison)\n  let slicedSelectorArr = list\n    .space(rule.selector)\n    .filter(str => str !== '>')\n    .slice(0, -1)\n\n  // we need to compare only if selector is complex.\n  // e.g '.grid-cell' is simple, but '.parent > .grid-cell' is complex\n  if (slicedSelectorArr.length > 0) {\n    let gridTemplateFound = false\n    let foundAreaSelector = null\n\n    root.walkDecls(/grid-template(-areas)?$/, d => {\n      let parent = d.parent\n      let templateSelectors = parent.selectors\n\n      let { areas } = parseTemplate({ decl: d, gap: getGridGap(d) })\n      let hasArea = areas[decl.value]\n\n      // find the the matching selectors\n      for (let tplSelector of templateSelectors) {\n        if (gridTemplateFound) {\n          break\n        }\n        let tplSelectorArr = list.space(tplSelector).filter(str => str !== '>')\n\n        gridTemplateFound = tplSelectorArr.every(\n          (item, idx) => item === slicedSelectorArr[idx]\n        )\n      }\n\n      if (gridTemplateFound || !hasArea) {\n        return true\n      }\n\n      if (!foundAreaSelector) {\n        foundAreaSelector = parent.selector\n      }\n\n      // if we found the duplicate area with different selector\n      if (foundAreaSelector && foundAreaSelector !== parent.selector) {\n        duplicatesFound = true\n      }\n\n      return undefined\n    })\n\n    // warn user if we didn't find template\n    if (!gridTemplateFound && duplicatesFound) {\n      decl.warn(\n        result,\n        'Autoprefixer cannot find a grid-template ' +\n          `containing the duplicate grid-area \"${decl.value}\" ` +\n          `with full selector matching: ${slicedSelectorArr.join(' ')}`\n      )\n    }\n  }\n}\n\n/**\n * warn user if both grid-area and grid-(row|column)\n * declarations are present in the same rule\n * @param  {Declaration} decl\n * @param  {Result} result\n * @return {void}\n */\nexports.warnIfGridRowColumnExists = warnIfGridRowColumnExists\n\nfunction warnIfGridRowColumnExists(decl, result) {\n  let rule = decl.parent\n  let decls = []\n  rule.walkDecls(/^grid-(row|column)/, d => {\n    if (\n      !d.prop.endsWith('-end') &&\n      !d.value.startsWith('span') &&\n      !d.prop.endsWith('-gap')\n    ) {\n      decls.push(d)\n    }\n  })\n  if (decls.length > 0) {\n    decls.forEach(d => {\n      d.warn(\n        result,\n        'You already have a grid-area declaration present in the rule. ' +\n          `You should use either grid-area or ${d.prop}, not both`\n      )\n    })\n  }\n\n  return undefined\n}\n\n// Gap utils\n\nexports.getGridGap = getGridGap\n\nfunction getGridGap(decl) {\n  let gap = {}\n\n  // try to find gap\n  let testGap = /^(grid-)?((row|column)-)?gap$/\n  decl.parent.walkDecls(testGap, ({ prop, value }) => {\n    if (/^(grid-)?gap$/.test(prop)) {\n      let [row, , column] = parser(value).nodes\n\n      gap.row = row && parser.stringify(row)\n      gap.column = column ? parser.stringify(column) : gap.row\n    }\n    if (/^(grid-)?row-gap$/.test(prop)) gap.row = value\n    if (/^(grid-)?column-gap$/.test(prop)) gap.column = value\n  })\n\n  return gap\n}\n\n/**\n * parse media parameters (for example 'min-width: 500px')\n * @param  {String} params parameter to parse\n * @return {}\n */\nfunction parseMediaParams(params) {\n  if (!params) {\n    return []\n  }\n  let parsed = parser(params)\n  let prop\n  let value\n\n  parsed.walk(node => {\n    if (node.type === 'word' && /min|max/g.test(node.value)) {\n      prop = node.value\n    } else if (node.value.includes('px')) {\n      value = parseInt(node.value.replace(/\\D/g, ''))\n    }\n  })\n\n  return [prop, value]\n}\n\n/**\n * Compare the selectors and decide if we\n * need to inherit gap from compared selector or not.\n * @type {String} selA\n * @type {String} selB\n * @return {Boolean}\n */\nfunction shouldInheritGap(selA, selB) {\n  let result\n\n  // get arrays of selector split in 3-deep array\n  let splitSelectorArrA = splitSelector(selA)\n  let splitSelectorArrB = splitSelector(selB)\n\n  if (splitSelectorArrA[0].length < splitSelectorArrB[0].length) {\n    // abort if selectorA has lower descendant specificity then selectorB\n    // (e.g '.grid' and '.hello .world .grid')\n    return false\n  } else if (splitSelectorArrA[0].length > splitSelectorArrB[0].length) {\n    // if selectorA has higher descendant specificity then selectorB\n    // (e.g '.foo .bar .grid' and '.grid')\n\n    let idx = splitSelectorArrA[0].reduce((res, [item], index) => {\n      let firstSelectorPart = splitSelectorArrB[0][0][0]\n      if (item === firstSelectorPart) {\n        return index\n      }\n      return false\n    }, false)\n\n    if (idx) {\n      result = splitSelectorArrB[0].every((arr, index) => {\n        return arr.every(\n          (part, innerIndex) =>\n            // because selectorA has more space elements, we need to slice\n            // selectorA array by 'idx' number to compare them\n            splitSelectorArrA[0].slice(idx)[index][innerIndex] === part\n        )\n      })\n    }\n  } else {\n    // if selectorA has the same descendant specificity as selectorB\n    // this condition covers cases such as: '.grid.foo.bar' and '.grid'\n    result = splitSelectorArrB.some(byCommaArr => {\n      return byCommaArr.every((bySpaceArr, index) => {\n        return bySpaceArr.every(\n          (part, innerIndex) => splitSelectorArrA[0][index][innerIndex] === part\n        )\n      })\n    })\n  }\n\n  return result\n}\n/**\n * inherit grid gap values from the closest rule above\n * with the same selector\n * @param  {Declaration} decl\n * @param  {Object} gap gap values\n * @return {Object | Boolean} return gap values or false (if not found)\n */\nexports.inheritGridGap = inheritGridGap\n\nfunction inheritGridGap(decl, gap) {\n  let rule = decl.parent\n  let mediaRule = getParentMedia(rule)\n  let root = rule.root()\n\n  // get an array of selector split in 3-deep array\n  let splitSelectorArr = splitSelector(rule.selector)\n\n  // abort if the rule already has gaps\n  if (Object.keys(gap).length > 0) {\n    return false\n  }\n\n  // e.g ['min-width']\n  let [prop] = parseMediaParams(mediaRule.params)\n\n  let lastBySpace = splitSelectorArr[0]\n\n  // get escaped value from the selector\n  // if we have '.grid-2.foo.bar' selector, will be '\\.grid\\-2'\n  let escaped = escapeRegexp(lastBySpace[lastBySpace.length - 1][0])\n\n  let regexp = new RegExp(`(${escaped}$)|(${escaped}[,.])`)\n\n  // find the closest rule with the same selector\n  let closestRuleGap\n  root.walkRules(regexp, r => {\n    let gridGap\n\n    // abort if are checking the same rule\n    if (rule.toString() === r.toString()) {\n      return false\n    }\n\n    // find grid-gap values\n    r.walkDecls('grid-gap', d => (gridGap = getGridGap(d)))\n\n    // skip rule without gaps\n    if (!gridGap || Object.keys(gridGap).length === 0) {\n      return true\n    }\n\n    // skip rules that should not be inherited from\n    if (!shouldInheritGap(rule.selector, r.selector)) {\n      return true\n    }\n\n    let media = getParentMedia(r)\n    if (media) {\n      // if we are inside media, we need to check that media props match\n      // e.g ('min-width' === 'min-width')\n      let propToCompare = parseMediaParams(media.params)[0]\n      if (propToCompare === prop) {\n        closestRuleGap = gridGap\n        return true\n      }\n    } else {\n      closestRuleGap = gridGap\n      return true\n    }\n\n    return undefined\n  })\n\n  // if we find the closest gap object\n  if (closestRuleGap && Object.keys(closestRuleGap).length > 0) {\n    return closestRuleGap\n  }\n  return false\n}\n\nexports.warnGridGap = warnGridGap\n\nfunction warnGridGap({ gap, hasColumns, decl, result }) {\n  let hasBothGaps = gap.row && gap.column\n  if (!hasColumns && (hasBothGaps || (gap.column && !gap.row))) {\n    delete gap.column\n    decl.warn(\n      result,\n      'Can not implement grid-gap without grid-template-columns'\n    )\n  }\n}\n\n/**\n * normalize the grid-template-rows/columns values\n * @param  {String} str grid-template-rows/columns value\n * @return {Array} normalized array with values\n * @example\n * let normalized = normalizeRowColumn('1fr repeat(2, 20px 50px) 1fr')\n * normalized // <= ['1fr', '20px', '50px', '20px', '50px', '1fr']\n */\nfunction normalizeRowColumn(str) {\n  let normalized = parser(str).nodes.reduce((result, node) => {\n    if (node.type === 'function' && node.value === 'repeat') {\n      let key = 'count'\n\n      let [count, value] = node.nodes.reduce(\n        (acc, n) => {\n          if (n.type === 'word' && key === 'count') {\n            acc[0] = Math.abs(parseInt(n.value))\n            return acc\n          }\n          if (n.type === 'div' && n.value === ',') {\n            key = 'value'\n            return acc\n          }\n          if (key === 'value') {\n            acc[1] += parser.stringify(n)\n          }\n          return acc\n        },\n        [0, '']\n      )\n\n      if (count) {\n        for (let i = 0; i < count; i++) {\n          result.push(value)\n        }\n      }\n\n      return result\n    }\n    if (node.type === 'space') {\n      return result\n    }\n    return result.concat(parser.stringify(node))\n  }, [])\n\n  return normalized\n}\n\nexports.autoplaceGridItems = autoplaceGridItems\n\n/**\n * Autoplace grid items\n * @param {Declaration} decl\n * @param {Result} result\n * @param {Object} gap gap values\n * @param {String} autoflowValue grid-auto-flow value\n * @return {void}\n * @see https://github.com/postcss/autoprefixer/issues/1148\n */\nfunction autoplaceGridItems(decl, result, gap, autoflowValue = 'row') {\n  let { parent } = decl\n\n  let rowDecl = parent.nodes.find(i => i.prop === 'grid-template-rows')\n  let rows = normalizeRowColumn(rowDecl.value)\n  let columns = normalizeRowColumn(decl.value)\n\n  // Build array of area names with dummy values. If we have 3 columns and\n  // 2 rows, filledRows will be equal to ['1 2 3', '4 5 6']\n  let filledRows = rows.map((_, rowIndex) => {\n    return Array.from(\n      { length: columns.length },\n      (v, k) => k + rowIndex * columns.length + 1\n    ).join(' ')\n  })\n\n  let areas = parseGridAreas({ rows: filledRows, gap })\n  let keys = Object.keys(areas)\n  let items = keys.map(i => areas[i])\n\n  // Change the order of cells if grid-auto-flow value is 'column'\n  if (autoflowValue.includes('column')) {\n    items = items.sort((a, b) => a.column.start - b.column.start)\n  }\n\n  // Insert new rules\n  items.reverse().forEach((item, index) => {\n    let { column, row } = item\n    let nodeSelector = parent.selectors\n      .map(sel => sel + ` > *:nth-child(${keys.length - index})`)\n      .join(', ')\n\n    // create new rule\n    let node = parent.clone().removeAll()\n\n    // change rule selector\n    node.selector = nodeSelector\n\n    // insert prefixed row/column values\n    node.append({ prop: '-ms-grid-row', value: row.start })\n    node.append({ prop: '-ms-grid-column', value: column.start })\n\n    // insert rule\n    parent.after(node)\n  })\n\n  return undefined\n}\n", "let parser = require('postcss-value-parser')\n\nlet Value = require('./value')\nlet insertAreas = require('./hacks/grid-utils').insertAreas\n\nconst OLD_LINEAR = /(^|[^-])linear-gradient\\(\\s*(top|left|right|bottom)/i\nconst OLD_RADIAL = /(^|[^-])radial-gradient\\(\\s*\\d+(\\w*|%)\\s+\\d+(\\w*|%)\\s*,/i\nconst IGNORE_NEXT = /(!\\s*)?autoprefixer:\\s*ignore\\s+next/i\nconst GRID_REGEX = /(!\\s*)?autoprefixer\\s*grid:\\s*(on|off|(no-)?autoplace)/i\n\nconst SIZES = [\n  'width',\n  'height',\n  'min-width',\n  'max-width',\n  'min-height',\n  'max-height',\n  'inline-size',\n  'min-inline-size',\n  'max-inline-size',\n  'block-size',\n  'min-block-size',\n  'max-block-size'\n]\n\nfunction hasGridTemplate(decl) {\n  return decl.parent.some(\n    i => i.prop === 'grid-template' || i.prop === 'grid-template-areas'\n  )\n}\n\nfunction hasRowsAndColumns(decl) {\n  let hasRows = decl.parent.some(i => i.prop === 'grid-template-rows')\n  let hasColumns = decl.parent.some(i => i.prop === 'grid-template-columns')\n  return hasRows && hasColumns\n}\n\nclass Processor {\n  constructor(prefixes) {\n    this.prefixes = prefixes\n  }\n\n  /**\n   * Add necessary prefixes\n   */\n  add(css, result) {\n    // At-rules\n    let resolution = this.prefixes.add['@resolution']\n    let keyframes = this.prefixes.add['@keyframes']\n    let viewport = this.prefixes.add['@viewport']\n    let supports = this.prefixes.add['@supports']\n\n    css.walkAtRules(rule => {\n      if (rule.name === 'keyframes') {\n        if (!this.disabled(rule, result)) {\n          return keyframes && keyframes.process(rule)\n        }\n      } else if (rule.name === 'viewport') {\n        if (!this.disabled(rule, result)) {\n          return viewport && viewport.process(rule)\n        }\n      } else if (rule.name === 'supports') {\n        if (\n          this.prefixes.options.supports !== false &&\n          !this.disabled(rule, result)\n        ) {\n          return supports.process(rule)\n        }\n      } else if (rule.name === 'media' && rule.params.includes('-resolution')) {\n        if (!this.disabled(rule, result)) {\n          return resolution && resolution.process(rule)\n        }\n      }\n\n      return undefined\n    })\n\n    // Selectors\n    css.walkRules(rule => {\n      if (this.disabled(rule, result)) return undefined\n\n      return this.prefixes.add.selectors.map(selector => {\n        return selector.process(rule, result)\n      })\n    })\n\n    function insideGrid(decl) {\n      return decl.parent.nodes.some(node => {\n        if (node.type !== 'decl') return false\n        let displayGrid =\n          node.prop === 'display' && /(inline-)?grid/.test(node.value)\n        let gridTemplate = node.prop.startsWith('grid-template')\n        let gridGap = /^grid-([A-z]+-)?gap/.test(node.prop)\n        return displayGrid || gridTemplate || gridGap\n      })\n    }\n    function insideFlex(decl) {\n      return decl.parent.some(node => {\n        return node.prop === 'display' && /(inline-)?flex/.test(node.value)\n      })\n    }\n\n    let gridPrefixes =\n      this.gridStatus(css, result) &&\n      this.prefixes.add['grid-area'] &&\n      this.prefixes.add['grid-area'].prefixes\n\n    css.walkDecls(decl => {\n      if (this.disabledDecl(decl, result)) return undefined\n\n      let parent = decl.parent\n      let prop = decl.prop\n      let value = decl.value\n\n      if (prop === 'color-adjust') {\n        if (parent.every(i => i.prop !== 'print-color-adjust')) {\n          result.warn(\n            'Replace color-adjust to print-color-adjust. ' +\n              'The color-adjust shorthand is currently deprecated.',\n            { node: decl }\n          )\n        }\n      } else if (prop === 'grid-row-span') {\n        result.warn(\n          'grid-row-span is not part of final Grid Layout. Use grid-row.',\n          { node: decl }\n        )\n        return undefined\n      } else if (prop === 'grid-column-span') {\n        result.warn(\n          'grid-column-span is not part of final Grid Layout. Use grid-column.',\n          { node: decl }\n        )\n        return undefined\n      } else if (prop === 'display' && value === 'box') {\n        result.warn(\n          'You should write display: flex by final spec ' +\n            'instead of display: box',\n          { node: decl }\n        )\n        return undefined\n      } else if (prop === 'text-emphasis-position') {\n        if (value === 'under' || value === 'over') {\n          result.warn(\n            'You should use 2 values for text-emphasis-position ' +\n              'For example, `under left` instead of just `under`.',\n            { node: decl }\n          )\n        }\n      } else if (\n        /^(align|justify|place)-(items|content)$/.test(prop) &&\n        insideFlex(decl)\n      ) {\n        if (value === 'start' || value === 'end') {\n          result.warn(\n            `${value} value has mixed support, consider using ` +\n              `flex-${value} instead`,\n            { node: decl }\n          )\n        }\n      } else if (prop === 'text-decoration-skip' && value === 'ink') {\n        result.warn(\n          'Replace text-decoration-skip: ink to ' +\n            'text-decoration-skip-ink: auto, because spec had been changed',\n          { node: decl }\n        )\n      } else {\n        if (gridPrefixes && this.gridStatus(decl, result)) {\n          if (decl.value === 'subgrid') {\n            result.warn('IE does not support subgrid', { node: decl })\n          }\n          if (/^(align|justify|place)-items$/.test(prop) && insideGrid(decl)) {\n            let fixed = prop.replace('-items', '-self')\n            result.warn(\n              `IE does not support ${prop} on grid containers. ` +\n                `Try using ${fixed} on child elements instead: ` +\n                `${decl.parent.selector} > * { ${fixed}: ${decl.value} }`,\n              { node: decl }\n            )\n          } else if (\n            /^(align|justify|place)-content$/.test(prop) &&\n            insideGrid(decl)\n          ) {\n            result.warn(`IE does not support ${decl.prop} on grid containers`, {\n              node: decl\n            })\n          } else if (prop === 'display' && decl.value === 'contents') {\n            result.warn(\n              'Please do not use display: contents; ' +\n                'if you have grid setting enabled',\n              { node: decl }\n            )\n            return undefined\n          } else if (decl.prop === 'grid-gap') {\n            let status = this.gridStatus(decl, result)\n            if (\n              status === 'autoplace' &&\n              !hasRowsAndColumns(decl) &&\n              !hasGridTemplate(decl)\n            ) {\n              result.warn(\n                'grid-gap only works if grid-template(-areas) is being ' +\n                  'used or both rows and columns have been declared ' +\n                  'and cells have not been manually ' +\n                  'placed inside the explicit grid',\n                { node: decl }\n              )\n            } else if (\n              (status === true || status === 'no-autoplace') &&\n              !hasGridTemplate(decl)\n            ) {\n              result.warn(\n                'grid-gap only works if grid-template(-areas) is being used',\n                { node: decl }\n              )\n            }\n          } else if (prop === 'grid-auto-columns') {\n            result.warn('grid-auto-columns is not supported by IE', {\n              node: decl\n            })\n            return undefined\n          } else if (prop === 'grid-auto-rows') {\n            result.warn('grid-auto-rows is not supported by IE', { node: decl })\n            return undefined\n          } else if (prop === 'grid-auto-flow') {\n            let hasRows = parent.some(i => i.prop === 'grid-template-rows')\n            let hasCols = parent.some(i => i.prop === 'grid-template-columns')\n\n            if (hasGridTemplate(decl)) {\n              result.warn('grid-auto-flow is not supported by IE', {\n                node: decl\n              })\n            } else if (value.includes('dense')) {\n              result.warn('grid-auto-flow: dense is not supported by IE', {\n                node: decl\n              })\n            } else if (!hasRows && !hasCols) {\n              result.warn(\n                'grid-auto-flow works only if grid-template-rows and ' +\n                  'grid-template-columns are present in the same rule',\n                { node: decl }\n              )\n            }\n            return undefined\n          } else if (value.includes('auto-fit')) {\n            result.warn('auto-fit value is not supported by IE', {\n              node: decl,\n              word: 'auto-fit'\n            })\n            return undefined\n          } else if (value.includes('auto-fill')) {\n            result.warn('auto-fill value is not supported by IE', {\n              node: decl,\n              word: 'auto-fill'\n            })\n            return undefined\n          } else if (prop.startsWith('grid-template') && value.includes('[')) {\n            result.warn(\n              'Autoprefixer currently does not support line names. ' +\n                'Try using grid-template-areas instead.',\n              { node: decl, word: '[' }\n            )\n          }\n        }\n        if (value.includes('radial-gradient')) {\n          if (OLD_RADIAL.test(decl.value)) {\n            result.warn(\n              'Gradient has outdated direction syntax. ' +\n                'New syntax is like `closest-side at 0 0` ' +\n                'instead of `0 0, closest-side`.',\n              { node: decl }\n            )\n          } else {\n            let ast = parser(value)\n\n            for (let i of ast.nodes) {\n              if (i.type === 'function' && i.value === 'radial-gradient') {\n                for (let word of i.nodes) {\n                  if (word.type === 'word') {\n                    if (word.value === 'cover') {\n                      result.warn(\n                        'Gradient has outdated direction syntax. ' +\n                          'Replace `cover` to `farthest-corner`.',\n                        { node: decl }\n                      )\n                    } else if (word.value === 'contain') {\n                      result.warn(\n                        'Gradient has outdated direction syntax. ' +\n                          'Replace `contain` to `closest-side`.',\n                        { node: decl }\n                      )\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (value.includes('linear-gradient')) {\n          if (OLD_LINEAR.test(value)) {\n            result.warn(\n              'Gradient has outdated direction syntax. ' +\n                'New syntax is like `to left` instead of `right`.',\n              { node: decl }\n            )\n          }\n        }\n      }\n\n      if (SIZES.includes(decl.prop)) {\n        if (!decl.value.includes('-fill-available')) {\n          if (decl.value.includes('fill-available')) {\n            result.warn(\n              'Replace fill-available to stretch, ' +\n                'because spec had been changed',\n              { node: decl }\n            )\n          } else if (decl.value.includes('fill')) {\n            let ast = parser(value)\n            if (ast.nodes.some(i => i.type === 'word' && i.value === 'fill')) {\n              result.warn(\n                'Replace fill to stretch, because spec had been changed',\n                { node: decl }\n              )\n            }\n          }\n        }\n      }\n\n      let prefixer\n\n      if (decl.prop === 'transition' || decl.prop === 'transition-property') {\n        // Transition\n        return this.prefixes.transition.add(decl, result)\n      } else if (decl.prop === 'align-self') {\n        // align-self flexbox or grid\n        let display = this.displayType(decl)\n        if (display !== 'grid' && this.prefixes.options.flexbox !== false) {\n          prefixer = this.prefixes.add['align-self']\n          if (prefixer && prefixer.prefixes) {\n            prefixer.process(decl)\n          }\n        }\n        if (this.gridStatus(decl, result) !== false) {\n          prefixer = this.prefixes.add['grid-row-align']\n          if (prefixer && prefixer.prefixes) {\n            return prefixer.process(decl, result)\n          }\n        }\n      } else if (decl.prop === 'justify-self') {\n        // justify-self flexbox or grid\n        if (this.gridStatus(decl, result) !== false) {\n          prefixer = this.prefixes.add['grid-column-align']\n          if (prefixer && prefixer.prefixes) {\n            return prefixer.process(decl, result)\n          }\n        }\n      } else if (decl.prop === 'place-self') {\n        prefixer = this.prefixes.add['place-self']\n        if (\n          prefixer &&\n          prefixer.prefixes &&\n          this.gridStatus(decl, result) !== false\n        ) {\n          return prefixer.process(decl, result)\n        }\n      } else {\n        // Properties\n        prefixer = this.prefixes.add[decl.prop]\n        if (prefixer && prefixer.prefixes) {\n          return prefixer.process(decl, result)\n        }\n      }\n\n      return undefined\n    })\n\n    // Insert grid-area prefixes. We need to be able to store the different\n    // rules as a data and hack API is not enough for this\n    if (this.gridStatus(css, result)) {\n      insertAreas(css, this.disabled)\n    }\n\n    // Values\n    return css.walkDecls(decl => {\n      if (this.disabledValue(decl, result)) return\n\n      let unprefixed = this.prefixes.unprefixed(decl.prop)\n      let list = this.prefixes.values('add', unprefixed)\n      if (Array.isArray(list)) {\n        for (let value of list) {\n          if (value.process) value.process(decl, result)\n        }\n      }\n      Value.save(this.prefixes, decl)\n    })\n  }\n\n  /**\n   * Remove unnecessary pefixes\n   */\n  remove(css, result) {\n    // At-rules\n    let resolution = this.prefixes.remove['@resolution']\n\n    css.walkAtRules((rule, i) => {\n      if (this.prefixes.remove[`@${rule.name}`]) {\n        if (!this.disabled(rule, result)) {\n          rule.parent.removeChild(i)\n        }\n      } else if (\n        rule.name === 'media' &&\n        rule.params.includes('-resolution') &&\n        resolution\n      ) {\n        resolution.clean(rule)\n      }\n    })\n\n    // Selectors\n    for (let checker of this.prefixes.remove.selectors) {\n      css.walkRules((rule, i) => {\n        if (checker.check(rule)) {\n          if (!this.disabled(rule, result)) {\n            rule.parent.removeChild(i)\n          }\n        }\n      })\n    }\n\n    return css.walkDecls((decl, i) => {\n      if (this.disabled(decl, result)) return\n\n      let rule = decl.parent\n      let unprefixed = this.prefixes.unprefixed(decl.prop)\n\n      // Transition\n      if (decl.prop === 'transition' || decl.prop === 'transition-property') {\n        this.prefixes.transition.remove(decl)\n      }\n\n      // Properties\n      if (\n        this.prefixes.remove[decl.prop] &&\n        this.prefixes.remove[decl.prop].remove\n      ) {\n        let notHack = this.prefixes.group(decl).down(other => {\n          return this.prefixes.normalize(other.prop) === unprefixed\n        })\n\n        if (unprefixed === 'flex-flow') {\n          notHack = true\n        }\n\n        if (decl.prop === '-webkit-box-orient') {\n          let hacks = { 'flex-direction': true, 'flex-flow': true }\n          if (!decl.parent.some(j => hacks[j.prop])) return\n        }\n\n        if (notHack && !this.withHackValue(decl)) {\n          if (decl.raw('before').includes('\\n')) {\n            this.reduceSpaces(decl)\n          }\n          rule.removeChild(i)\n          return\n        }\n      }\n\n      // Values\n      for (let checker of this.prefixes.values('remove', unprefixed)) {\n        if (!checker.check) continue\n        if (!checker.check(decl.value)) continue\n\n        unprefixed = checker.unprefixed\n        let notHack = this.prefixes.group(decl).down(other => {\n          return other.value.includes(unprefixed)\n        })\n\n        if (notHack) {\n          rule.removeChild(i)\n          return\n        }\n      }\n    })\n  }\n\n  /**\n   * Some rare old values, which is not in standard\n   */\n  withHackValue(decl) {\n    return decl.prop === '-webkit-background-clip' && decl.value === 'text'\n  }\n\n  /**\n   * Check for grid/flexbox options.\n   */\n  disabledValue(node, result) {\n    if (this.gridStatus(node, result) === false && node.type === 'decl') {\n      if (node.prop === 'display' && node.value.includes('grid')) {\n        return true\n      }\n    }\n    if (this.prefixes.options.flexbox === false && node.type === 'decl') {\n      if (node.prop === 'display' && node.value.includes('flex')) {\n        return true\n      }\n    }\n    if (node.type === 'decl' && node.prop === 'content') {\n      return true\n    }\n\n    return this.disabled(node, result)\n  }\n\n  /**\n   * Check for grid/flexbox options.\n   */\n  disabledDecl(node, result) {\n    if (this.gridStatus(node, result) === false && node.type === 'decl') {\n      if (node.prop.includes('grid') || node.prop === 'justify-items') {\n        return true\n      }\n    }\n    if (this.prefixes.options.flexbox === false && node.type === 'decl') {\n      let other = ['order', 'justify-content', 'align-items', 'align-content']\n      if (node.prop.includes('flex') || other.includes(node.prop)) {\n        return true\n      }\n    }\n\n    return this.disabled(node, result)\n  }\n\n  /**\n   * Check for control comment and global options\n   */\n  disabled(node, result) {\n    if (!node) return false\n\n    if (node._autoprefixerDisabled !== undefined) {\n      return node._autoprefixerDisabled\n    }\n\n    if (node.parent) {\n      let p = node.prev()\n      if (p && p.type === 'comment' && IGNORE_NEXT.test(p.text)) {\n        node._autoprefixerDisabled = true\n        node._autoprefixerSelfDisabled = true\n        return true\n      }\n    }\n\n    let value = null\n    if (node.nodes) {\n      let status\n      node.each(i => {\n        if (i.type !== 'comment') return\n        if (/(!\\s*)?autoprefixer:\\s*(off|on)/i.test(i.text)) {\n          if (typeof status !== 'undefined') {\n            result.warn(\n              'Second Autoprefixer control comment ' +\n                'was ignored. Autoprefixer applies control ' +\n                'comment to whole block, not to next rules.',\n              { node: i }\n            )\n          } else {\n            status = /on/i.test(i.text)\n          }\n        }\n      })\n\n      if (status !== undefined) {\n        value = !status\n      }\n    }\n    if (!node.nodes || value === null) {\n      if (node.parent) {\n        let isParentDisabled = this.disabled(node.parent, result)\n        if (node.parent._autoprefixerSelfDisabled === true) {\n          value = false\n        } else {\n          value = isParentDisabled\n        }\n      } else {\n        value = false\n      }\n    }\n    node._autoprefixerDisabled = value\n    return value\n  }\n\n  /**\n   * Normalize spaces in cascade declaration group\n   */\n  reduceSpaces(decl) {\n    let stop = false\n    this.prefixes.group(decl).up(() => {\n      stop = true\n      return true\n    })\n    if (stop) {\n      return\n    }\n\n    let parts = decl.raw('before').split('\\n')\n    let prevMin = parts[parts.length - 1].length\n    let diff = false\n\n    this.prefixes.group(decl).down(other => {\n      parts = other.raw('before').split('\\n')\n      let last = parts.length - 1\n\n      if (parts[last].length > prevMin) {\n        if (diff === false) {\n          diff = parts[last].length - prevMin\n        }\n\n        parts[last] = parts[last].slice(0, -diff)\n        other.raws.before = parts.join('\\n')\n      }\n    })\n  }\n\n  /**\n   * Is it flebox or grid rule\n   */\n  displayType(decl) {\n    for (let i of decl.parent.nodes) {\n      if (i.prop !== 'display') {\n        continue\n      }\n\n      if (i.value.includes('flex')) {\n        return 'flex'\n      }\n\n      if (i.value.includes('grid')) {\n        return 'grid'\n      }\n    }\n\n    return false\n  }\n\n  /**\n   * Set grid option via control comment\n   */\n  gridStatus(node, result) {\n    if (!node) return false\n\n    if (node._autoprefixerGridStatus !== undefined) {\n      return node._autoprefixerGridStatus\n    }\n\n    let value = null\n    if (node.nodes) {\n      let status\n      node.each(i => {\n        if (i.type !== 'comment') return\n        if (GRID_REGEX.test(i.text)) {\n          let hasAutoplace = /:\\s*autoplace/i.test(i.text)\n          let noAutoplace = /no-autoplace/i.test(i.text)\n          if (typeof status !== 'undefined') {\n            result.warn(\n              'Second Autoprefixer grid control comment was ' +\n                'ignored. Autoprefixer applies control comments to the whole ' +\n                'block, not to the next rules.',\n              { node: i }\n            )\n          } else if (hasAutoplace) {\n            status = 'autoplace'\n          } else if (noAutoplace) {\n            status = true\n          } else {\n            status = /on/i.test(i.text)\n          }\n        }\n      })\n\n      if (status !== undefined) {\n        value = status\n      }\n    }\n\n    if (node.type === 'atrule' && node.name === 'supports') {\n      let params = node.params\n      if (params.includes('grid') && params.includes('auto')) {\n        value = false\n      }\n    }\n\n    if (!node.nodes || value === null) {\n      if (node.parent) {\n        let isParentGrid = this.gridStatus(node.parent, result)\n        if (node.parent._autoprefixerSelfDisabled === true) {\n          value = false\n        } else {\n          value = isParentGrid\n        }\n      } else if (typeof this.prefixes.options.grid !== 'undefined') {\n        value = this.prefixes.options.grid\n      } else if (typeof process.env.AUTOPREFIXER_GRID !== 'undefined') {\n        if (process.env.AUTOPREFIXER_GRID === 'autoplace') {\n          value = 'autoplace'\n        } else {\n          value = true\n        }\n      } else {\n        value = false\n      }\n    }\n\n    node._autoprefixerGridStatus = value\n    return value\n  }\n}\n\nmodule.exports = Processor\n", "function last(array) {\n  return array[array.length - 1]\n}\n\nlet brackets = {\n  /**\n   * Parse string to nodes tree\n   */\n  parse(str) {\n    let current = ['']\n    let stack = [current]\n\n    for (let sym of str) {\n      if (sym === '(') {\n        current = ['']\n        last(stack).push(current)\n        stack.push(current)\n        continue\n      }\n\n      if (sym === ')') {\n        stack.pop()\n        current = last(stack)\n        current.push('')\n        continue\n      }\n\n      current[current.length - 1] += sym\n    }\n\n    return stack[0]\n  },\n\n  /**\n   * Generate output string by nodes tree\n   */\n  stringify(ast) {\n    let result = ''\n    for (let i of ast) {\n      if (typeof i === 'object') {\n        result += `(${brackets.stringify(i)})`\n        continue\n      }\n\n      result += i\n    }\n    return result\n  }\n}\n\nmodule.exports = brackets\n", "let featureQueries = require('caniuse-lite/data/features/css-featurequeries.js')\nlet { feature } = require('caniuse-lite')\nlet { parse } = require('postcss')\n\nlet Browsers = require('./browsers')\nlet brackets = require('./brackets')\nlet Value = require('./value')\nlet utils = require('./utils')\n\nlet data = feature(featureQueries)\n\nlet supported = []\nfor (let browser in data.stats) {\n  let versions = data.stats[browser]\n  for (let version in versions) {\n    let support = versions[version]\n    if (/y/.test(support)) {\n      supported.push(browser + ' ' + version)\n    }\n  }\n}\n\nclass Supports {\n  constructor(Prefixes, all) {\n    this.Prefixes = Prefixes\n    this.all = all\n  }\n\n  /**\n   * Return prefixer only with @supports supported browsers\n   */\n  prefixer() {\n    if (this.prefixerCache) {\n      return this.prefixerCache\n    }\n\n    let filtered = this.all.browsers.selected.filter(i => {\n      return supported.includes(i)\n    })\n\n    let browsers = new Browsers(\n      this.all.browsers.data,\n      filtered,\n      this.all.options\n    )\n    this.prefixerCache = new this.Prefixes(\n      this.all.data,\n      browsers,\n      this.all.options\n    )\n    return this.prefixerCache\n  }\n\n  /**\n   * Parse string into declaration property and value\n   */\n  parse(str) {\n    let parts = str.split(':')\n    let prop = parts[0]\n    let value = parts[1]\n    if (!value) value = ''\n    return [prop.trim(), value.trim()]\n  }\n\n  /**\n   * Create virtual rule to process it by prefixer\n   */\n  virtual(str) {\n    let [prop, value] = this.parse(str)\n    let rule = parse('a{}').first\n    rule.append({ prop, value, raws: { before: '' } })\n    return rule\n  }\n\n  /**\n   * Return array of Declaration with all necessary prefixes\n   */\n  prefixed(str) {\n    let rule = this.virtual(str)\n    if (this.disabled(rule.first)) {\n      return rule.nodes\n    }\n\n    let result = { warn: () => null }\n\n    let prefixer = this.prefixer().add[rule.first.prop]\n    prefixer && prefixer.process && prefixer.process(rule.first, result)\n\n    for (let decl of rule.nodes) {\n      for (let value of this.prefixer().values('add', rule.first.prop)) {\n        value.process(decl)\n      }\n      Value.save(this.all, decl)\n    }\n\n    return rule.nodes\n  }\n\n  /**\n   * Return true if brackets node is \"not\" word\n   */\n  isNot(node) {\n    return typeof node === 'string' && /not\\s*/i.test(node)\n  }\n\n  /**\n   * Return true if brackets node is \"or\" word\n   */\n  isOr(node) {\n    return typeof node === 'string' && /\\s*or\\s*/i.test(node)\n  }\n\n  /**\n   * Return true if brackets node is (prop: value)\n   */\n  isProp(node) {\n    return (\n      typeof node === 'object' &&\n      node.length === 1 &&\n      typeof node[0] === 'string'\n    )\n  }\n\n  /**\n   * Return true if prefixed property has no unprefixed\n   */\n  isHack(all, unprefixed) {\n    let check = new RegExp(`(\\\\(|\\\\s)${utils.escapeRegexp(unprefixed)}:`)\n    return !check.test(all)\n  }\n\n  /**\n   * Return true if we need to remove node\n   */\n  toRemove(str, all) {\n    let [prop, value] = this.parse(str)\n    let unprefixed = this.all.unprefixed(prop)\n\n    let cleaner = this.all.cleaner()\n\n    if (\n      cleaner.remove[prop] &&\n      cleaner.remove[prop].remove &&\n      !this.isHack(all, unprefixed)\n    ) {\n      return true\n    }\n\n    for (let checker of cleaner.values('remove', unprefixed)) {\n      if (checker.check(value)) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  /**\n   * Remove all unnecessary prefixes\n   */\n  remove(nodes, all) {\n    let i = 0\n    while (i < nodes.length) {\n      if (\n        !this.isNot(nodes[i - 1]) &&\n        this.isProp(nodes[i]) &&\n        this.isOr(nodes[i + 1])\n      ) {\n        if (this.toRemove(nodes[i][0], all)) {\n          nodes.splice(i, 2)\n          continue\n        }\n\n        i += 2\n        continue\n      }\n\n      if (typeof nodes[i] === 'object') {\n        nodes[i] = this.remove(nodes[i], all)\n      }\n\n      i += 1\n    }\n    return nodes\n  }\n\n  /**\n   * Clean brackets with one child\n   */\n  cleanBrackets(nodes) {\n    return nodes.map(i => {\n      if (typeof i !== 'object') {\n        return i\n      }\n\n      if (i.length === 1 && typeof i[0] === 'object') {\n        return this.cleanBrackets(i[0])\n      }\n\n      return this.cleanBrackets(i)\n    })\n  }\n\n  /**\n   * Add \" or \" between properties and convert it to brackets format\n   */\n  convert(progress) {\n    let result = ['']\n    for (let i of progress) {\n      result.push([`${i.prop}: ${i.value}`])\n      result.push(' or ')\n    }\n    result[result.length - 1] = ''\n    return result\n  }\n\n  /**\n   * Compress value functions into a string nodes\n   */\n  normalize(nodes) {\n    if (typeof nodes !== 'object') {\n      return nodes\n    }\n\n    nodes = nodes.filter(i => i !== '')\n\n    if (typeof nodes[0] === 'string') {\n      let firstNode = nodes[0].trim()\n\n      if (\n        firstNode.includes(':') ||\n        firstNode === 'selector' ||\n        firstNode === 'not selector'\n      ) {\n        return [brackets.stringify(nodes)]\n      }\n    }\n    return nodes.map(i => this.normalize(i))\n  }\n\n  /**\n   * Add prefixes\n   */\n  add(nodes, all) {\n    return nodes.map(i => {\n      if (this.isProp(i)) {\n        let prefixed = this.prefixed(i[0])\n        if (prefixed.length > 1) {\n          return this.convert(prefixed)\n        }\n\n        return i\n      }\n\n      if (typeof i === 'object') {\n        return this.add(i, all)\n      }\n\n      return i\n    })\n  }\n\n  /**\n   * Add prefixed declaration\n   */\n  process(rule) {\n    let ast = brackets.parse(rule.params)\n    ast = this.normalize(ast)\n    ast = this.remove(ast, rule.params)\n    ast = this.add(ast, rule.params)\n    ast = this.cleanBrackets(ast)\n    rule.params = brackets.stringify(ast)\n  }\n\n  /**\n   * Check global options\n   */\n  disabled(node) {\n    if (!this.all.options.grid) {\n      if (node.prop === 'display' && node.value.includes('grid')) {\n        return true\n      }\n      if (node.prop.includes('grid') || node.prop === 'justify-items') {\n        return true\n      }\n    }\n\n    if (this.all.options.flexbox === false) {\n      if (node.prop === 'display' && node.value.includes('flex')) {\n        return true\n      }\n      let other = ['order', 'justify-content', 'align-items', 'align-content']\n      if (node.prop.includes('flex') || other.includes(node.prop)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\nmodule.exports = Supports\n", "class OldSelector {\n  constructor(selector, prefix) {\n    this.prefix = prefix\n    this.prefixed = selector.prefixed(this.prefix)\n    this.regexp = selector.regexp(this.prefix)\n\n    this.prefixeds = selector\n      .possible()\n      .map(x => [selector.prefixed(x), selector.regexp(x)])\n\n    this.unprefixed = selector.name\n    this.nameRegexp = selector.regexp()\n  }\n\n  /**\n   * Is rule a hack without unprefixed version bottom\n   */\n  isHack(rule) {\n    let index = rule.parent.index(rule) + 1\n    let rules = rule.parent.nodes\n\n    while (index < rules.length) {\n      let before = rules[index].selector\n      if (!before) {\n        return true\n      }\n\n      if (before.includes(this.unprefixed) && before.match(this.nameRegexp)) {\n        return false\n      }\n\n      let some = false\n      for (let [string, regexp] of this.prefixeds) {\n        if (before.includes(string) && before.match(regexp)) {\n          some = true\n          break\n        }\n      }\n\n      if (!some) {\n        return true\n      }\n\n      index += 1\n    }\n\n    return true\n  }\n\n  /**\n   * Does rule contain an unnecessary prefixed selector\n   */\n  check(rule) {\n    if (!rule.selector.includes(this.prefixed)) {\n      return false\n    }\n    if (!rule.selector.match(this.regexp)) {\n      return false\n    }\n    if (this.isHack(rule)) {\n      return false\n    }\n    return true\n  }\n}\n\nmodule.exports = OldSelector\n", "let { list } = require('postcss')\n\nlet OldSelector = require('./old-selector')\nlet Prefixer = require('./prefixer')\nlet Browsers = require('./browsers')\nlet utils = require('./utils')\n\nclass Selector extends Prefixer {\n  constructor(name, prefixes, all) {\n    super(name, prefixes, all)\n    this.regexpCache = new Map()\n  }\n\n  /**\n   * Is rule selectors need to be prefixed\n   */\n  check(rule) {\n    if (rule.selector.includes(this.name)) {\n      return !!rule.selector.match(this.regexp())\n    }\n\n    return false\n  }\n\n  /**\n   * Return prefixed version of selector\n   */\n  prefixed(prefix) {\n    return this.name.replace(/^(\\W*)/, `$1${prefix}`)\n  }\n\n  /**\n   * Lazy loadRegExp for name\n   */\n  regexp(prefix) {\n    if (!this.regexpCache.has(prefix)) {\n      let name = prefix ? this.prefixed(prefix) : this.name\n      this.regexpCache.set(\n        prefix,\n        new RegExp(`(^|[^:\"'=])${utils.escapeRegexp(name)}`, 'gi')\n      )\n    }\n\n    return this.regexpCache.get(prefix)\n  }\n\n  /**\n   * All possible prefixes\n   */\n  possible() {\n    return Browsers.prefixes()\n  }\n\n  /**\n   * Return all possible selector prefixes\n   */\n  prefixeds(rule) {\n    if (rule._autoprefixerPrefixeds) {\n      if (rule._autoprefixerPrefixeds[this.name]) {\n        return rule._autoprefixerPrefixeds\n      }\n    } else {\n      rule._autoprefixerPrefixeds = {}\n    }\n\n    let prefixeds = {}\n    if (rule.selector.includes(',')) {\n      let ruleParts = list.comma(rule.selector)\n      let toProcess = ruleParts.filter(el => el.includes(this.name))\n\n      for (let prefix of this.possible()) {\n        prefixeds[prefix] = toProcess\n          .map(el => this.replace(el, prefix))\n          .join(', ')\n      }\n    } else {\n      for (let prefix of this.possible()) {\n        prefixeds[prefix] = this.replace(rule.selector, prefix)\n      }\n    }\n\n    rule._autoprefixerPrefixeds[this.name] = prefixeds\n    return rule._autoprefixerPrefixeds\n  }\n\n  /**\n   * Is rule already prefixed before\n   */\n  already(rule, prefixeds, prefix) {\n    let index = rule.parent.index(rule) - 1\n\n    while (index >= 0) {\n      let before = rule.parent.nodes[index]\n\n      if (before.type !== 'rule') {\n        return false\n      }\n\n      let some = false\n      for (let key in prefixeds[this.name]) {\n        let prefixed = prefixeds[this.name][key]\n        if (before.selector === prefixed) {\n          if (prefix === key) {\n            return true\n          } else {\n            some = true\n            break\n          }\n        }\n      }\n      if (!some) {\n        return false\n      }\n\n      index -= 1\n    }\n\n    return false\n  }\n\n  /**\n   * Replace selectors by prefixed one\n   */\n  replace(selector, prefix) {\n    return selector.replace(this.regexp(), `$1${this.prefixed(prefix)}`)\n  }\n\n  /**\n   * Clone and add prefixes for at-rule\n   */\n  add(rule, prefix) {\n    let prefixeds = this.prefixeds(rule)\n\n    if (this.already(rule, prefixeds, prefix)) {\n      return\n    }\n\n    let cloned = this.clone(rule, { selector: prefixeds[this.name][prefix] })\n    rule.parent.insertBefore(rule, cloned)\n  }\n\n  /**\n   * Return function to fast find prefixed selector\n   */\n  old(prefix) {\n    return new OldSelector(this, prefix)\n  }\n}\n\nmodule.exports = Selector\n", "let Prefixer = require('./prefixer')\n\nclass AtRule extends Prefixer {\n  /**\n   * Clone and add prefixes for at-rule\n   */\n  add(rule, prefix) {\n    let prefixed = prefix + rule.name\n\n    let already = rule.parent.some(\n      i => i.name === prefixed && i.params === rule.params\n    )\n    if (already) {\n      return undefined\n    }\n\n    let cloned = this.clone(rule, { name: prefixed })\n    return rule.parent.insertBefore(rule, cloned)\n  }\n\n  /**\n   * Clone node with prefixes\n   */\n  process(node) {\n    let parent = this.parentPrefix(node)\n\n    for (let prefix of this.prefixes) {\n      if (!parent || parent === prefix) {\n        this.add(node, prefix)\n      }\n    }\n  }\n}\n\nmodule.exports = AtRule\n", "let Selector = require('../selector')\n\nclass Fullscreen extends Selector {\n  /**\n   * Return different selectors depend on prefix\n   */\n  prefixed(prefix) {\n    if (prefix === '-webkit-') {\n      return ':-webkit-full-screen'\n    }\n    if (prefix === '-moz-') {\n      return ':-moz-full-screen'\n    }\n    return `:${prefix}fullscreen`\n  }\n}\n\nFullscreen.names = [':fullscreen']\n\nmodule.exports = Fullscreen\n", "let Selector = require('../selector')\n\nclass Placeholder extends Selector {\n  /**\n   * Add old mozilla to possible prefixes\n   */\n  possible() {\n    return super.possible().concat(['-moz- old', '-ms- old'])\n  }\n\n  /**\n   * Return different selectors depend on prefix\n   */\n  prefixed(prefix) {\n    if (prefix === '-webkit-') {\n      return '::-webkit-input-placeholder'\n    }\n    if (prefix === '-ms-') {\n      return '::-ms-input-placeholder'\n    }\n    if (prefix === '-ms- old') {\n      return ':-ms-input-placeholder'\n    }\n    if (prefix === '-moz- old') {\n      return ':-moz-placeholder'\n    }\n    return `::${prefix}placeholder`\n  }\n}\n\nPlaceholder.names = ['::placeholder']\n\nmodule.exports = Placeholder\n", "let Selector = require('../selector')\n\nclass PlaceholderShown extends Selector {\n  /**\n   * Return different selectors depend on prefix\n   */\n  prefixed(prefix) {\n    if (prefix === '-ms-') {\n      return ':-ms-input-placeholder'\n    }\n    return `:${prefix}placeholder-shown`\n  }\n}\n\nPlaceholderShown.names = [':placeholder-shown']\n\nmodule.exports = PlaceholderShown\n", "let Selector = require('../selector')\nlet utils = require('../utils')\n\nclass FileSelectorButton extends Selector {\n  constructor(name, prefixes, all) {\n    super(name, prefixes, all)\n\n    if (this.prefixes) {\n      this.prefixes = utils.uniq(this.prefixes.map(() => '-webkit-'))\n    }\n  }\n\n  /**\n   * Return different selectors depend on prefix\n   */\n  prefixed(prefix) {\n    if (prefix === '-webkit-') {\n      return '::-webkit-file-upload-button'\n    }\n    return `::${prefix}file-selector-button`\n  }\n}\n\nFileSelectorButton.names = ['::file-selector-button']\n\nmodule.exports = FileSelectorButton\n", "/**\n * Return flexbox spec versions by prefix\n */\nmodule.exports = function (prefix) {\n  let spec\n  if (prefix === '-webkit- 2009' || prefix === '-moz-') {\n    spec = 2009\n  } else if (prefix === '-ms-') {\n    spec = 2012\n  } else if (prefix === '-webkit-') {\n    spec = 'final'\n  }\n\n  if (prefix === '-webkit- 2009') {\n    prefix = '-webkit-'\n  }\n\n  return [spec, prefix]\n}\n", "let list = require('postcss').list\n\nlet flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass Flex extends Declaration {\n  /**\n   * Change property name for 2009 spec\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2009) {\n      return prefix + 'box-flex'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'flex'\n  }\n\n  /**\n   * Spec 2009 supports only first argument\n   * Spec 2012 disallows unitless basis\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec === 2009) {\n      decl.value = list.space(decl.value)[0]\n      decl.value = Flex.oldValues[decl.value] || decl.value\n      return super.set(decl, prefix)\n    }\n    if (spec === 2012) {\n      let components = list.space(decl.value)\n      if (components.length === 3 && components[2] === '0') {\n        decl.value = components.slice(0, 2).concat('0px').join(' ')\n      }\n    }\n    return super.set(decl, prefix)\n  }\n}\n\nFlex.names = ['flex', 'box-flex']\n\nFlex.oldValues = {\n  auto: '1',\n  none: '0'\n}\n\nmodule.exports = Flex\n", "let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass Order extends Declaration {\n  /**\n   * Change property name for 2009 and 2012 specs\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2009) {\n      return prefix + 'box-ordinal-group'\n    }\n    if (spec === 2012) {\n      return prefix + 'flex-order'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'order'\n  }\n\n  /**\n   * Fix value for 2009 spec\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec === 2009 && /\\d/.test(decl.value)) {\n      decl.value = (parseInt(decl.value) + 1).toString()\n      return super.set(decl, prefix)\n    }\n    return super.set(decl, prefix)\n  }\n}\n\nOrder.names = ['order', 'flex-order', 'box-ordinal-group']\n\nmodule.exports = Order\n", "let Declaration = require('../declaration')\n\nclass Filter extends Declaration {\n  /**\n   * Check is it Internet Explorer filter\n   */\n  check(decl) {\n    let v = decl.value\n    return (\n      !v.toLowerCase().includes('alpha(') &&\n      !v.includes('DXImageTransform.Microsoft') &&\n      !v.includes('data:image/svg+xml')\n    )\n  }\n}\n\nFilter.names = ['filter']\n\nmodule.exports = Filter\n", "let Declaration = require('../declaration')\nlet { isPureNumber } = require('../utils')\n\nclass GridEnd extends Declaration {\n  /**\n   * Change repeating syntax for IE\n   */\n  insert(decl, prefix, prefixes, result) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    let clonedDecl = this.clone(decl)\n\n    let startProp = decl.prop.replace(/end$/, 'start')\n    let spanProp = prefix + decl.prop.replace(/end$/, 'span')\n\n    if (decl.parent.some(i => i.prop === spanProp)) {\n      return undefined\n    }\n\n    clonedDecl.prop = spanProp\n\n    if (decl.value.includes('span')) {\n      clonedDecl.value = decl.value.replace(/span\\s/i, '')\n    } else {\n      let startDecl\n      decl.parent.walkDecls(startProp, d => {\n        startDecl = d\n      })\n      if (startDecl) {\n        if (isPureNumber(startDecl.value)) {\n          let value = Number(decl.value) - Number(startDecl.value) + ''\n          clonedDecl.value = value\n        } else {\n          return undefined\n        }\n      } else {\n        decl.warn(\n          result,\n          `Can not prefix ${decl.prop} (${startProp} is not found)`\n        )\n      }\n    }\n\n    decl.cloneBefore(clonedDecl)\n\n    return undefined\n  }\n}\n\nGridEnd.names = ['grid-row-end', 'grid-column-end']\n\nmodule.exports = GridEnd\n", "let Declaration = require('../declaration')\n\nclass Animation extends Declaration {\n  /**\n   * Don\u2019t add prefixes for modern values.\n   */\n  check(decl) {\n    return !decl.value.split(/\\s+/).some(i => {\n      let lower = i.toLowerCase()\n      return lower === 'reverse' || lower === 'alternate-reverse'\n    })\n  }\n}\n\nAnimation.names = ['animation', 'animation-direction']\n\nmodule.exports = Animation\n", "let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass FlexFlow extends Declaration {\n  /**\n   * Use two properties for 2009 spec\n   */\n  insert(decl, prefix, prefixes) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec !== 2009) {\n      return super.insert(decl, prefix, prefixes)\n    }\n    let values = decl.value\n      .split(/\\s+/)\n      .filter(i => i !== 'wrap' && i !== 'nowrap' && 'wrap-reverse')\n    if (values.length === 0) {\n      return undefined\n    }\n\n    let already = decl.parent.some(\n      i =>\n        i.prop === prefix + 'box-orient' || i.prop === prefix + 'box-direction'\n    )\n    if (already) {\n      return undefined\n    }\n\n    let value = values[0]\n    let orient = value.includes('row') ? 'horizontal' : 'vertical'\n    let dir = value.includes('reverse') ? 'reverse' : 'normal'\n\n    let cloned = this.clone(decl)\n    cloned.prop = prefix + 'box-orient'\n    cloned.value = orient\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n    decl.parent.insertBefore(decl, cloned)\n\n    cloned = this.clone(decl)\n    cloned.prop = prefix + 'box-direction'\n    cloned.value = dir\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n    return decl.parent.insertBefore(decl, cloned)\n  }\n}\n\nFlexFlow.names = ['flex-flow', 'box-direction', 'box-orient']\n\nmodule.exports = FlexFlow\n", "let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass Flex extends Declaration {\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'flex'\n  }\n\n  /**\n   * Return flex property for 2009 and 2012 specs\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2009) {\n      return prefix + 'box-flex'\n    }\n    if (spec === 2012) {\n      return prefix + 'flex-positive'\n    }\n    return super.prefixed(prop, prefix)\n  }\n}\n\nFlex.names = ['flex-grow', 'flex-positive']\n\nmodule.exports = Flex\n", "let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass FlexWrap extends Declaration {\n  /**\n   * Don't add prefix for 2009 spec\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec !== 2009) {\n      return super.set(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nFlexWrap.names = ['flex-wrap']\n\nmodule.exports = FlexWrap\n", "let Declaration = require('../declaration')\nlet utils = require('./grid-utils')\n\nclass GridArea extends Declaration {\n  /**\n   * Translate grid-area to separate -ms- prefixed properties\n   */\n  insert(decl, prefix, prefixes, result) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    let values = utils.parse(decl)\n\n    let [rowStart, rowSpan] = utils.translate(values, 0, 2)\n    let [columnStart, columnSpan] = utils.translate(values, 1, 3)\n\n    ;[\n      ['grid-row', rowStart],\n      ['grid-row-span', rowSpan],\n      ['grid-column', columnStart],\n      ['grid-column-span', columnSpan]\n    ].forEach(([prop, value]) => {\n      utils.insertDecl(decl, prop, value)\n    })\n\n    utils.warnTemplateSelectorNotFound(decl, result)\n    utils.warnIfGridRowColumnExists(decl, result)\n\n    return undefined\n  }\n}\n\nGridArea.names = ['grid-area']\n\nmodule.exports = GridArea\n", "let Declaration = require('../declaration')\nlet utils = require('./grid-utils')\n\nclass PlaceSelf extends Declaration {\n  /**\n   * Translate place-self to separate -ms- prefixed properties\n   */\n  insert(decl, prefix, prefixes) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    // prevent doubling of prefixes\n    if (decl.parent.some(i => i.prop === '-ms-grid-row-align')) {\n      return undefined\n    }\n\n    let [[first, second]] = utils.parse(decl)\n\n    if (second) {\n      utils.insertDecl(decl, 'grid-row-align', first)\n      utils.insertDecl(decl, 'grid-column-align', second)\n    } else {\n      utils.insertDecl(decl, 'grid-row-align', first)\n      utils.insertDecl(decl, 'grid-column-align', first)\n    }\n\n    return undefined\n  }\n}\n\nPlaceSelf.names = ['place-self']\n\nmodule.exports = PlaceSelf\n", "let Declaration = require('../declaration')\n\nclass GridStart extends Declaration {\n  /**\n   * Do not add prefix for unsupported value in IE\n   */\n  check(decl) {\n    let value = decl.value\n    return !value.includes('/') && !value.includes('span')\n  }\n\n  /**\n   * Return a final spec property\n   */\n  normalize(prop) {\n    return prop.replace('-start', '')\n  }\n\n  /**\n   * Change property name for IE\n   */\n  prefixed(prop, prefix) {\n    let result = super.prefixed(prop, prefix)\n    if (prefix === '-ms-') {\n      result = result.replace('-start', '')\n    }\n    return result\n  }\n}\n\nGridStart.names = ['grid-row-start', 'grid-column-start']\n\nmodule.exports = GridStart\n", "let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass AlignSelf extends Declaration {\n  check(decl) {\n    return (\n      decl.parent &&\n      !decl.parent.some(i => {\n        return i.prop && i.prop.startsWith('grid-')\n      })\n    )\n  }\n\n  /**\n   * Change property name for 2012 specs\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2012) {\n      return prefix + 'flex-item-align'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'align-self'\n  }\n\n  /**\n   * Change value for 2012 spec and ignore prefix for 2009\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec === 2012) {\n      decl.value = AlignSelf.oldValues[decl.value] || decl.value\n      return super.set(decl, prefix)\n    }\n    if (spec === 'final') {\n      return super.set(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nAlignSelf.names = ['align-self', 'flex-item-align']\n\nAlignSelf.oldValues = {\n  'flex-end': 'end',\n  'flex-start': 'start'\n}\n\nmodule.exports = AlignSelf\n", "let Declaration = require('../declaration')\nlet utils = require('../utils')\n\nclass Appearance extends Declaration {\n  constructor(name, prefixes, all) {\n    super(name, prefixes, all)\n\n    if (this.prefixes) {\n      this.prefixes = utils.uniq(\n        this.prefixes.map(i => {\n          if (i === '-ms-') {\n            return '-webkit-'\n          }\n          return i\n        })\n      )\n    }\n  }\n}\n\nAppearance.names = ['appearance']\n\nmodule.exports = Appearance\n", "let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass FlexBasis extends Declaration {\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'flex-basis'\n  }\n\n  /**\n   * Return flex property for 2012 spec\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2012) {\n      return prefix + 'flex-preferred-size'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Ignore 2009 spec and use flex property for 2012\n   */\n  set(decl, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2012 || spec === 'final') {\n      return super.set(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nFlexBasis.names = ['flex-basis', 'flex-preferred-size']\n\nmodule.exports = FlexBasis\n", "let Declaration = require('../declaration')\n\nclass MaskBorder extends Declaration {\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return this.name.replace('box-image', 'border')\n  }\n\n  /**\n   * Return flex property for 2012 spec\n   */\n  prefixed(prop, prefix) {\n    let result = super.prefixed(prop, prefix)\n    if (prefix === '-webkit-') {\n      result = result.replace('border', 'box-image')\n    }\n    return result\n  }\n}\n\nMaskBorder.names = [\n  'mask-border',\n  'mask-border-source',\n  'mask-border-slice',\n  'mask-border-width',\n  'mask-border-outset',\n  'mask-border-repeat',\n  'mask-box-image',\n  'mask-box-image-source',\n  'mask-box-image-slice',\n  'mask-box-image-width',\n  'mask-box-image-outset',\n  'mask-box-image-repeat'\n]\n\nmodule.exports = MaskBorder\n", "let Declaration = require('../declaration')\n\nclass MaskComposite extends Declaration {\n  /**\n   * Prefix mask-composite for webkit\n   */\n  insert(decl, prefix, prefixes) {\n    let isCompositeProp = decl.prop === 'mask-composite'\n\n    let compositeValues\n\n    if (isCompositeProp) {\n      compositeValues = decl.value.split(',')\n    } else {\n      compositeValues = decl.value.match(MaskComposite.regexp) || []\n    }\n\n    compositeValues = compositeValues.map(el => el.trim()).filter(el => el)\n    let hasCompositeValues = compositeValues.length\n\n    let compositeDecl\n\n    if (hasCompositeValues) {\n      compositeDecl = this.clone(decl)\n      compositeDecl.value = compositeValues\n        .map(value => MaskComposite.oldValues[value] || value)\n        .join(', ')\n\n      if (compositeValues.includes('intersect')) {\n        compositeDecl.value += ', xor'\n      }\n\n      compositeDecl.prop = prefix + 'mask-composite'\n    }\n\n    if (isCompositeProp) {\n      if (!hasCompositeValues) {\n        return undefined\n      }\n\n      if (this.needCascade(decl)) {\n        compositeDecl.raws.before = this.calcBefore(prefixes, decl, prefix)\n      }\n\n      return decl.parent.insertBefore(decl, compositeDecl)\n    }\n\n    let cloned = this.clone(decl)\n    cloned.prop = prefix + cloned.prop\n\n    if (hasCompositeValues) {\n      cloned.value = cloned.value.replace(MaskComposite.regexp, '')\n    }\n\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n\n    decl.parent.insertBefore(decl, cloned)\n\n    if (!hasCompositeValues) {\n      return decl\n    }\n\n    if (this.needCascade(decl)) {\n      compositeDecl.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n    return decl.parent.insertBefore(decl, compositeDecl)\n  }\n}\n\nMaskComposite.names = ['mask', 'mask-composite']\n\nMaskComposite.oldValues = {\n  add: 'source-over',\n  subtract: 'source-out',\n  intersect: 'source-in',\n  exclude: 'xor'\n}\n\nMaskComposite.regexp = new RegExp(\n  `\\\\s+(${Object.keys(MaskComposite.oldValues).join(\n    '|'\n  )})\\\\b(?!\\\\))\\\\s*(?=[,])`,\n  'ig'\n)\n\nmodule.exports = MaskComposite\n", "let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass AlignItems extends Declaration {\n  /**\n   * Change property name for 2009 and 2012 specs\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2009) {\n      return prefix + 'box-align'\n    }\n    if (spec === 2012) {\n      return prefix + 'flex-align'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'align-items'\n  }\n\n  /**\n   * Change value for 2009 and 2012 specs\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec === 2009 || spec === 2012) {\n      decl.value = AlignItems.oldValues[decl.value] || decl.value\n    }\n    return super.set(decl, prefix)\n  }\n}\n\nAlignItems.names = ['align-items', 'flex-align', 'box-align']\n\nAlignItems.oldValues = {\n  'flex-end': 'end',\n  'flex-start': 'start'\n}\n\nmodule.exports = AlignItems\n", "let Declaration = require('../declaration')\n\nclass UserSelect extends Declaration {\n  /**\n   * Change prefixed value for IE\n   */\n  set(decl, prefix) {\n    if (prefix === '-ms-' && decl.value === 'contain') {\n      decl.value = 'element'\n    }\n    return super.set(decl, prefix)\n  }\n\n  /**\n   * Avoid prefixing all in IE\n   */\n  insert(decl, prefix, prefixes) {\n    if (decl.value === 'all' && prefix === '-ms-') {\n      return undefined\n    } else {\n      return super.insert(decl, prefix, prefixes)\n    }\n  }\n}\n\nUserSelect.names = ['user-select']\n\nmodule.exports = UserSelect\n", "let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass FlexShrink extends Declaration {\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'flex-shrink'\n  }\n\n  /**\n   * Return flex property for 2012 spec\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2012) {\n      return prefix + 'flex-negative'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Ignore 2009 spec and use flex property for 2012\n   */\n  set(decl, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2012 || spec === 'final') {\n      return super.set(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nFlexShrink.names = ['flex-shrink', 'flex-negative']\n\nmodule.exports = FlexShrink\n", "let Declaration = require('../declaration')\n\nclass BreakProps extends Declaration {\n  /**\n   * Change name for -webkit- and -moz- prefix\n   */\n  prefixed(prop, prefix) {\n    return `${prefix}column-${prop}`\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize(prop) {\n    if (prop.includes('inside')) {\n      return 'break-inside'\n    }\n    if (prop.includes('before')) {\n      return 'break-before'\n    }\n    return 'break-after'\n  }\n\n  /**\n   * Change prefixed value for avoid-column and avoid-page\n   */\n  set(decl, prefix) {\n    if (\n      (decl.prop === 'break-inside' && decl.value === 'avoid-column') ||\n      decl.value === 'avoid-page'\n    ) {\n      decl.value = 'avoid'\n    }\n    return super.set(decl, prefix)\n  }\n\n  /**\n   * Don\u2019t prefix some values\n   */\n  insert(decl, prefix, prefixes) {\n    if (decl.prop !== 'break-inside') {\n      return super.insert(decl, prefix, prefixes)\n    }\n    if (/region/i.test(decl.value) || /page/i.test(decl.value)) {\n      return undefined\n    }\n    return super.insert(decl, prefix, prefixes)\n  }\n}\n\nBreakProps.names = [\n  'break-inside',\n  'page-break-inside',\n  'column-break-inside',\n  'break-before',\n  'page-break-before',\n  'column-break-before',\n  'break-after',\n  'page-break-after',\n  'column-break-after'\n]\n\nmodule.exports = BreakProps\n", "let Declaration = require('../declaration')\n\nclass WritingMode extends Declaration {\n  insert(decl, prefix, prefixes) {\n    if (prefix === '-ms-') {\n      let cloned = this.set(this.clone(decl), prefix)\n\n      if (this.needCascade(decl)) {\n        cloned.raws.before = this.calcBefore(prefixes, decl, prefix)\n      }\n      let direction = 'ltr'\n\n      decl.parent.nodes.forEach(i => {\n        if (i.prop === 'direction') {\n          if (i.value === 'rtl' || i.value === 'ltr') direction = i.value\n        }\n      })\n\n      cloned.value = WritingMode.msValues[direction][decl.value] || decl.value\n      return decl.parent.insertBefore(decl, cloned)\n    }\n\n    return super.insert(decl, prefix, prefixes)\n  }\n}\n\nWritingMode.names = ['writing-mode']\n\nWritingMode.msValues = {\n  ltr: {\n    'horizontal-tb': 'lr-tb',\n    'vertical-rl': 'tb-rl',\n    'vertical-lr': 'tb-lr'\n  },\n  rtl: {\n    'horizontal-tb': 'rl-tb',\n    'vertical-rl': 'bt-rl',\n    'vertical-lr': 'bt-lr'\n  }\n}\n\nmodule.exports = WritingMode\n", "let Declaration = require('../declaration')\n\nclass BorderImage extends Declaration {\n  /**\n   * Remove fill parameter for prefixed declarations\n   */\n  set(decl, prefix) {\n    decl.value = decl.value.replace(/\\s+fill(\\s)/, '$1')\n    return super.set(decl, prefix)\n  }\n}\n\nBorderImage.names = ['border-image']\n\nmodule.exports = BorderImage\n", "let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass AlignContent extends Declaration {\n  /**\n   * Change property name for 2012 spec\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2012) {\n      return prefix + 'flex-line-pack'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'align-content'\n  }\n\n  /**\n   * Change value for 2012 spec and ignore prefix for 2009\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec === 2012) {\n      decl.value = AlignContent.oldValues[decl.value] || decl.value\n      return super.set(decl, prefix)\n    }\n    if (spec === 'final') {\n      return super.set(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nAlignContent.names = ['align-content', 'flex-line-pack']\n\nAlignContent.oldValues = {\n  'flex-end': 'end',\n  'flex-start': 'start',\n  'space-between': 'justify',\n  'space-around': 'distribute'\n}\n\nmodule.exports = AlignContent\n", "let Declaration = require('../declaration')\n\nclass BorderRadius extends Declaration {\n  /**\n   * Change syntax, when add Mozilla prefix\n   */\n  prefixed(prop, prefix) {\n    if (prefix === '-moz-') {\n      return prefix + (BorderRadius.toMozilla[prop] || prop)\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Return unprefixed version of property\n   */\n  normalize(prop) {\n    return BorderRadius.toNormal[prop] || prop\n  }\n}\n\nBorderRadius.names = ['border-radius']\n\nBorderRadius.toMozilla = {}\nBorderRadius.toNormal = {}\n\nfor (let ver of ['top', 'bottom']) {\n  for (let hor of ['left', 'right']) {\n    let normal = `border-${ver}-${hor}-radius`\n    let mozilla = `border-radius-${ver}${hor}`\n\n    BorderRadius.names.push(normal)\n    BorderRadius.names.push(mozilla)\n\n    BorderRadius.toMozilla[normal] = mozilla\n    BorderRadius.toNormal[mozilla] = normal\n  }\n}\n\nmodule.exports = BorderRadius\n", "let Declaration = require('../declaration')\n\nclass BlockLogical extends Declaration {\n  /**\n   * Use old syntax for -moz- and -webkit-\n   */\n  prefixed(prop, prefix) {\n    if (prop.includes('-start')) {\n      return prefix + prop.replace('-block-start', '-before')\n    }\n    return prefix + prop.replace('-block-end', '-after')\n  }\n\n  /**\n   * Return property name by spec\n   */\n  normalize(prop) {\n    if (prop.includes('-before')) {\n      return prop.replace('-before', '-block-start')\n    }\n    return prop.replace('-after', '-block-end')\n  }\n}\n\nBlockLogical.names = [\n  'border-block-start',\n  'border-block-end',\n  'margin-block-start',\n  'margin-block-end',\n  'padding-block-start',\n  'padding-block-end',\n  'border-before',\n  'border-after',\n  'margin-before',\n  'margin-after',\n  'padding-before',\n  'padding-after'\n]\n\nmodule.exports = BlockLogical\n", "let Declaration = require('../declaration')\nlet {\n  parseTemplate,\n  warnMissedAreas,\n  getGridGap,\n  warnGridGap,\n  inheritGridGap\n} = require('./grid-utils')\n\nclass GridTemplate extends Declaration {\n  /**\n   * Translate grid-template to separate -ms- prefixed properties\n   */\n  insert(decl, prefix, prefixes, result) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    if (decl.parent.some(i => i.prop === '-ms-grid-rows')) {\n      return undefined\n    }\n\n    let gap = getGridGap(decl)\n\n    /**\n     * we must insert inherited gap values in some cases:\n     * if we are inside media query && if we have no grid-gap value\n     */\n    let inheritedGap = inheritGridGap(decl, gap)\n\n    let { rows, columns, areas } = parseTemplate({\n      decl,\n      gap: inheritedGap || gap\n    })\n\n    let hasAreas = Object.keys(areas).length > 0\n    let hasRows = Boolean(rows)\n    let hasColumns = Boolean(columns)\n\n    warnGridGap({\n      gap,\n      hasColumns,\n      decl,\n      result\n    })\n\n    warnMissedAreas(areas, decl, result)\n\n    if ((hasRows && hasColumns) || hasAreas) {\n      decl.cloneBefore({\n        prop: '-ms-grid-rows',\n        value: rows,\n        raws: {}\n      })\n    }\n\n    if (hasColumns) {\n      decl.cloneBefore({\n        prop: '-ms-grid-columns',\n        value: columns,\n        raws: {}\n      })\n    }\n\n    return decl\n  }\n}\n\nGridTemplate.names = ['grid-template']\n\nmodule.exports = GridTemplate\n", "let Declaration = require('../declaration')\n\nclass InlineLogical extends Declaration {\n  /**\n   * Use old syntax for -moz- and -webkit-\n   */\n  prefixed(prop, prefix) {\n    return prefix + prop.replace('-inline', '')\n  }\n\n  /**\n   * Return property name by spec\n   */\n  normalize(prop) {\n    return prop.replace(/(margin|padding|border)-(start|end)/, '$1-inline-$2')\n  }\n}\n\nInlineLogical.names = [\n  'border-inline-start',\n  'border-inline-end',\n  'margin-inline-start',\n  'margin-inline-end',\n  'padding-inline-start',\n  'padding-inline-end',\n  'border-start',\n  'border-end',\n  'margin-start',\n  'margin-end',\n  'padding-start',\n  'padding-end'\n]\n\nmodule.exports = InlineLogical\n", "let Declaration = require('../declaration')\n\nclass GridRowAlign extends Declaration {\n  /**\n   * Do not prefix flexbox values\n   */\n  check(decl) {\n    return !decl.value.includes('flex-') && decl.value !== 'baseline'\n  }\n\n  /**\n   * Change property name for IE\n   */\n  prefixed(prop, prefix) {\n    return prefix + 'grid-row-align'\n  }\n\n  /**\n   * Change IE property back\n   */\n  normalize() {\n    return 'align-self'\n  }\n}\n\nGridRowAlign.names = ['grid-row-align']\n\nmodule.exports = GridRowAlign\n", "let Declaration = require('../declaration')\n\nclass TransformDecl extends Declaration {\n  /**\n   * Recursively check all parents for @keyframes\n   */\n  keyframeParents(decl) {\n    let { parent } = decl\n    while (parent) {\n      if (parent.type === 'atrule' && parent.name === 'keyframes') {\n        return true\n      }\n      ;({ parent } = parent)\n    }\n    return false\n  }\n\n  /**\n   * Is transform contain 3D commands\n   */\n  contain3d(decl) {\n    if (decl.prop === 'transform-origin') {\n      return false\n    }\n\n    for (let func of TransformDecl.functions3d) {\n      if (decl.value.includes(`${func}(`)) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  /**\n   * Replace rotateZ to rotate for IE 9\n   */\n  set(decl, prefix) {\n    decl = super.set(decl, prefix)\n    if (prefix === '-ms-') {\n      decl.value = decl.value.replace(/rotatez/gi, 'rotate')\n    }\n    return decl\n  }\n\n  /**\n   * Don't add prefix for IE in keyframes\n   */\n  insert(decl, prefix, prefixes) {\n    if (prefix === '-ms-') {\n      if (!this.contain3d(decl) && !this.keyframeParents(decl)) {\n        return super.insert(decl, prefix, prefixes)\n      }\n    } else if (prefix === '-o-') {\n      if (!this.contain3d(decl)) {\n        return super.insert(decl, prefix, prefixes)\n      }\n    } else {\n      return super.insert(decl, prefix, prefixes)\n    }\n    return undefined\n  }\n}\n\nTransformDecl.names = ['transform', 'transform-origin']\n\nTransformDecl.functions3d = [\n  'matrix3d',\n  'translate3d',\n  'translateZ',\n  'scale3d',\n  'scaleZ',\n  'rotate3d',\n  'rotateX',\n  'rotateY',\n  'perspective'\n]\n\nmodule.exports = TransformDecl\n", "let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass FlexDirection extends Declaration {\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'flex-direction'\n  }\n\n  /**\n   * Use two properties for 2009 spec\n   */\n  insert(decl, prefix, prefixes) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec !== 2009) {\n      return super.insert(decl, prefix, prefixes)\n    }\n    let already = decl.parent.some(\n      i =>\n        i.prop === prefix + 'box-orient' || i.prop === prefix + 'box-direction'\n    )\n    if (already) {\n      return undefined\n    }\n\n    let v = decl.value\n    let orient, dir\n    if (v === 'inherit' || v === 'initial' || v === 'unset') {\n      orient = v\n      dir = v\n    } else {\n      orient = v.includes('row') ? 'horizontal' : 'vertical'\n      dir = v.includes('reverse') ? 'reverse' : 'normal'\n    }\n\n    let cloned = this.clone(decl)\n    cloned.prop = prefix + 'box-orient'\n    cloned.value = orient\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n    decl.parent.insertBefore(decl, cloned)\n\n    cloned = this.clone(decl)\n    cloned.prop = prefix + 'box-direction'\n    cloned.value = dir\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n    return decl.parent.insertBefore(decl, cloned)\n  }\n\n  /**\n   * Clean two properties for 2009 spec\n   */\n  old(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2009) {\n      return [prefix + 'box-orient', prefix + 'box-direction']\n    } else {\n      return super.old(prop, prefix)\n    }\n  }\n}\n\nFlexDirection.names = ['flex-direction', 'box-direction', 'box-orient']\n\nmodule.exports = FlexDirection\n", "let Declaration = require('../declaration')\n\nclass ImageRendering extends Declaration {\n  /**\n   * Add hack only for crisp-edges\n   */\n  check(decl) {\n    return decl.value === 'pixelated'\n  }\n\n  /**\n   * Change property name for IE\n   */\n  prefixed(prop, prefix) {\n    if (prefix === '-ms-') {\n      return '-ms-interpolation-mode'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Change property and value for IE\n   */\n  set(decl, prefix) {\n    if (prefix !== '-ms-') return super.set(decl, prefix)\n    decl.prop = '-ms-interpolation-mode'\n    decl.value = 'nearest-neighbor'\n    return decl\n  }\n\n  /**\n   * Return property name by spec\n   */\n  normalize() {\n    return 'image-rendering'\n  }\n\n  /**\n   * Warn on old value\n   */\n  process(node, result) {\n    return super.process(node, result)\n  }\n}\n\nImageRendering.names = ['image-rendering', 'interpolation-mode']\n\nmodule.exports = ImageRendering\n", "let Declaration = require('../declaration')\nlet utils = require('../utils')\n\nclass BackdropFilter extends Declaration {\n  constructor(name, prefixes, all) {\n    super(name, prefixes, all)\n\n    if (this.prefixes) {\n      this.prefixes = utils.uniq(\n        this.prefixes.map(i => {\n          return i === '-ms-' ? '-webkit-' : i\n        })\n      )\n    }\n  }\n}\n\nBackdropFilter.names = ['backdrop-filter']\n\nmodule.exports = BackdropFilter\n", "let Declaration = require('../declaration')\nlet utils = require('../utils')\n\nclass BackgroundClip extends Declaration {\n  constructor(name, prefixes, all) {\n    super(name, prefixes, all)\n\n    if (this.prefixes) {\n      this.prefixes = utils.uniq(\n        this.prefixes.map(i => {\n          return i === '-ms-' ? '-webkit-' : i\n        })\n      )\n    }\n  }\n\n  check(decl) {\n    return decl.value.toLowerCase() === 'text'\n  }\n}\n\nBackgroundClip.names = ['background-clip']\n\nmodule.exports = BackgroundClip\n", "let Declaration = require('../declaration')\n\nconst BASIC = [\n  'none',\n  'underline',\n  'overline',\n  'line-through',\n  'blink',\n  'inherit',\n  'initial',\n  'unset'\n]\n\nclass TextDecoration extends Declaration {\n  /**\n   * Do not add prefixes for basic values.\n   */\n  check(decl) {\n    return decl.value.split(/\\s+/).some(i => !BASIC.includes(i))\n  }\n}\n\nTextDecoration.names = ['text-decoration']\n\nmodule.exports = TextDecoration\n", "let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass JustifyContent extends Declaration {\n  /**\n   * Change property name for 2009 and 2012 specs\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2009) {\n      return prefix + 'box-pack'\n    }\n    if (spec === 2012) {\n      return prefix + 'flex-pack'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'justify-content'\n  }\n\n  /**\n   * Change value for 2009 and 2012 specs\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec === 2009 || spec === 2012) {\n      let value = JustifyContent.oldValues[decl.value] || decl.value\n      decl.value = value\n      if (spec !== 2009 || value !== 'distribute') {\n        return super.set(decl, prefix)\n      }\n    } else if (spec === 'final') {\n      return super.set(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nJustifyContent.names = ['justify-content', 'flex-pack', 'box-pack']\n\nJustifyContent.oldValues = {\n  'flex-end': 'end',\n  'flex-start': 'start',\n  'space-between': 'justify',\n  'space-around': 'distribute'\n}\n\nmodule.exports = JustifyContent\n", "let Declaration = require('../declaration')\n\nclass BackgroundSize extends Declaration {\n  /**\n   * Duplication parameter for -webkit- browsers\n   */\n  set(decl, prefix) {\n    let value = decl.value.toLowerCase()\n    if (\n      prefix === '-webkit-' &&\n      !value.includes(' ') &&\n      value !== 'contain' &&\n      value !== 'cover'\n    ) {\n      decl.value = decl.value + ' ' + decl.value\n    }\n    return super.set(decl, prefix)\n  }\n}\n\nBackgroundSize.names = ['background-size']\n\nmodule.exports = BackgroundSize\n", "let Declaration = require('../declaration')\nlet utils = require('./grid-utils')\n\nclass GridRowColumn extends Declaration {\n  /**\n   * Translate grid-row / grid-column to separate -ms- prefixed properties\n   */\n  insert(decl, prefix, prefixes) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    let values = utils.parse(decl)\n    let [start, span] = utils.translate(values, 0, 1)\n\n    let hasStartValueSpan = values[0] && values[0].includes('span')\n\n    if (hasStartValueSpan) {\n      span = values[0].join('').replace(/\\D/g, '')\n    }\n\n    ;[\n      [decl.prop, start],\n      [`${decl.prop}-span`, span]\n    ].forEach(([prop, value]) => {\n      utils.insertDecl(decl, prop, value)\n    })\n\n    return undefined\n  }\n}\n\nGridRowColumn.names = ['grid-row', 'grid-column']\n\nmodule.exports = GridRowColumn\n", "let Declaration = require('../declaration')\nlet {\n  prefixTrackProp,\n  prefixTrackValue,\n  autoplaceGridItems,\n  getGridGap,\n  inheritGridGap\n} = require('./grid-utils')\nlet Processor = require('../processor')\n\nclass GridRowsColumns extends Declaration {\n  /**\n   * Change property name for IE\n   */\n  prefixed(prop, prefix) {\n    if (prefix === '-ms-') {\n      return prefixTrackProp({ prop, prefix })\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Change IE property back\n   */\n  normalize(prop) {\n    return prop.replace(/^grid-(rows|columns)/, 'grid-template-$1')\n  }\n\n  insert(decl, prefix, prefixes, result) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    let { parent, prop, value } = decl\n    let isRowProp = prop.includes('rows')\n    let isColumnProp = prop.includes('columns')\n\n    let hasGridTemplate = parent.some(\n      i => i.prop === 'grid-template' || i.prop === 'grid-template-areas'\n    )\n\n    /**\n     * Not to prefix rows declaration if grid-template(-areas) is present\n     */\n    if (hasGridTemplate && isRowProp) {\n      return false\n    }\n\n    let processor = new Processor({ options: {} })\n    let status = processor.gridStatus(parent, result)\n    let gap = getGridGap(decl)\n    gap = inheritGridGap(decl, gap) || gap\n\n    let gapValue = isRowProp ? gap.row : gap.column\n\n    if ((status === 'no-autoplace' || status === true) && !hasGridTemplate) {\n      gapValue = null\n    }\n\n    let prefixValue = prefixTrackValue({\n      value,\n      gap: gapValue\n    })\n\n    /**\n     * Insert prefixes\n     */\n    decl.cloneBefore({\n      prop: prefixTrackProp({ prop, prefix }),\n      value: prefixValue\n    })\n\n    let autoflow = parent.nodes.find(i => i.prop === 'grid-auto-flow')\n    let autoflowValue = 'row'\n\n    if (autoflow && !processor.disabled(autoflow, result)) {\n      autoflowValue = autoflow.value.trim()\n    }\n    if (status === 'autoplace') {\n      /**\n       * Show warning if grid-template-rows decl is not found\n       */\n      let rowDecl = parent.nodes.find(i => i.prop === 'grid-template-rows')\n\n      if (!rowDecl && hasGridTemplate) {\n        return undefined\n      } else if (!rowDecl && !hasGridTemplate) {\n        decl.warn(\n          result,\n          'Autoplacement does not work without grid-template-rows property'\n        )\n        return undefined\n      }\n\n      /**\n       * Show warning if grid-template-columns decl is not found\n       */\n      let columnDecl = parent.nodes.find(i => {\n        return i.prop === 'grid-template-columns'\n      })\n      if (!columnDecl && !hasGridTemplate) {\n        decl.warn(\n          result,\n          'Autoplacement does not work without grid-template-columns property'\n        )\n      }\n\n      /**\n       * Autoplace grid items\n       */\n      if (isColumnProp && !hasGridTemplate) {\n        autoplaceGridItems(decl, result, gap, autoflowValue)\n      }\n    }\n\n    return undefined\n  }\n}\n\nGridRowsColumns.names = [\n  'grid-template-rows',\n  'grid-template-columns',\n  'grid-rows',\n  'grid-columns'\n]\n\nmodule.exports = GridRowsColumns\n", "let Declaration = require('../declaration')\n\nclass GridColumnAlign extends Declaration {\n  /**\n   * Do not prefix flexbox values\n   */\n  check(decl) {\n    return !decl.value.includes('flex-') && decl.value !== 'baseline'\n  }\n\n  /**\n   * Change property name for IE\n   */\n  prefixed(prop, prefix) {\n    return prefix + 'grid-column-align'\n  }\n\n  /**\n   * Change IE property back\n   */\n  normalize() {\n    return 'justify-self'\n  }\n}\n\nGridColumnAlign.names = ['grid-column-align']\n\nmodule.exports = GridColumnAlign\n", "let Declaration = require('../declaration')\n\nclass PrintColorAdjust extends Declaration {\n  /**\n   * Change property name for WebKit-based browsers\n   */\n  prefixed(prop, prefix) {\n    if (prefix === '-moz-') {\n      return 'color-adjust'\n    } else {\n      return prefix + 'print-color-adjust'\n    }\n  }\n\n  /**\n   * Return property name by spec\n   */\n  normalize() {\n    return 'print-color-adjust'\n  }\n}\n\nPrintColorAdjust.names = ['print-color-adjust', 'color-adjust']\n\nmodule.exports = PrintColorAdjust\n", "let Declaration = require('../declaration')\n\nclass OverscrollBehavior extends Declaration {\n  /**\n   * Change property name for IE\n   */\n  prefixed(prop, prefix) {\n    return prefix + 'scroll-chaining'\n  }\n\n  /**\n   * Return property name by spec\n   */\n  normalize() {\n    return 'overscroll-behavior'\n  }\n\n  /**\n   * Change value for IE\n   */\n  set(decl, prefix) {\n    if (decl.value === 'auto') {\n      decl.value = 'chained'\n    } else if (decl.value === 'none' || decl.value === 'contain') {\n      decl.value = 'none'\n    }\n    return super.set(decl, prefix)\n  }\n}\n\nOverscrollBehavior.names = ['overscroll-behavior', 'scroll-chaining']\n\nmodule.exports = OverscrollBehavior\n", "let Declaration = require('../declaration')\nlet {\n  parseGridAreas,\n  warnMissedAreas,\n  prefixTrackProp,\n  prefixTrackValue,\n  getGridGap,\n  warnGridGap,\n  inheritGridGap\n} = require('./grid-utils')\n\nfunction getGridRows(tpl) {\n  return tpl\n    .trim()\n    .slice(1, -1)\n    .split(/[\"']\\s*[\"']?/g)\n}\n\nclass GridTemplateAreas extends Declaration {\n  /**\n   * Translate grid-template-areas to separate -ms- prefixed properties\n   */\n  insert(decl, prefix, prefixes, result) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    let hasColumns = false\n    let hasRows = false\n    let parent = decl.parent\n    let gap = getGridGap(decl)\n    gap = inheritGridGap(decl, gap) || gap\n\n    // remove already prefixed rows\n    // to prevent doubling prefixes\n    parent.walkDecls(/-ms-grid-rows/, i => i.remove())\n\n    // add empty tracks to rows\n    parent.walkDecls(/grid-template-(rows|columns)/, trackDecl => {\n      if (trackDecl.prop === 'grid-template-rows') {\n        hasRows = true\n        let { prop, value } = trackDecl\n        trackDecl.cloneBefore({\n          prop: prefixTrackProp({ prop, prefix }),\n          value: prefixTrackValue({ value, gap: gap.row })\n        })\n      } else {\n        hasColumns = true\n      }\n    })\n\n    let gridRows = getGridRows(decl.value)\n\n    if (hasColumns && !hasRows && gap.row && gridRows.length > 1) {\n      decl.cloneBefore({\n        prop: '-ms-grid-rows',\n        value: prefixTrackValue({\n          value: `repeat(${gridRows.length}, auto)`,\n          gap: gap.row\n        }),\n        raws: {}\n      })\n    }\n\n    // warnings\n    warnGridGap({\n      gap,\n      hasColumns,\n      decl,\n      result\n    })\n\n    let areas = parseGridAreas({\n      rows: gridRows,\n      gap\n    })\n\n    warnMissedAreas(areas, decl, result)\n\n    return decl\n  }\n}\n\nGridTemplateAreas.names = ['grid-template-areas']\n\nmodule.exports = GridTemplateAreas\n", "let Declaration = require('../declaration')\n\nclass TextEmphasisPosition extends Declaration {\n  set(decl, prefix) {\n    if (prefix === '-webkit-') {\n      decl.value = decl.value.replace(/\\s*(right|left)\\s*/i, '')\n    }\n    return super.set(decl, prefix)\n  }\n}\n\nTextEmphasisPosition.names = ['text-emphasis-position']\n\nmodule.exports = TextEmphasisPosition\n", "let Declaration = require('../declaration')\n\nclass TextDecorationSkipInk extends Declaration {\n  /**\n   * Change prefix for ink value\n   */\n  set(decl, prefix) {\n    if (decl.prop === 'text-decoration-skip-ink' && decl.value === 'auto') {\n      decl.prop = prefix + 'text-decoration-skip'\n      decl.value = 'ink'\n      return decl\n    } else {\n      return super.set(decl, prefix)\n    }\n  }\n}\n\nTextDecorationSkipInk.names = [\n  'text-decoration-skip-ink',\n  'text-decoration-skip'\n]\n\nmodule.exports = TextDecorationSkipInk\n", "'use strict';\nmodule.exports = {\n  wrap: wrapRange,\n  limit: limitRange,\n  validate: validateRange,\n  test: testRange,\n  curry: curry,\n  name: name\n};\n\nfunction wrapRange(min, max, value) {\n  var maxLessMin = max - min;\n  return ((value - min) % maxLessMin + maxLessMin) % maxLessMin + min;\n}\n\nfunction limitRange(min, max, value) {\n  return Math.max(min, Math.min(max, value));\n}\n\nfunction validateRange(min, max, value, minExclusive, maxExclusive) {\n  if (!testRange(min, max, value, minExclusive, maxExclusive)) {\n    throw new Error(value + ' is outside of range [' + min + ',' + max + ')');\n  }\n  return value;\n}\n\nfunction testRange(min, max, value, minExclusive, maxExclusive) {\n  return !(\n       value < min ||\n       value > max ||\n       (maxExclusive && (value === max)) ||\n       (minExclusive && (value === min))\n  );\n}\n\nfunction name(min, max, minExcl, maxExcl) {\n  return (minExcl ? '(' : '[') + min + ',' + max + (maxExcl ? ')' : ']');\n}\n\nfunction curry(min, max, minExclusive, maxExclusive) {\n  var boundNameFn = name.bind(null, min, max, minExclusive, maxExclusive);\n  return {\n    wrap: wrapRange.bind(null, min, max),\n    limit: limitRange.bind(null, min, max),\n    validate: function(value) {\n      return validateRange(min, max, value, minExclusive, maxExclusive);\n    },\n    test: function(value) {\n      return testRange(min, max, value, minExclusive, maxExclusive);\n    },\n    toString: boundNameFn,\n    name: boundNameFn\n  };\n}\n", "let parser = require('postcss-value-parser')\nlet range = require('normalize-range')\n\nlet OldValue = require('../old-value')\nlet Value = require('../value')\nlet utils = require('../utils')\n\nlet IS_DIRECTION = /top|left|right|bottom/gi\n\nclass Gradient extends Value {\n  /**\n   * Change degrees for webkit prefix\n   */\n  replace(string, prefix) {\n    let ast = parser(string)\n    for (let node of ast.nodes) {\n      if (node.type === 'function' && node.value === this.name) {\n        node.nodes = this.newDirection(node.nodes)\n        node.nodes = this.normalize(node.nodes)\n        if (prefix === '-webkit- old') {\n          let changes = this.oldWebkit(node)\n          if (!changes) {\n            return false\n          }\n        } else {\n          node.nodes = this.convertDirection(node.nodes)\n          node.value = prefix + node.value\n        }\n      }\n    }\n    return ast.toString()\n  }\n\n  /**\n   * Replace first token\n   */\n  replaceFirst(params, ...words) {\n    let prefix = words.map(i => {\n      if (i === ' ') {\n        return { type: 'space', value: i }\n      }\n      return { type: 'word', value: i }\n    })\n    return prefix.concat(params.slice(1))\n  }\n\n  /**\n   * Convert angle unit to deg\n   */\n  normalizeUnit(str, full) {\n    let num = parseFloat(str)\n    let deg = (num / full) * 360\n    return `${deg}deg`\n  }\n\n  /**\n   * Normalize angle\n   */\n  normalize(nodes) {\n    if (!nodes[0]) return nodes\n\n    if (/-?\\d+(.\\d+)?grad/.test(nodes[0].value)) {\n      nodes[0].value = this.normalizeUnit(nodes[0].value, 400)\n    } else if (/-?\\d+(.\\d+)?rad/.test(nodes[0].value)) {\n      nodes[0].value = this.normalizeUnit(nodes[0].value, 2 * Math.PI)\n    } else if (/-?\\d+(.\\d+)?turn/.test(nodes[0].value)) {\n      nodes[0].value = this.normalizeUnit(nodes[0].value, 1)\n    } else if (nodes[0].value.includes('deg')) {\n      let num = parseFloat(nodes[0].value)\n      num = range.wrap(0, 360, num)\n      nodes[0].value = `${num}deg`\n    }\n\n    if (nodes[0].value === '0deg') {\n      nodes = this.replaceFirst(nodes, 'to', ' ', 'top')\n    } else if (nodes[0].value === '90deg') {\n      nodes = this.replaceFirst(nodes, 'to', ' ', 'right')\n    } else if (nodes[0].value === '180deg') {\n      nodes = this.replaceFirst(nodes, 'to', ' ', 'bottom')\n    } else if (nodes[0].value === '270deg') {\n      nodes = this.replaceFirst(nodes, 'to', ' ', 'left')\n    }\n\n    return nodes\n  }\n\n  /**\n   * Replace old direction to new\n   */\n  newDirection(params) {\n    if (params[0].value === 'to') {\n      return params\n    }\n    IS_DIRECTION.lastIndex = 0 // reset search index of global regexp\n    if (!IS_DIRECTION.test(params[0].value)) {\n      return params\n    }\n\n    params.unshift(\n      {\n        type: 'word',\n        value: 'to'\n      },\n      {\n        type: 'space',\n        value: ' '\n      }\n    )\n\n    for (let i = 2; i < params.length; i++) {\n      if (params[i].type === 'div') {\n        break\n      }\n      if (params[i].type === 'word') {\n        params[i].value = this.revertDirection(params[i].value)\n      }\n    }\n\n    return params\n  }\n\n  /**\n   * Look for at word\n   */\n  isRadial(params) {\n    let state = 'before'\n    for (let param of params) {\n      if (state === 'before' && param.type === 'space') {\n        state = 'at'\n      } else if (state === 'at' && param.value === 'at') {\n        state = 'after'\n      } else if (state === 'after' && param.type === 'space') {\n        return true\n      } else if (param.type === 'div') {\n        break\n      } else {\n        state = 'before'\n      }\n    }\n    return false\n  }\n\n  /**\n   * Change new direction to old\n   */\n  convertDirection(params) {\n    if (params.length > 0) {\n      if (params[0].value === 'to') {\n        this.fixDirection(params)\n      } else if (params[0].value.includes('deg')) {\n        this.fixAngle(params)\n      } else if (this.isRadial(params)) {\n        this.fixRadial(params)\n      }\n    }\n    return params\n  }\n\n  /**\n   * Replace `to top left` to `bottom right`\n   */\n  fixDirection(params) {\n    params.splice(0, 2)\n\n    for (let param of params) {\n      if (param.type === 'div') {\n        break\n      }\n      if (param.type === 'word') {\n        param.value = this.revertDirection(param.value)\n      }\n    }\n  }\n\n  /**\n   * Add 90 degrees\n   */\n  fixAngle(params) {\n    let first = params[0].value\n    first = parseFloat(first)\n    first = Math.abs(450 - first) % 360\n    first = this.roundFloat(first, 3)\n    params[0].value = `${first}deg`\n  }\n\n  /**\n   * Fix radial direction syntax\n   */\n  fixRadial(params) {\n    let first = []\n    let second = []\n    let a, b, c, i, next\n\n    for (i = 0; i < params.length - 2; i++) {\n      a = params[i]\n      b = params[i + 1]\n      c = params[i + 2]\n      if (a.type === 'space' && b.value === 'at' && c.type === 'space') {\n        next = i + 3\n        break\n      } else {\n        first.push(a)\n      }\n    }\n\n    let div\n    for (i = next; i < params.length; i++) {\n      if (params[i].type === 'div') {\n        div = params[i]\n        break\n      } else {\n        second.push(params[i])\n      }\n    }\n\n    params.splice(0, i, ...second, div, ...first)\n  }\n\n  revertDirection(word) {\n    return Gradient.directions[word.toLowerCase()] || word\n  }\n\n  /**\n   * Round float and save digits under dot\n   */\n  roundFloat(float, digits) {\n    return parseFloat(float.toFixed(digits))\n  }\n\n  /**\n   * Convert to old webkit syntax\n   */\n  oldWebkit(node) {\n    let { nodes } = node\n    let string = parser.stringify(node.nodes)\n\n    if (this.name !== 'linear-gradient') {\n      return false\n    }\n    if (nodes[0] && nodes[0].value.includes('deg')) {\n      return false\n    }\n    if (\n      string.includes('px') ||\n      string.includes('-corner') ||\n      string.includes('-side')\n    ) {\n      return false\n    }\n\n    let params = [[]]\n    for (let i of nodes) {\n      params[params.length - 1].push(i)\n      if (i.type === 'div' && i.value === ',') {\n        params.push([])\n      }\n    }\n\n    this.oldDirection(params)\n    this.colorStops(params)\n\n    node.nodes = []\n    for (let param of params) {\n      node.nodes = node.nodes.concat(param)\n    }\n\n    node.nodes.unshift(\n      { type: 'word', value: 'linear' },\n      this.cloneDiv(node.nodes)\n    )\n    node.value = '-webkit-gradient'\n\n    return true\n  }\n\n  /**\n   * Change direction syntax to old webkit\n   */\n  oldDirection(params) {\n    let div = this.cloneDiv(params[0])\n\n    if (params[0][0].value !== 'to') {\n      return params.unshift([\n        { type: 'word', value: Gradient.oldDirections.bottom },\n        div\n      ])\n    } else {\n      let words = []\n      for (let node of params[0].slice(2)) {\n        if (node.type === 'word') {\n          words.push(node.value.toLowerCase())\n        }\n      }\n\n      words = words.join(' ')\n      let old = Gradient.oldDirections[words] || words\n\n      params[0] = [{ type: 'word', value: old }, div]\n      return params[0]\n    }\n  }\n\n  /**\n   * Get div token from exists parameters\n   */\n  cloneDiv(params) {\n    for (let i of params) {\n      if (i.type === 'div' && i.value === ',') {\n        return i\n      }\n    }\n    return { type: 'div', value: ',', after: ' ' }\n  }\n\n  /**\n   * Change colors syntax to old webkit\n   */\n  colorStops(params) {\n    let result = []\n    for (let i = 0; i < params.length; i++) {\n      let pos\n      let param = params[i]\n      let item\n      if (i === 0) {\n        continue\n      }\n\n      let color = parser.stringify(param[0])\n      if (param[1] && param[1].type === 'word') {\n        pos = param[1].value\n      } else if (param[2] && param[2].type === 'word') {\n        pos = param[2].value\n      }\n\n      let stop\n      if (i === 1 && (!pos || pos === '0%')) {\n        stop = `from(${color})`\n      } else if (i === params.length - 1 && (!pos || pos === '100%')) {\n        stop = `to(${color})`\n      } else if (pos) {\n        stop = `color-stop(${pos}, ${color})`\n      } else {\n        stop = `color-stop(${color})`\n      }\n\n      let div = param[param.length - 1]\n      params[i] = [{ type: 'word', value: stop }]\n      if (div.type === 'div' && div.value === ',') {\n        item = params[i].push(div)\n      }\n      result.push(item)\n    }\n    return result\n  }\n\n  /**\n   * Remove old WebKit gradient too\n   */\n  old(prefix) {\n    if (prefix === '-webkit-') {\n      let type = this.name === 'linear-gradient' ? 'linear' : 'radial'\n      let string = '-gradient'\n      let regexp = utils.regexp(\n        `-webkit-(${type}-gradient|gradient\\\\(\\\\s*${type})`,\n        false\n      )\n\n      return new OldValue(this.name, prefix + this.name, string, regexp)\n    } else {\n      return super.old(prefix)\n    }\n  }\n\n  /**\n   * Do not add non-webkit prefixes for list-style and object\n   */\n  add(decl, prefix) {\n    let p = decl.prop\n    if (p.includes('mask')) {\n      if (prefix === '-webkit-' || prefix === '-webkit- old') {\n        return super.add(decl, prefix)\n      }\n    } else if (\n      p === 'list-style' ||\n      p === 'list-style-image' ||\n      p === 'content'\n    ) {\n      if (prefix === '-webkit-' || prefix === '-webkit- old') {\n        return super.add(decl, prefix)\n      }\n    } else {\n      return super.add(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nGradient.names = [\n  'linear-gradient',\n  'repeating-linear-gradient',\n  'radial-gradient',\n  'repeating-radial-gradient'\n]\n\nGradient.directions = {\n  top: 'bottom',\n  left: 'right',\n  bottom: 'top',\n  right: 'left'\n}\n\n// Direction to replace\nGradient.oldDirections = {\n  'top': 'left bottom, left top',\n  'left': 'right top, left top',\n  'bottom': 'left top, left bottom',\n  'right': 'left top, right top',\n\n  'top right': 'left bottom, right top',\n  'top left': 'right bottom, left top',\n  'right top': 'left bottom, right top',\n  'right bottom': 'left top, right bottom',\n  'bottom right': 'left top, right bottom',\n  'bottom left': 'right top, left bottom',\n  'left top': 'right bottom, left top',\n  'left bottom': 'right top, left bottom'\n}\n\nmodule.exports = Gradient\n", "let OldValue = require('../old-value')\nlet Value = require('../value')\n\nfunction regexp(name) {\n  return new RegExp(`(^|[\\\\s,(])(${name}($|[\\\\s),]))`, 'gi')\n}\n\nclass Intrinsic extends Value {\n  regexp() {\n    if (!this.regexpCache) this.regexpCache = regexp(this.name)\n    return this.regexpCache\n  }\n\n  isStretch() {\n    return (\n      this.name === 'stretch' ||\n      this.name === 'fill' ||\n      this.name === 'fill-available'\n    )\n  }\n\n  replace(string, prefix) {\n    if (prefix === '-moz-' && this.isStretch()) {\n      return string.replace(this.regexp(), '$1-moz-available$3')\n    }\n    if (prefix === '-webkit-' && this.isStretch()) {\n      return string.replace(this.regexp(), '$1-webkit-fill-available$3')\n    }\n    return super.replace(string, prefix)\n  }\n\n  old(prefix) {\n    let prefixed = prefix + this.name\n    if (this.isStretch()) {\n      if (prefix === '-moz-') {\n        prefixed = '-moz-available'\n      } else if (prefix === '-webkit-') {\n        prefixed = '-webkit-fill-available'\n      }\n    }\n    return new OldValue(this.name, prefixed, prefixed, regexp(prefixed))\n  }\n\n  add(decl, prefix) {\n    if (decl.prop.includes('grid') && prefix !== '-webkit-') {\n      return undefined\n    }\n    return super.add(decl, prefix)\n  }\n}\n\nIntrinsic.names = [\n  'max-content',\n  'min-content',\n  'fit-content',\n  'fill',\n  'fill-available',\n  'stretch'\n]\n\nmodule.exports = Intrinsic\n", "let OldValue = require('../old-value')\nlet Value = require('../value')\n\nclass Pixelated extends Value {\n  /**\n   * Use non-standard name for WebKit and Firefox\n   */\n  replace(string, prefix) {\n    if (prefix === '-webkit-') {\n      return string.replace(this.regexp(), '$1-webkit-optimize-contrast')\n    }\n    if (prefix === '-moz-') {\n      return string.replace(this.regexp(), '$1-moz-crisp-edges')\n    }\n    return super.replace(string, prefix)\n  }\n\n  /**\n   * Different name for WebKit and Firefox\n   */\n  old(prefix) {\n    if (prefix === '-webkit-') {\n      return new OldValue(this.name, '-webkit-optimize-contrast')\n    }\n    if (prefix === '-moz-') {\n      return new OldValue(this.name, '-moz-crisp-edges')\n    }\n    return super.old(prefix)\n  }\n}\n\nPixelated.names = ['pixelated']\n\nmodule.exports = Pixelated\n", "let Value = require('../value')\n\nclass ImageSet extends Value {\n  /**\n   * Use non-standard name for WebKit and Firefox\n   */\n  replace(string, prefix) {\n    let fixed = super.replace(string, prefix)\n    if (prefix === '-webkit-') {\n      fixed = fixed.replace(/(\"[^\"]+\"|'[^']+')(\\s+\\d+\\w)/gi, 'url($1)$2')\n    }\n    return fixed\n  }\n}\n\nImageSet.names = ['image-set']\n\nmodule.exports = ImageSet\n", "let list = require('postcss').list\n\nlet Value = require('../value')\n\nclass CrossFade extends Value {\n  replace(string, prefix) {\n    return list\n      .space(string)\n      .map(value => {\n        if (value.slice(0, +this.name.length + 1) !== this.name + '(') {\n          return value\n        }\n\n        let close = value.lastIndexOf(')')\n        let after = value.slice(close + 1)\n        let args = value.slice(this.name.length + 1, close)\n\n        if (prefix === '-webkit-') {\n          let match = args.match(/\\d*.?\\d+%?/)\n          if (match) {\n            args = args.slice(match[0].length).trim()\n            args += `, ${match[0]}`\n          } else {\n            args += ', 0.5'\n          }\n        }\n        return prefix + this.name + '(' + args + ')' + after\n      })\n      .join(' ')\n  }\n}\n\nCrossFade.names = ['cross-fade']\n\nmodule.exports = CrossFade\n", "let flexSpec = require('./flex-spec')\nlet OldValue = require('../old-value')\nlet Value = require('../value')\n\nclass DisplayFlex extends Value {\n  constructor(name, prefixes) {\n    super(name, prefixes)\n    if (name === 'display-flex') {\n      this.name = 'flex'\n    }\n  }\n\n  /**\n   * Faster check for flex value\n   */\n  check(decl) {\n    return decl.prop === 'display' && decl.value === this.name\n  }\n\n  /**\n   * Return value by spec\n   */\n  prefixed(prefix) {\n    let spec, value\n    ;[spec, prefix] = flexSpec(prefix)\n\n    if (spec === 2009) {\n      if (this.name === 'flex') {\n        value = 'box'\n      } else {\n        value = 'inline-box'\n      }\n    } else if (spec === 2012) {\n      if (this.name === 'flex') {\n        value = 'flexbox'\n      } else {\n        value = 'inline-flexbox'\n      }\n    } else if (spec === 'final') {\n      value = this.name\n    }\n\n    return prefix + value\n  }\n\n  /**\n   * Add prefix to value depend on flebox spec version\n   */\n  replace(string, prefix) {\n    return this.prefixed(prefix)\n  }\n\n  /**\n   * Change value for old specs\n   */\n  old(prefix) {\n    let prefixed = this.prefixed(prefix)\n    if (!prefixed) return undefined\n    return new OldValue(this.name, prefixed)\n  }\n}\n\nDisplayFlex.names = ['display-flex', 'inline-flex']\n\nmodule.exports = DisplayFlex\n", "let Value = require('../value')\n\nclass DisplayGrid extends Value {\n  constructor(name, prefixes) {\n    super(name, prefixes)\n    if (name === 'display-grid') {\n      this.name = 'grid'\n    }\n  }\n\n  /**\n   * Faster check for flex value\n   */\n  check(decl) {\n    return decl.prop === 'display' && decl.value === this.name\n  }\n}\n\nDisplayGrid.names = ['display-grid', 'inline-grid']\n\nmodule.exports = DisplayGrid\n", "let Value = require('../value')\n\nclass FilterValue extends Value {\n  constructor(name, prefixes) {\n    super(name, prefixes)\n    if (name === 'filter-function') {\n      this.name = 'filter'\n    }\n  }\n}\n\nFilterValue.names = ['filter', 'filter-function']\n\nmodule.exports = FilterValue\n", "let Selector = require('../selector')\nlet utils = require('../utils')\n\nclass Autofill extends Selector {\n  constructor(name, prefixes, all) {\n    super(name, prefixes, all)\n\n    if (this.prefixes) {\n      this.prefixes = utils.uniq(this.prefixes.map(() => '-webkit-'))\n    }\n  }\n\n  /**\n   * Return different selectors depend on prefix\n   */\n  prefixed(prefix) {\n    if (prefix === '-webkit-') {\n      return ':-webkit-autofill'\n    }\n    return `:${prefix}autofill`\n  }\n}\n\nAutofill.names = [':autofill']\n\nmodule.exports = Autofill\n", "let vendor = require('./vendor')\nlet Declaration = require('./declaration')\nlet Resolution = require('./resolution')\nlet Transition = require('./transition')\nlet Processor = require('./processor')\nlet Supports = require('./supports')\nlet Browsers = require('./browsers')\nlet Selector = require('./selector')\nlet AtRule = require('./at-rule')\nlet Value = require('./value')\nlet utils = require('./utils')\nlet hackFullscreen = require('./hacks/fullscreen')\nlet hackPlaceholder = require('./hacks/placeholder')\nlet hackPlaceholderShown = require('./hacks/placeholder-shown')\nlet hackFileSelectorButton = require('./hacks/file-selector-button')\nlet hackFlex = require('./hacks/flex')\nlet hackOrder = require('./hacks/order')\nlet hackFilter = require('./hacks/filter')\nlet hackGridEnd = require('./hacks/grid-end')\nlet hackAnimation = require('./hacks/animation')\nlet hackFlexFlow = require('./hacks/flex-flow')\nlet hackFlexGrow = require('./hacks/flex-grow')\nlet hackFlexWrap = require('./hacks/flex-wrap')\nlet hackGridArea = require('./hacks/grid-area')\nlet hackPlaceSelf = require('./hacks/place-self')\nlet hackGridStart = require('./hacks/grid-start')\nlet hackAlignSelf = require('./hacks/align-self')\nlet hackAppearance = require('./hacks/appearance')\nlet hackFlexBasis = require('./hacks/flex-basis')\nlet hackMaskBorder = require('./hacks/mask-border')\nlet hackMaskComposite = require('./hacks/mask-composite')\nlet hackAlignItems = require('./hacks/align-items')\nlet hackUserSelect = require('./hacks/user-select')\nlet hackFlexShrink = require('./hacks/flex-shrink')\nlet hackBreakProps = require('./hacks/break-props')\nlet hackWritingMode = require('./hacks/writing-mode')\nlet hackBorderImage = require('./hacks/border-image')\nlet hackAlignContent = require('./hacks/align-content')\nlet hackBorderRadius = require('./hacks/border-radius')\nlet hackBlockLogical = require('./hacks/block-logical')\nlet hackGridTemplate = require('./hacks/grid-template')\nlet hackInlineLogical = require('./hacks/inline-logical')\nlet hackGridRowAlign = require('./hacks/grid-row-align')\nlet hackTransformDecl = require('./hacks/transform-decl')\nlet hackFlexDirection = require('./hacks/flex-direction')\nlet hackImageRendering = require('./hacks/image-rendering')\nlet hackBackdropFilter = require('./hacks/backdrop-filter')\nlet hackBackgroundClip = require('./hacks/background-clip')\nlet hackTextDecoration = require('./hacks/text-decoration')\nlet hackJustifyContent = require('./hacks/justify-content')\nlet hackBackgroundSize = require('./hacks/background-size')\nlet hackGridRowColumn = require('./hacks/grid-row-column')\nlet hackGridRowsColumns = require('./hacks/grid-rows-columns')\nlet hackGridColumnAlign = require('./hacks/grid-column-align')\nlet hackPrintColorAdjust = require('./hacks/print-color-adjust')\nlet hackOverscrollBehavior = require('./hacks/overscroll-behavior')\nlet hackGridTemplateAreas = require('./hacks/grid-template-areas')\nlet hackTextEmphasisPosition = require('./hacks/text-emphasis-position')\nlet hackTextDecorationSkipInk = require('./hacks/text-decoration-skip-ink')\nlet hackGradient = require('./hacks/gradient')\nlet hackIntrinsic = require('./hacks/intrinsic')\nlet hackPixelated = require('./hacks/pixelated')\nlet hackImageSet = require('./hacks/image-set')\nlet hackCrossFade = require('./hacks/cross-fade')\nlet hackDisplayFlex = require('./hacks/display-flex')\nlet hackDisplayGrid = require('./hacks/display-grid')\nlet hackFilterValue = require('./hacks/filter-value')\nlet hackAutofill = require('./hacks/autofill')\n\nSelector.hack(hackAutofill)\nSelector.hack(hackFullscreen)\nSelector.hack(hackPlaceholder)\nSelector.hack(hackPlaceholderShown)\nSelector.hack(hackFileSelectorButton)\nDeclaration.hack(hackFlex)\nDeclaration.hack(hackOrder)\nDeclaration.hack(hackFilter)\nDeclaration.hack(hackGridEnd)\nDeclaration.hack(hackAnimation)\nDeclaration.hack(hackFlexFlow)\nDeclaration.hack(hackFlexGrow)\nDeclaration.hack(hackFlexWrap)\nDeclaration.hack(hackGridArea)\nDeclaration.hack(hackPlaceSelf)\nDeclaration.hack(hackGridStart)\nDeclaration.hack(hackAlignSelf)\nDeclaration.hack(hackAppearance)\nDeclaration.hack(hackFlexBasis)\nDeclaration.hack(hackMaskBorder)\nDeclaration.hack(hackMaskComposite)\nDeclaration.hack(hackAlignItems)\nDeclaration.hack(hackUserSelect)\nDeclaration.hack(hackFlexShrink)\nDeclaration.hack(hackBreakProps)\nDeclaration.hack(hackWritingMode)\nDeclaration.hack(hackBorderImage)\nDeclaration.hack(hackAlignContent)\nDeclaration.hack(hackBorderRadius)\nDeclaration.hack(hackBlockLogical)\nDeclaration.hack(hackGridTemplate)\nDeclaration.hack(hackInlineLogical)\nDeclaration.hack(hackGridRowAlign)\nDeclaration.hack(hackTransformDecl)\nDeclaration.hack(hackFlexDirection)\nDeclaration.hack(hackImageRendering)\nDeclaration.hack(hackBackdropFilter)\nDeclaration.hack(hackBackgroundClip)\nDeclaration.hack(hackTextDecoration)\nDeclaration.hack(hackJustifyContent)\nDeclaration.hack(hackBackgroundSize)\nDeclaration.hack(hackGridRowColumn)\nDeclaration.hack(hackGridRowsColumns)\nDeclaration.hack(hackGridColumnAlign)\nDeclaration.hack(hackOverscrollBehavior)\nDeclaration.hack(hackGridTemplateAreas)\nDeclaration.hack(hackPrintColorAdjust)\nDeclaration.hack(hackTextEmphasisPosition)\nDeclaration.hack(hackTextDecorationSkipInk)\nValue.hack(hackGradient)\nValue.hack(hackIntrinsic)\nValue.hack(hackPixelated)\nValue.hack(hackImageSet)\nValue.hack(hackCrossFade)\nValue.hack(hackDisplayFlex)\nValue.hack(hackDisplayGrid)\nValue.hack(hackFilterValue)\n\nlet declsCache = new Map()\n\nclass Prefixes {\n  constructor(data, browsers, options = {}) {\n    this.data = data\n    this.browsers = browsers\n    this.options = options\n    ;[this.add, this.remove] = this.preprocess(this.select(this.data))\n    this.transition = new Transition(this)\n    this.processor = new Processor(this)\n  }\n\n  /**\n   * Return clone instance to remove all prefixes\n   */\n  cleaner() {\n    if (this.cleanerCache) {\n      return this.cleanerCache\n    }\n\n    if (this.browsers.selected.length) {\n      let empty = new Browsers(this.browsers.data, [])\n      this.cleanerCache = new Prefixes(this.data, empty, this.options)\n    } else {\n      return this\n    }\n\n    return this.cleanerCache\n  }\n\n  /**\n   * Select prefixes from data, which is necessary for selected browsers\n   */\n  select(list) {\n    let selected = { add: {}, remove: {} }\n\n    for (let name in list) {\n      let data = list[name]\n      let add = data.browsers.map(i => {\n        let params = i.split(' ')\n        return {\n          browser: `${params[0]} ${params[1]}`,\n          note: params[2]\n        }\n      })\n\n      let notes = add\n        .filter(i => i.note)\n        .map(i => `${this.browsers.prefix(i.browser)} ${i.note}`)\n      notes = utils.uniq(notes)\n\n      add = add\n        .filter(i => this.browsers.isSelected(i.browser))\n        .map(i => {\n          let prefix = this.browsers.prefix(i.browser)\n          if (i.note) {\n            return `${prefix} ${i.note}`\n          } else {\n            return prefix\n          }\n        })\n      add = this.sort(utils.uniq(add))\n\n      if (this.options.flexbox === 'no-2009') {\n        add = add.filter(i => !i.includes('2009'))\n      }\n\n      let all = data.browsers.map(i => this.browsers.prefix(i))\n      if (data.mistakes) {\n        all = all.concat(data.mistakes)\n      }\n      all = all.concat(notes)\n      all = utils.uniq(all)\n\n      if (add.length) {\n        selected.add[name] = add\n        if (add.length < all.length) {\n          selected.remove[name] = all.filter(i => !add.includes(i))\n        }\n      } else {\n        selected.remove[name] = all\n      }\n    }\n\n    return selected\n  }\n\n  /**\n   * Sort vendor prefixes\n   */\n  sort(prefixes) {\n    return prefixes.sort((a, b) => {\n      let aLength = utils.removeNote(a).length\n      let bLength = utils.removeNote(b).length\n\n      if (aLength === bLength) {\n        return b.length - a.length\n      } else {\n        return bLength - aLength\n      }\n    })\n  }\n\n  /**\n   * Cache prefixes data to fast CSS processing\n   */\n  preprocess(selected) {\n    let add = {\n      'selectors': [],\n      '@supports': new Supports(Prefixes, this)\n    }\n    for (let name in selected.add) {\n      let prefixes = selected.add[name]\n      if (name === '@keyframes' || name === '@viewport') {\n        add[name] = new AtRule(name, prefixes, this)\n      } else if (name === '@resolution') {\n        add[name] = new Resolution(name, prefixes, this)\n      } else if (this.data[name].selector) {\n        add.selectors.push(Selector.load(name, prefixes, this))\n      } else {\n        let props = this.data[name].props\n\n        if (props) {\n          let value = Value.load(name, prefixes, this)\n          for (let prop of props) {\n            if (!add[prop]) {\n              add[prop] = { values: [] }\n            }\n            add[prop].values.push(value)\n          }\n        } else {\n          let values = (add[name] && add[name].values) || []\n          add[name] = Declaration.load(name, prefixes, this)\n          add[name].values = values\n        }\n      }\n    }\n\n    let remove = { selectors: [] }\n    for (let name in selected.remove) {\n      let prefixes = selected.remove[name]\n      if (this.data[name].selector) {\n        let selector = Selector.load(name, prefixes)\n        for (let prefix of prefixes) {\n          remove.selectors.push(selector.old(prefix))\n        }\n      } else if (name === '@keyframes' || name === '@viewport') {\n        for (let prefix of prefixes) {\n          let prefixed = `@${prefix}${name.slice(1)}`\n          remove[prefixed] = { remove: true }\n        }\n      } else if (name === '@resolution') {\n        remove[name] = new Resolution(name, prefixes, this)\n      } else {\n        let props = this.data[name].props\n        if (props) {\n          let value = Value.load(name, [], this)\n          for (let prefix of prefixes) {\n            let old = value.old(prefix)\n            if (old) {\n              for (let prop of props) {\n                if (!remove[prop]) {\n                  remove[prop] = {}\n                }\n                if (!remove[prop].values) {\n                  remove[prop].values = []\n                }\n                remove[prop].values.push(old)\n              }\n            }\n          }\n        } else {\n          for (let p of prefixes) {\n            let olds = this.decl(name).old(name, p)\n            if (name === 'align-self') {\n              let a = add[name] && add[name].prefixes\n              if (a) {\n                if (p === '-webkit- 2009' && a.includes('-webkit-')) {\n                  continue\n                } else if (p === '-webkit-' && a.includes('-webkit- 2009')) {\n                  continue\n                }\n              }\n            }\n            for (let prefixed of olds) {\n              if (!remove[prefixed]) {\n                remove[prefixed] = {}\n              }\n              remove[prefixed].remove = true\n            }\n          }\n        }\n      }\n    }\n\n    return [add, remove]\n  }\n\n  /**\n   * Declaration loader with caching\n   */\n  decl(prop) {\n    if (!declsCache.has(prop)) {\n      declsCache.set(prop, Declaration.load(prop))\n    }\n\n    return declsCache.get(prop)\n  }\n\n  /**\n   * Return unprefixed version of property\n   */\n  unprefixed(prop) {\n    let value = this.normalize(vendor.unprefixed(prop))\n    if (value === 'flex-direction') {\n      value = 'flex-flow'\n    }\n    return value\n  }\n\n  /**\n   * Normalize prefix for remover\n   */\n  normalize(prop) {\n    return this.decl(prop).normalize(prop)\n  }\n\n  /**\n   * Return prefixed version of property\n   */\n  prefixed(prop, prefix) {\n    prop = vendor.unprefixed(prop)\n    return this.decl(prop).prefixed(prop, prefix)\n  }\n\n  /**\n   * Return values, which must be prefixed in selected property\n   */\n  values(type, prop) {\n    let data = this[type]\n\n    let global = data['*'] && data['*'].values\n    let values = data[prop] && data[prop].values\n\n    if (global && values) {\n      return utils.uniq(global.concat(values))\n    } else {\n      return global || values || []\n    }\n  }\n\n  /**\n   * Group declaration by unprefixed property to check them\n   */\n  group(decl) {\n    let rule = decl.parent\n    let index = rule.index(decl)\n    let { length } = rule.nodes\n    let unprefixed = this.unprefixed(decl.prop)\n\n    let checker = (step, callback) => {\n      index += step\n      while (index >= 0 && index < length) {\n        let other = rule.nodes[index]\n        if (other.type === 'decl') {\n          if (step === -1 && other.prop === unprefixed) {\n            if (!Browsers.withPrefix(other.value)) {\n              break\n            }\n          }\n\n          if (this.unprefixed(other.prop) !== unprefixed) {\n            break\n          } else if (callback(other) === true) {\n            return true\n          }\n\n          if (step === +1 && other.prop === unprefixed) {\n            if (!Browsers.withPrefix(other.value)) {\n              break\n            }\n          }\n        }\n\n        index += step\n      }\n      return false\n    }\n\n    return {\n      up(callback) {\n        return checker(-1, callback)\n      },\n      down(callback) {\n        return checker(+1, callback)\n      }\n    }\n  }\n}\n\nmodule.exports = Prefixes\n", "let unpack = require('caniuse-lite').feature\n\nfunction browsersSort(a, b) {\n  a = a.split(' ')\n  b = b.split(' ')\n  if (a[0] > b[0]) {\n    return 1\n  } else if (a[0] < b[0]) {\n    return -1\n  } else {\n    return Math.sign(parseFloat(a[1]) - parseFloat(b[1]))\n  }\n}\n\n// Convert Can I Use data\nfunction f(data, opts, callback) {\n  data = unpack(data)\n\n  if (!callback) {\n    ;[callback, opts] = [opts, {}]\n  }\n\n  let match = opts.match || /\\sx($|\\s)/\n  let need = []\n\n  for (let browser in data.stats) {\n    let versions = data.stats[browser]\n    for (let version in versions) {\n      let support = versions[version]\n      if (support.match(match)) {\n        need.push(browser + ' ' + version)\n      }\n    }\n  }\n\n  callback(need.sort(browsersSort))\n}\n\n// Add data for all properties\nlet result = {}\n\nfunction prefix(names, data) {\n  for (let name of names) {\n    result[name] = Object.assign({}, data)\n  }\n}\n\nfunction add(names, data) {\n  for (let name of names) {\n    result[name].browsers = result[name].browsers\n      .concat(data.browsers)\n      .sort(browsersSort)\n  }\n}\n\nmodule.exports = result\n\n// Border Radius\nlet prefixBorderRadius = require('caniuse-lite/data/features/border-radius')\n\nf(prefixBorderRadius, browsers =>\n  prefix(\n    [\n      'border-radius',\n      'border-top-left-radius',\n      'border-top-right-radius',\n      'border-bottom-right-radius',\n      'border-bottom-left-radius'\n    ],\n    {\n      mistakes: ['-khtml-', '-ms-', '-o-'],\n      feature: 'border-radius',\n      browsers\n    }\n  )\n)\n\n// Box Shadow\nlet prefixBoxshadow = require('caniuse-lite/data/features/css-boxshadow')\n\nf(prefixBoxshadow, browsers =>\n  prefix(['box-shadow'], {\n    mistakes: ['-khtml-'],\n    feature: 'css-boxshadow',\n    browsers\n  })\n)\n\n// Animation\nlet prefixAnimation = require('caniuse-lite/data/features/css-animation')\n\nf(prefixAnimation, browsers =>\n  prefix(\n    [\n      'animation',\n      'animation-name',\n      'animation-duration',\n      'animation-delay',\n      'animation-direction',\n      'animation-fill-mode',\n      'animation-iteration-count',\n      'animation-play-state',\n      'animation-timing-function',\n      '@keyframes'\n    ],\n    {\n      mistakes: ['-khtml-', '-ms-'],\n      feature: 'css-animation',\n      browsers\n    }\n  )\n)\n\n// Transition\nlet prefixTransition = require('caniuse-lite/data/features/css-transitions')\n\nf(prefixTransition, browsers =>\n  prefix(\n    [\n      'transition',\n      'transition-property',\n      'transition-duration',\n      'transition-delay',\n      'transition-timing-function'\n    ],\n    {\n      mistakes: ['-khtml-', '-ms-'],\n      browsers,\n      feature: 'css-transitions'\n    }\n  )\n)\n\n// Transform 2D\nlet prefixTransform2d = require('caniuse-lite/data/features/transforms2d')\n\nf(prefixTransform2d, browsers =>\n  prefix(['transform', 'transform-origin'], {\n    feature: 'transforms2d',\n    browsers\n  })\n)\n\n// Transform 3D\nlet prefixTransforms3d = require('caniuse-lite/data/features/transforms3d')\n\nf(prefixTransforms3d, browsers => {\n  prefix(['perspective', 'perspective-origin'], {\n    feature: 'transforms3d',\n    browsers\n  })\n  return prefix(['transform-style'], {\n    mistakes: ['-ms-', '-o-'],\n    browsers,\n    feature: 'transforms3d'\n  })\n})\n\nf(prefixTransforms3d, { match: /y\\sx|y\\s#2/ }, browsers =>\n  prefix(['backface-visibility'], {\n    mistakes: ['-ms-', '-o-'],\n    feature: 'transforms3d',\n    browsers\n  })\n)\n\n// Gradients\nlet prefixGradients = require('caniuse-lite/data/features/css-gradients')\n\nf(prefixGradients, { match: /y\\sx/ }, browsers =>\n  prefix(\n    [\n      'linear-gradient',\n      'repeating-linear-gradient',\n      'radial-gradient',\n      'repeating-radial-gradient'\n    ],\n    {\n      props: [\n        'background',\n        'background-image',\n        'border-image',\n        'mask',\n        'list-style',\n        'list-style-image',\n        'content',\n        'mask-image'\n      ],\n      mistakes: ['-ms-'],\n      feature: 'css-gradients',\n      browsers\n    }\n  )\n)\n\nf(prefixGradients, { match: /a\\sx/ }, browsers => {\n  browsers = browsers.map(i => {\n    if (/firefox|op/.test(i)) {\n      return i\n    } else {\n      return `${i} old`\n    }\n  })\n  return add(\n    [\n      'linear-gradient',\n      'repeating-linear-gradient',\n      'radial-gradient',\n      'repeating-radial-gradient'\n    ],\n    {\n      feature: 'css-gradients',\n      browsers\n    }\n  )\n})\n\n// Box sizing\nlet prefixBoxsizing = require('caniuse-lite/data/features/css3-boxsizing')\n\nf(prefixBoxsizing, browsers =>\n  prefix(['box-sizing'], {\n    feature: 'css3-boxsizing',\n    browsers\n  })\n)\n\n// Filter Effects\nlet prefixFilters = require('caniuse-lite/data/features/css-filters')\n\nf(prefixFilters, browsers =>\n  prefix(['filter'], {\n    feature: 'css-filters',\n    browsers\n  })\n)\n\n// filter() function\nlet prefixFilterFunction = require('caniuse-lite/data/features/css-filter-function')\n\nf(prefixFilterFunction, browsers =>\n  prefix(['filter-function'], {\n    props: [\n      'background',\n      'background-image',\n      'border-image',\n      'mask',\n      'list-style',\n      'list-style-image',\n      'content',\n      'mask-image'\n    ],\n    feature: 'css-filter-function',\n    browsers\n  })\n)\n\n// Backdrop-filter\nlet prefixBackdrop = require('caniuse-lite/data/features/css-backdrop-filter')\n\nf(prefixBackdrop, { match: /y\\sx|y\\s#2/ }, browsers =>\n  prefix(['backdrop-filter'], {\n    feature: 'css-backdrop-filter',\n    browsers\n  })\n)\n\n// element() function\nlet prefixElementFunction = require('caniuse-lite/data/features/css-element-function')\n\nf(prefixElementFunction, browsers =>\n  prefix(['element'], {\n    props: [\n      'background',\n      'background-image',\n      'border-image',\n      'mask',\n      'list-style',\n      'list-style-image',\n      'content',\n      'mask-image'\n    ],\n    feature: 'css-element-function',\n    browsers\n  })\n)\n\n// Multicolumns\nlet prefixMulticolumns = require('caniuse-lite/data/features/multicolumn')\n\nf(prefixMulticolumns, browsers => {\n  prefix(\n    [\n      'columns',\n      'column-width',\n      'column-gap',\n      'column-rule',\n      'column-rule-color',\n      'column-rule-width',\n      'column-count',\n      'column-rule-style',\n      'column-span',\n      'column-fill'\n    ],\n    {\n      feature: 'multicolumn',\n      browsers\n    }\n  )\n\n  let noff = browsers.filter(i => !/firefox/.test(i))\n  prefix(['break-before', 'break-after', 'break-inside'], {\n    feature: 'multicolumn',\n    browsers: noff\n  })\n})\n\n// User select\nlet prefixUserSelect = require('caniuse-lite/data/features/user-select-none')\n\nf(prefixUserSelect, browsers =>\n  prefix(['user-select'], {\n    mistakes: ['-khtml-'],\n    feature: 'user-select-none',\n    browsers\n  })\n)\n\n// Flexible Box Layout\nlet prefixFlexbox = require('caniuse-lite/data/features/flexbox')\n\nf(prefixFlexbox, { match: /a\\sx/ }, browsers => {\n  browsers = browsers.map(i => {\n    if (/ie|firefox/.test(i)) {\n      return i\n    } else {\n      return `${i} 2009`\n    }\n  })\n  prefix(['display-flex', 'inline-flex'], {\n    props: ['display'],\n    feature: 'flexbox',\n    browsers\n  })\n  prefix(['flex', 'flex-grow', 'flex-shrink', 'flex-basis'], {\n    feature: 'flexbox',\n    browsers\n  })\n  prefix(\n    [\n      'flex-direction',\n      'flex-wrap',\n      'flex-flow',\n      'justify-content',\n      'order',\n      'align-items',\n      'align-self',\n      'align-content'\n    ],\n    {\n      feature: 'flexbox',\n      browsers\n    }\n  )\n})\n\nf(prefixFlexbox, { match: /y\\sx/ }, browsers => {\n  add(['display-flex', 'inline-flex'], {\n    feature: 'flexbox',\n    browsers\n  })\n  add(['flex', 'flex-grow', 'flex-shrink', 'flex-basis'], {\n    feature: 'flexbox',\n    browsers\n  })\n  add(\n    [\n      'flex-direction',\n      'flex-wrap',\n      'flex-flow',\n      'justify-content',\n      'order',\n      'align-items',\n      'align-self',\n      'align-content'\n    ],\n    {\n      feature: 'flexbox',\n      browsers\n    }\n  )\n})\n\n// calc() unit\nlet prefixCalc = require('caniuse-lite/data/features/calc')\n\nf(prefixCalc, browsers =>\n  prefix(['calc'], {\n    props: ['*'],\n    feature: 'calc',\n    browsers\n  })\n)\n\n// Background options\nlet prefixBackgroundOptions = require('caniuse-lite/data/features/background-img-opts')\n\nf(prefixBackgroundOptions, browsers =>\n  prefix(['background-origin', 'background-size'], {\n    feature: 'background-img-opts',\n    browsers\n  })\n)\n\n// background-clip: text\nlet prefixBackgroundClipText = require('caniuse-lite/data/features/background-clip-text')\n\nf(prefixBackgroundClipText, browsers =>\n  prefix(['background-clip'], {\n    feature: 'background-clip-text',\n    browsers\n  })\n)\n\n// Font feature settings\nlet prefixFontFeature = require('caniuse-lite/data/features/font-feature')\n\nf(prefixFontFeature, browsers =>\n  prefix(\n    [\n      'font-feature-settings',\n      'font-variant-ligatures',\n      'font-language-override'\n    ],\n    {\n      feature: 'font-feature',\n      browsers\n    }\n  )\n)\n\n// CSS font-kerning property\nlet prefixFontKerning = require('caniuse-lite/data/features/font-kerning')\n\nf(prefixFontKerning, browsers =>\n  prefix(['font-kerning'], {\n    feature: 'font-kerning',\n    browsers\n  })\n)\n\n// Border image\nlet prefixBorderImage = require('caniuse-lite/data/features/border-image')\n\nf(prefixBorderImage, browsers =>\n  prefix(['border-image'], {\n    feature: 'border-image',\n    browsers\n  })\n)\n\n// Selection selector\nlet prefixSelection = require('caniuse-lite/data/features/css-selection')\n\nf(prefixSelection, browsers =>\n  prefix(['::selection'], {\n    selector: true,\n    feature: 'css-selection',\n    browsers\n  })\n)\n\n// Placeholder selector\nlet prefixPlaceholder = require('caniuse-lite/data/features/css-placeholder')\n\nf(prefixPlaceholder, browsers => {\n  prefix(['::placeholder'], {\n    selector: true,\n    feature: 'css-placeholder',\n    browsers: browsers.concat(['ie 10 old', 'ie 11 old', 'firefox 18 old'])\n  })\n})\n\n// Placeholder-shown selector\nlet prefixPlaceholderShown = require('caniuse-lite/data/features/css-placeholder-shown')\n\nf(prefixPlaceholderShown, browsers => {\n  prefix([':placeholder-shown'], {\n    selector: true,\n    feature: 'css-placeholder-shown',\n    browsers\n  })\n})\n\n// Hyphenation\nlet prefixHyphens = require('caniuse-lite/data/features/css-hyphens')\n\nf(prefixHyphens, browsers =>\n  prefix(['hyphens'], {\n    feature: 'css-hyphens',\n    browsers\n  })\n)\n\n// Fullscreen selector\nlet prefixFullscreen = require('caniuse-lite/data/features/fullscreen')\n\nf(prefixFullscreen, browsers =>\n  prefix([':fullscreen'], {\n    selector: true,\n    feature: 'fullscreen',\n    browsers\n  })\n)\n\nf(prefixFullscreen, { match: /x(\\s#2|$)/ }, browsers =>\n  prefix(['::backdrop'], {\n    selector: true,\n    feature: 'fullscreen',\n    browsers\n  })\n)\n\n// File selector button\nlet prefixFileSelectorButton = require('caniuse-lite/data/features/css-file-selector-button')\n\nf(prefixFileSelectorButton, browsers =>\n  prefix(['::file-selector-button'], {\n    selector: true,\n    feature: 'file-selector-button',\n    browsers\n  })\n)\n\n// :autofill\nlet prefixAutofill = require('caniuse-lite/data/features/css-autofill')\n\nf(prefixAutofill, browsers =>\n  prefix([':autofill'], {\n    selector: true,\n    feature: 'css-autofill',\n    browsers\n  })\n)\n\n// Tab size\nlet prefixTabsize = require('caniuse-lite/data/features/css3-tabsize')\n\nf(prefixTabsize, browsers =>\n  prefix(['tab-size'], {\n    feature: 'css3-tabsize',\n    browsers\n  })\n)\n\n// Intrinsic & extrinsic sizing\nlet prefixIntrinsic = require('caniuse-lite/data/features/intrinsic-width')\n\nlet sizeProps = [\n  'width',\n  'min-width',\n  'max-width',\n  'height',\n  'min-height',\n  'max-height',\n  'inline-size',\n  'min-inline-size',\n  'max-inline-size',\n  'block-size',\n  'min-block-size',\n  'max-block-size',\n  'grid',\n  'grid-template',\n  'grid-template-rows',\n  'grid-template-columns',\n  'grid-auto-columns',\n  'grid-auto-rows'\n]\n\nf(prefixIntrinsic, browsers =>\n  prefix(['max-content', 'min-content'], {\n    props: sizeProps,\n    feature: 'intrinsic-width',\n    browsers\n  })\n)\n\nf(prefixIntrinsic, { match: /x|\\s#4/ }, browsers =>\n  prefix(['fill', 'fill-available'], {\n    props: sizeProps,\n    feature: 'intrinsic-width',\n    browsers\n  })\n)\n\nf(prefixIntrinsic, { match: /x|\\s#5/ }, browsers =>\n  prefix(['fit-content'], {\n    props: sizeProps,\n    feature: 'intrinsic-width',\n    browsers\n  })\n)\n\n// Stretch value\n\nlet prefixStretch = require('caniuse-lite/data/features/css-width-stretch')\n\nf(prefixStretch, browsers =>\n  prefix(['stretch'], {\n    props: sizeProps,\n    feature: 'css-width-stretch',\n    browsers\n  })\n)\n\n// Zoom cursors\nlet prefixCursorsNewer = require('caniuse-lite/data/features/css3-cursors-newer')\n\nf(prefixCursorsNewer, browsers =>\n  prefix(['zoom-in', 'zoom-out'], {\n    props: ['cursor'],\n    feature: 'css3-cursors-newer',\n    browsers\n  })\n)\n\n// Grab cursors\nlet prefixCursorsGrab = require('caniuse-lite/data/features/css3-cursors-grab')\n\nf(prefixCursorsGrab, browsers =>\n  prefix(['grab', 'grabbing'], {\n    props: ['cursor'],\n    feature: 'css3-cursors-grab',\n    browsers\n  })\n)\n\n// Sticky position\nlet prefixSticky = require('caniuse-lite/data/features/css-sticky')\n\nf(prefixSticky, browsers =>\n  prefix(['sticky'], {\n    props: ['position'],\n    feature: 'css-sticky',\n    browsers\n  })\n)\n\n// Pointer Events\nlet prefixPointer = require('caniuse-lite/data/features/pointer')\n\nf(prefixPointer, browsers =>\n  prefix(['touch-action'], {\n    feature: 'pointer',\n    browsers\n  })\n)\n\n// Text decoration\nlet prefixDecoration = require('caniuse-lite/data/features/text-decoration')\n\nf(prefixDecoration, browsers =>\n  prefix(\n    [\n      'text-decoration-style',\n      'text-decoration-color',\n      'text-decoration-line',\n      'text-decoration'\n    ],\n    {\n      feature: 'text-decoration',\n      browsers\n    }\n  )\n)\n\nf(prefixDecoration, { match: /x.*#[235]/ }, browsers =>\n  prefix(['text-decoration-skip', 'text-decoration-skip-ink'], {\n    feature: 'text-decoration',\n    browsers\n  })\n)\n\n// Text Size Adjust\nlet prefixTextSizeAdjust = require('caniuse-lite/data/features/text-size-adjust')\n\nf(prefixTextSizeAdjust, browsers =>\n  prefix(['text-size-adjust'], {\n    feature: 'text-size-adjust',\n    browsers\n  })\n)\n\n// CSS Masks\nlet prefixCssMasks = require('caniuse-lite/data/features/css-masks')\n\nf(prefixCssMasks, browsers => {\n  prefix(\n    [\n      'mask-clip',\n      'mask-composite',\n      'mask-image',\n      'mask-origin',\n      'mask-repeat',\n      'mask-border-repeat',\n      'mask-border-source'\n    ],\n    {\n      feature: 'css-masks',\n      browsers\n    }\n  )\n  prefix(\n    [\n      'mask',\n      'mask-position',\n      'mask-size',\n      'mask-border',\n      'mask-border-outset',\n      'mask-border-width',\n      'mask-border-slice'\n    ],\n    {\n      feature: 'css-masks',\n      browsers\n    }\n  )\n})\n\n// CSS clip-path property\nlet prefixClipPath = require('caniuse-lite/data/features/css-clip-path')\n\nf(prefixClipPath, browsers =>\n  prefix(['clip-path'], {\n    feature: 'css-clip-path',\n    browsers\n  })\n)\n\n// Fragmented Borders and Backgrounds\nlet prefixBoxdecoration = require('caniuse-lite/data/features/css-boxdecorationbreak')\n\nf(prefixBoxdecoration, browsers =>\n  prefix(['box-decoration-break'], {\n    feature: 'css-boxdecorationbreak',\n    browsers\n  })\n)\n\n// CSS3 object-fit/object-position\nlet prefixObjectFit = require('caniuse-lite/data/features/object-fit')\n\nf(prefixObjectFit, browsers =>\n  prefix(['object-fit', 'object-position'], {\n    feature: 'object-fit',\n    browsers\n  })\n)\n\n// CSS Shapes\nlet prefixShapes = require('caniuse-lite/data/features/css-shapes')\n\nf(prefixShapes, browsers =>\n  prefix(['shape-margin', 'shape-outside', 'shape-image-threshold'], {\n    feature: 'css-shapes',\n    browsers\n  })\n)\n\n// CSS3 text-overflow\nlet prefixTextOverflow = require('caniuse-lite/data/features/text-overflow')\n\nf(prefixTextOverflow, browsers =>\n  prefix(['text-overflow'], {\n    feature: 'text-overflow',\n    browsers\n  })\n)\n\n// Viewport at-rule\nlet prefixDeviceadaptation = require('caniuse-lite/data/features/css-deviceadaptation')\n\nf(prefixDeviceadaptation, browsers =>\n  prefix(['@viewport'], {\n    feature: 'css-deviceadaptation',\n    browsers\n  })\n)\n\n// Resolution Media Queries\nlet prefixResolut = require('caniuse-lite/data/features/css-media-resolution')\n\nf(prefixResolut, { match: /( x($| )|a #2)/ }, browsers =>\n  prefix(['@resolution'], {\n    feature: 'css-media-resolution',\n    browsers\n  })\n)\n\n// CSS text-align-last\nlet prefixTextAlignLast = require('caniuse-lite/data/features/css-text-align-last')\n\nf(prefixTextAlignLast, browsers =>\n  prefix(['text-align-last'], {\n    feature: 'css-text-align-last',\n    browsers\n  })\n)\n\n// Crisp Edges Image Rendering Algorithm\nlet prefixCrispedges = require('caniuse-lite/data/features/css-crisp-edges')\n\nf(prefixCrispedges, { match: /y x|a x #1/ }, browsers =>\n  prefix(['pixelated'], {\n    props: ['image-rendering'],\n    feature: 'css-crisp-edges',\n    browsers\n  })\n)\n\nf(prefixCrispedges, { match: /a x #2/ }, browsers =>\n  prefix(['image-rendering'], {\n    feature: 'css-crisp-edges',\n    browsers\n  })\n)\n\n// Logical Properties\nlet prefixLogicalProps = require('caniuse-lite/data/features/css-logical-props')\n\nf(prefixLogicalProps, browsers =>\n  prefix(\n    [\n      'border-inline-start',\n      'border-inline-end',\n      'margin-inline-start',\n      'margin-inline-end',\n      'padding-inline-start',\n      'padding-inline-end'\n    ],\n    {\n      feature: 'css-logical-props',\n      browsers\n    }\n  )\n)\n\nf(prefixLogicalProps, { match: /x\\s#2/ }, browsers =>\n  prefix(\n    [\n      'border-block-start',\n      'border-block-end',\n      'margin-block-start',\n      'margin-block-end',\n      'padding-block-start',\n      'padding-block-end'\n    ],\n    {\n      feature: 'css-logical-props',\n      browsers\n    }\n  )\n)\n\n// CSS appearance\nlet prefixAppearance = require('caniuse-lite/data/features/css-appearance')\n\nf(prefixAppearance, { match: /#2|x/ }, browsers =>\n  prefix(['appearance'], {\n    feature: 'css-appearance',\n    browsers\n  })\n)\n\n// CSS Scroll snap points\nlet prefixSnappoints = require('caniuse-lite/data/features/css-snappoints')\n\nf(prefixSnappoints, browsers =>\n  prefix(\n    [\n      'scroll-snap-type',\n      'scroll-snap-coordinate',\n      'scroll-snap-destination',\n      'scroll-snap-points-x',\n      'scroll-snap-points-y'\n    ],\n    {\n      feature: 'css-snappoints',\n      browsers\n    }\n  )\n)\n\n// CSS Regions\nlet prefixRegions = require('caniuse-lite/data/features/css-regions')\n\nf(prefixRegions, browsers =>\n  prefix(['flow-into', 'flow-from', 'region-fragment'], {\n    feature: 'css-regions',\n    browsers\n  })\n)\n\n// CSS image-set\nlet prefixImageSet = require('caniuse-lite/data/features/css-image-set')\n\nf(prefixImageSet, browsers =>\n  prefix(['image-set'], {\n    props: [\n      'background',\n      'background-image',\n      'border-image',\n      'cursor',\n      'mask',\n      'mask-image',\n      'list-style',\n      'list-style-image',\n      'content'\n    ],\n    feature: 'css-image-set',\n    browsers\n  })\n)\n\n// Writing Mode\nlet prefixWritingMode = require('caniuse-lite/data/features/css-writing-mode')\n\nf(prefixWritingMode, { match: /a|x/ }, browsers =>\n  prefix(['writing-mode'], {\n    feature: 'css-writing-mode',\n    browsers\n  })\n)\n\n// Cross-Fade Function\nlet prefixCrossFade = require('caniuse-lite/data/features/css-cross-fade')\n\nf(prefixCrossFade, browsers =>\n  prefix(['cross-fade'], {\n    props: [\n      'background',\n      'background-image',\n      'border-image',\n      'mask',\n      'list-style',\n      'list-style-image',\n      'content',\n      'mask-image'\n    ],\n    feature: 'css-cross-fade',\n    browsers\n  })\n)\n\n// Read Only selector\nlet prefixReadOnly = require('caniuse-lite/data/features/css-read-only-write')\n\nf(prefixReadOnly, browsers =>\n  prefix([':read-only', ':read-write'], {\n    selector: true,\n    feature: 'css-read-only-write',\n    browsers\n  })\n)\n\n// Text Emphasize\nlet prefixTextEmphasis = require('caniuse-lite/data/features/text-emphasis')\n\nf(prefixTextEmphasis, browsers =>\n  prefix(\n    [\n      'text-emphasis',\n      'text-emphasis-position',\n      'text-emphasis-style',\n      'text-emphasis-color'\n    ],\n    {\n      feature: 'text-emphasis',\n      browsers\n    }\n  )\n)\n\n// CSS Grid Layout\nlet prefixGrid = require('caniuse-lite/data/features/css-grid')\n\nf(prefixGrid, browsers => {\n  prefix(['display-grid', 'inline-grid'], {\n    props: ['display'],\n    feature: 'css-grid',\n    browsers\n  })\n  prefix(\n    [\n      'grid-template-columns',\n      'grid-template-rows',\n      'grid-row-start',\n      'grid-column-start',\n      'grid-row-end',\n      'grid-column-end',\n      'grid-row',\n      'grid-column',\n      'grid-area',\n      'grid-template',\n      'grid-template-areas',\n      'place-self'\n    ],\n    {\n      feature: 'css-grid',\n      browsers\n    }\n  )\n})\n\nf(prefixGrid, { match: /a x/ }, browsers =>\n  prefix(['grid-column-align', 'grid-row-align'], {\n    feature: 'css-grid',\n    browsers\n  })\n)\n\n// CSS text-spacing\nlet prefixTextSpacing = require('caniuse-lite/data/features/css-text-spacing')\n\nf(prefixTextSpacing, browsers =>\n  prefix(['text-spacing'], {\n    feature: 'css-text-spacing',\n    browsers\n  })\n)\n\n// :any-link selector\nlet prefixAnyLink = require('caniuse-lite/data/features/css-any-link')\n\nf(prefixAnyLink, browsers =>\n  prefix([':any-link'], {\n    selector: true,\n    feature: 'css-any-link',\n    browsers\n  })\n)\n\n// unicode-bidi\nlet prefixBidi = require('caniuse-lite/data/features/css-unicode-bidi')\n\nf(prefixBidi, browsers =>\n  prefix(['isolate'], {\n    props: ['unicode-bidi'],\n    feature: 'css-unicode-bidi',\n    browsers\n  })\n)\n\nf(prefixBidi, { match: /y x|a x #2/ }, browsers =>\n  prefix(['plaintext'], {\n    props: ['unicode-bidi'],\n    feature: 'css-unicode-bidi',\n    browsers\n  })\n)\n\nf(prefixBidi, { match: /y x/ }, browsers =>\n  prefix(['isolate-override'], {\n    props: ['unicode-bidi'],\n    feature: 'css-unicode-bidi',\n    browsers\n  })\n)\n\n// overscroll-behavior selector\nlet prefixOverscroll = require('caniuse-lite/data/features/css-overscroll-behavior')\n\nf(prefixOverscroll, { match: /a #1/ }, browsers =>\n  prefix(['overscroll-behavior'], {\n    feature: 'css-overscroll-behavior',\n    browsers\n  })\n)\n\n// text-orientation\nlet prefixTextOrientation = require('caniuse-lite/data/features/css-text-orientation')\n\nf(prefixTextOrientation, browsers =>\n  prefix(['text-orientation'], {\n    feature: 'css-text-orientation',\n    browsers\n  })\n)\n\n// print-color-adjust\nlet prefixPrintAdjust = require('caniuse-lite/data/features/css-print-color-adjust')\n\nf(prefixPrintAdjust, browsers =>\n  prefix(['print-color-adjust', 'color-adjust'], {\n    feature: 'css-print-color-adjust',\n    browsers\n  })\n)\n", "let browserslist = require('browserslist')\n\nfunction capitalize(str) {\n  return str.slice(0, 1).toUpperCase() + str.slice(1)\n}\n\nconst NAMES = {\n  ie: 'IE',\n  ie_mob: 'IE Mobile',\n  ios_saf: 'iOS Safari',\n  op_mini: 'Opera Mini',\n  op_mob: 'Opera Mobile',\n  and_chr: 'Chrome for Android',\n  and_ff: 'Firefox for Android',\n  and_uc: 'UC for Android',\n  and_qq: 'QQ Browser',\n  kaios: 'KaiOS Browser',\n  baidu: 'Baidu Browser',\n  samsung: 'Samsung Internet'\n}\n\nfunction prefix(name, prefixes, note) {\n  let out = `  ${name}`\n  if (note) out += ' *'\n  out += ': '\n  out += prefixes.map(i => i.replace(/^-(.*)-$/g, '$1')).join(', ')\n  out += '\\n'\n  return out\n}\n\nmodule.exports = function (prefixes) {\n  if (prefixes.browsers.selected.length === 0) {\n    return 'No browsers selected'\n  }\n\n  let versions = {}\n  for (let browser of prefixes.browsers.selected) {\n    let parts = browser.split(' ')\n    let name = parts[0]\n    let version = parts[1]\n\n    name = NAMES[name] || capitalize(name)\n    if (versions[name]) {\n      versions[name].push(version)\n    } else {\n      versions[name] = [version]\n    }\n  }\n\n  let out = 'Browsers:\\n'\n  for (let browser in versions) {\n    let list = versions[browser]\n    list = list.sort((a, b) => parseFloat(b) - parseFloat(a))\n    out += `  ${browser}: ${list.join(', ')}\\n`\n  }\n\n  let coverage = browserslist.coverage(prefixes.browsers.selected)\n  let round = Math.round(coverage * 100) / 100.0\n  out += `\\nThese browsers account for ${round}% of all users globally\\n`\n\n  let atrules = []\n  for (let name in prefixes.add) {\n    let data = prefixes.add[name]\n    if (name[0] === '@' && data.prefixes) {\n      atrules.push(prefix(name, data.prefixes))\n    }\n  }\n  if (atrules.length > 0) {\n    out += `\\nAt-Rules:\\n${atrules.sort().join('')}`\n  }\n\n  let selectors = []\n  for (let selector of prefixes.add.selectors) {\n    if (selector.prefixes) {\n      selectors.push(prefix(selector.name, selector.prefixes))\n    }\n  }\n  if (selectors.length > 0) {\n    out += `\\nSelectors:\\n${selectors.sort().join('')}`\n  }\n\n  let values = []\n  let props = []\n  let hadGrid = false\n  for (let name in prefixes.add) {\n    let data = prefixes.add[name]\n    if (name[0] !== '@' && data.prefixes) {\n      let grid = name.indexOf('grid-') === 0\n      if (grid) hadGrid = true\n      props.push(prefix(name, data.prefixes, grid))\n    }\n\n    if (!Array.isArray(data.values)) {\n      continue\n    }\n    for (let value of data.values) {\n      let grid = value.name.includes('grid')\n      if (grid) hadGrid = true\n      let string = prefix(value.name, value.prefixes, grid)\n      if (!values.includes(string)) {\n        values.push(string)\n      }\n    }\n  }\n\n  if (props.length > 0) {\n    out += `\\nProperties:\\n${props.sort().join('')}`\n  }\n  if (values.length > 0) {\n    out += `\\nValues:\\n${values.sort().join('')}`\n  }\n  if (hadGrid) {\n    out += '\\n* - Prefixes will be added only on grid: true option.\\n'\n  }\n\n  if (!atrules.length && !selectors.length && !props.length && !values.length) {\n    out +=\n      \"\\nAwesome! Your browsers don't require any vendor prefixes.\" +\n      '\\nNow you can remove Autoprefixer from build steps.'\n  }\n\n  return out\n}\n", "let browserslist = require('browserslist')\nlet { agents } = require('caniuse-lite')\nlet pico = require('picocolors')\n\nlet Browsers = require('./browsers')\nlet Prefixes = require('./prefixes')\nlet dataPrefixes = require('../data/prefixes')\nlet getInfo = require('./info')\n\nlet autoprefixerData = { browsers: agents, prefixes: dataPrefixes }\n\nconst WARNING =\n  '\\n' +\n  '  Replace Autoprefixer `browsers` option to Browserslist config.\\n' +\n  '  Use `browserslist` key in `package.json` or `.browserslistrc` file.\\n' +\n  '\\n' +\n  '  Using `browsers` option can cause errors. Browserslist config can\\n' +\n  '  be used for Babel, Autoprefixer, postcss-normalize and other tools.\\n' +\n  '\\n' +\n  '  If you really need to use option, rename it to `overrideBrowserslist`.\\n' +\n  '\\n' +\n  '  Learn more at:\\n' +\n  '  https://github.com/browserslist/browserslist#readme\\n' +\n  '  https://twitter.com/browserslist\\n' +\n  '\\n'\n\nfunction isPlainObject(obj) {\n  return Object.prototype.toString.apply(obj) === '[object Object]'\n}\n\nlet cache = new Map()\n\nfunction timeCapsule(result, prefixes) {\n  if (prefixes.browsers.selected.length === 0) {\n    return\n  }\n  if (prefixes.add.selectors.length > 0) {\n    return\n  }\n  if (Object.keys(prefixes.add).length > 2) {\n    return\n  }\n  /* c8 ignore next 11 */\n  result.warn(\n    'Autoprefixer target browsers do not need any prefixes.' +\n      'You do not need Autoprefixer anymore.\\n' +\n      'Check your Browserslist config to be sure that your targets ' +\n      'are set up correctly.\\n' +\n      '\\n' +\n      '  Learn more at:\\n' +\n      '  https://github.com/postcss/autoprefixer#readme\\n' +\n      '  https://github.com/browserslist/browserslist#readme\\n' +\n      '\\n'\n  )\n}\n\nmodule.exports = plugin\n\nfunction plugin(...reqs) {\n  let options\n  if (reqs.length === 1 && isPlainObject(reqs[0])) {\n    options = reqs[0]\n    reqs = undefined\n  } else if (reqs.length === 0 || (reqs.length === 1 && !reqs[0])) {\n    reqs = undefined\n  } else if (reqs.length <= 2 && (Array.isArray(reqs[0]) || !reqs[0])) {\n    options = reqs[1]\n    reqs = reqs[0]\n  } else if (typeof reqs[reqs.length - 1] === 'object') {\n    options = reqs.pop()\n  }\n\n  if (!options) {\n    options = {}\n  }\n\n  if (options.browser) {\n    throw new Error(\n      'Change `browser` option to `overrideBrowserslist` in Autoprefixer'\n    )\n  } else if (options.browserslist) {\n    throw new Error(\n      'Change `browserslist` option to `overrideBrowserslist` in Autoprefixer'\n    )\n  }\n\n  if (options.overrideBrowserslist) {\n    reqs = options.overrideBrowserslist\n  } else if (options.browsers) {\n    if (typeof console !== 'undefined' && console.warn) {\n      console.warn(\n        pico.red(WARNING.replace(/`[^`]+`/g, i => pico.yellow(i.slice(1, -1))))\n      )\n    }\n    reqs = options.browsers\n  }\n\n  let brwlstOpts = {\n    ignoreUnknownVersions: options.ignoreUnknownVersions,\n    stats: options.stats,\n    env: options.env\n  }\n\n  function loadPrefixes(opts) {\n    let d = autoprefixerData\n    let browsers = new Browsers(d.browsers, reqs, opts, brwlstOpts)\n    let key = browsers.selected.join(', ') + JSON.stringify(options)\n\n    if (!cache.has(key)) {\n      cache.set(key, new Prefixes(d.prefixes, browsers, options))\n    }\n\n    return cache.get(key)\n  }\n\n  return {\n    postcssPlugin: 'autoprefixer',\n\n    prepare(result) {\n      let prefixes = loadPrefixes({\n        from: result.opts.from,\n        env: options.env\n      })\n\n      return {\n        OnceExit(root) {\n          timeCapsule(result, prefixes)\n          if (options.remove !== false) {\n            prefixes.processor.remove(root, result)\n          }\n          if (options.add !== false) {\n            prefixes.processor.add(root, result)\n          }\n        }\n      }\n    },\n\n    info(opts) {\n      opts = opts || {}\n      opts.from = opts.from || process.cwd()\n      return getInfo(loadPrefixes(opts))\n    },\n\n    options,\n    browsers: reqs\n  }\n}\n\nplugin.postcss = true\n\n/**\n * Autoprefixer data\n */\nplugin.data = autoprefixerData\n\n/**\n * Autoprefixer default browsers\n */\nplugin.defaults = browserslist.defaults\n\n/**\n * Inspect with default Autoprefixer\n */\nplugin.info = () => plugin().info()\n", "export default require(\"../node_modules/autoprefixer/lib/autoprefixer.js\");"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,QAAI,EAAE,KAAK,IAAI;AAMf,WAAO,QAAQ,QAAQ,SAAU,MAAM;AACrC,UAAI,MAAM,IAAI,MAAM,IAAI;AACxB,UAAI,eAAe;AACnB,YAAM;AAAA,IACR;AAKA,WAAO,QAAQ,OAAO,SAAU,OAAO;AACrC,aAAO,CAAC,GAAG,IAAI,IAAI,KAAK,CAAC;AAAA,IAC3B;AAKA,WAAO,QAAQ,aAAa,SAAU,QAAQ;AAC5C,UAAI,CAAC,OAAO,SAAS,GAAG,GAAG;AACzB,eAAO;AAAA,MACT;AAEA,aAAO,OAAO,MAAM,GAAG,EAAE;AAAA,IAC3B;AAKA,WAAO,QAAQ,eAAe,SAAU,QAAQ;AAC9C,aAAO,OAAO,QAAQ,wBAAwB,MAAM;AAAA,IACtD;AAKA,WAAO,QAAQ,SAAS,SAAU,MAAM,SAAS,MAAM;AACrD,UAAI,QAAQ;AACV,eAAO,KAAK,aAAa,IAAI;AAAA,MAC/B;AACA,aAAO,IAAI,OAAO,eAAe,oBAAoB,IAAI;AAAA,IAC3D;AAKA,WAAO,QAAQ,WAAW,SAAU,OAAO,UAAU;AACnD,UAAI,SAAS,KAAK,MAAM,KAAK;AAC7B,UAAI,UAAU,SAAS,QAAQ,CAAC,CAAC;AAEjC,UAAI,WAAW,SAAS;AACtB,eAAO;AAAA,MACT;AAEA,UAAI,OAAO,MAAM,MAAM,MAAM;AAC7B,aAAO,OAAO,KAAK,KAAK;AACxB,aAAO,QAAQ,KAAK,IAAI;AAAA,IAC1B;AAUA,WAAO,QAAQ,gBAAgB,SAAU,UAAU;AACjD,aAAO,KAAK,MAAM,QAAQ,EAAE,IAAI,OAAK;AACnC,eAAO,KAAK,MAAM,CAAC,EAAE,IAAI,OAAK;AAC5B,iBAAO,EAAE,MAAM,WAAW;AAAA,QAC5B,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAOA,WAAO,QAAQ,eAAe,SAAU,OAAO;AAC7C,UAAI,OAAO,UAAU,UAAU;AAC7B,eAAO;AAAA,MACT;AACA,UAAI,OAAO,UAAU,UAAU;AAC7B,eAAO,WAAW,KAAK,KAAK;AAAA,MAC9B;AACA,aAAO;AAAA,IACT;AAAA;AAAA;;;AC5FA;AAAA;AAAA,QAAI,eAAe;AACnB,QAAI,SAAS,mBAAwB;AAErC,QAAI,QAAQ;AAEZ,QAAM,WAAN,MAAe;AAAA,MAIb,OAAO,WAAW;AAChB,YAAI,KAAK,eAAe;AACtB,iBAAO,KAAK;AAAA,QACd;AAEA,aAAK,gBAAgB,CAAC;AACtB,iBAAS,QAAQ,QAAQ;AACvB,eAAK,cAAc,KAAK,IAAI,OAAO,MAAM,SAAS;AAAA,QACpD;AAEA,aAAK,gBAAgB,MAClB,KAAK,KAAK,aAAa,EACvB,KAAK,CAAC,GAAG,MAAM,EAAE,SAAS,EAAE,MAAM;AAErC,eAAO,KAAK;AAAA,MACd;AAAA,MAKA,OAAO,WAAW,OAAO;AACvB,YAAI,CAAC,KAAK,gBAAgB;AACxB,eAAK,iBAAiB,IAAI,OAAO,KAAK,SAAS,EAAE,KAAK,GAAG,CAAC;AAAA,QAC5D;AAEA,eAAO,KAAK,eAAe,KAAK,KAAK;AAAA,MACvC;AAAA,MAEA,YAAY,MAAM,cAAc,SAAS,kBAAkB;AACzD,aAAK,OAAO;AACZ,aAAK,UAAU,WAAW,CAAC;AAC3B,aAAK,mBAAmB,oBAAoB,CAAC;AAC7C,aAAK,WAAW,KAAK,MAAM,YAAY;AAAA,MACzC;AAAA,MAKA,MAAM,cAAc;AAClB,YAAI,OAAO,CAAC;AACZ,iBAAS,KAAK,KAAK,kBAAkB;AACnC,eAAK,KAAK,KAAK,iBAAiB;AAAA,QAClC;AACA,aAAK,OAAO,KAAK,QAAQ;AACzB,eAAO,aAAa,cAAc,IAAI;AAAA,MACxC;AAAA,MAKA,OAAO,SAAS;AACd,YAAI,CAAC,MAAM,OAAO,IAAI,QAAQ,MAAM,GAAG;AACvC,YAAI,OAAO,KAAK,KAAK;AAErB,YAAI,SAAS,KAAK,qBAAqB,KAAK,kBAAkB;AAC9D,YAAI,CAAC,QAAQ;AACX,mBAAS,KAAK;AAAA,QAChB;AACA,eAAO,IAAI;AAAA,MACb;AAAA,MAKA,WAAW,SAAS;AAClB,eAAO,KAAK,SAAS,SAAS,OAAO;AAAA,MACvC;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC9EjB;AAAA;AAAA,WAAO,UAAU;AAAA,MACf,OAAO,MAAM;AACX,YAAI,QAAQ,KAAK,MAAM,UAAU;AACjC,YAAI,OAAO;AACT,iBAAO,MAAM;AAAA,QACf;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,WAAW,MAAM;AACf,eAAO,KAAK,QAAQ,UAAU,EAAE;AAAA,MAClC;AAAA,IACF;AAAA;AAAA;;;ACbA;AAAA;AAAA,QAAI,WAAW;AACf,QAAI,SAAS;AACb,QAAI,QAAQ;AAKZ,aAAS,MAAM,KAAK,QAAQ;AAC1B,UAAI,SAAS,IAAI,IAAI,YAAY;AAEjC,eAAS,KAAK,OAAO,KAAK,OAAO,CAAC,CAAC,GAAG;AACpC,YAAI,QAAQ,IAAI;AAChB,YAAI,MAAM,YAAY,OAAO,UAAU,UAAU;AAC/C,cAAI,QAAQ;AACV,mBAAO,KAAK;AAAA,UACd;AAAA,QACF,WAAW,MAAM,YAAY,MAAM,MAAM;AACvC,iBAAO,KAAK;AAAA,QACd,WAAW,MAAM,QAAQ,KAAK,GAAG;AAC/B,iBAAO,KAAK,MAAM,IAAI,OAAK,MAAM,GAAG,MAAM,CAAC;AAAA,QAC7C,WACE,MAAM,yBACN,MAAM,yBACN,MAAM,cACN;AACA,cAAI,OAAO,UAAU,YAAY,UAAU,MAAM;AAC/C,oBAAQ,MAAM,OAAO,MAAM;AAAA,UAC7B;AACA,iBAAO,KAAK;AAAA,QACd;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,QAAM,WAAN,MAAe;AAAA,MAIb,OAAO,KAAK,OAAO;AACjB,YAAI,CAAC,KAAK,OAAO;AACf,eAAK,QAAQ,CAAC;AAAA,QAChB;AACA,eAAO,MAAM,MAAM,IAAI,UAAQ;AAC7B,eAAK,MAAM,QAAQ;AACnB,iBAAO,KAAK,MAAM;AAAA,QACpB,CAAC;AAAA,MACH;AAAA,MAKA,OAAO,KAAK,MAAM,UAAU,KAAK;AAC/B,YAAI,QAAQ,KAAK,SAAS,KAAK,MAAM;AACrC,YAAI,OAAO;AACT,iBAAO,IAAI,MAAM,MAAM,UAAU,GAAG;AAAA,QACtC,OAAO;AACL,iBAAO,IAAI,KAAK,MAAM,UAAU,GAAG;AAAA,QACrC;AAAA,MACF;AAAA,MAKA,OAAO,MAAM,MAAM,WAAW;AAC5B,YAAI,SAAS,MAAM,IAAI;AACvB,iBAAS,QAAQ,WAAW;AAC1B,iBAAO,QAAQ,UAAU;AAAA,QAC3B;AACA,eAAO;AAAA,MACT;AAAA,MAEA,YAAY,MAAM,UAAU,KAAK;AAC/B,aAAK,WAAW;AAChB,aAAK,OAAO;AACZ,aAAK,MAAM;AAAA,MACb;AAAA,MAKA,aAAa,MAAM;AACjB,YAAI;AAEJ,YAAI,OAAO,KAAK,wBAAwB,aAAa;AACnD,mBAAS,KAAK;AAAA,QAChB,WAAW,KAAK,SAAS,UAAU,KAAK,KAAK,OAAO,KAAK;AACvD,mBAAS,OAAO,OAAO,KAAK,IAAI;AAAA,QAClC,WAAW,KAAK,SAAS,QAAQ;AAC/B,mBAAS;AAAA,QACX,WACE,KAAK,SAAS,UACd,KAAK,SAAS,SAAS,IAAI,KAC3B,WAAW,KAAK,KAAK,QAAQ,GAC7B;AACA,mBAAS,KAAK,SAAS,MAAM,UAAU,EAAE;AAAA,QAC3C,WAAW,KAAK,SAAS,YAAY,KAAK,KAAK,OAAO,KAAK;AACzD,mBAAS,OAAO,OAAO,KAAK,IAAI;AAAA,QAClC,OAAO;AACL,mBAAS,KAAK,aAAa,KAAK,MAAM;AAAA,QACxC;AAEA,YAAI,CAAC,SAAS,SAAS,EAAE,SAAS,MAAM,GAAG;AACzC,mBAAS;AAAA,QACX;AAEA,aAAK,sBAAsB;AAE3B,eAAO,KAAK;AAAA,MACd;AAAA,MAKA,QAAQ,MAAM,QAAQ;AACpB,YAAI,CAAC,KAAK,MAAM,IAAI,GAAG;AACrB,iBAAO;AAAA,QACT;AAEA,YAAI,SAAS,KAAK,aAAa,IAAI;AAEnC,YAAI,WAAW,KAAK,SAAS;AAAA,UAC3B,YAAU,CAAC,UAAU,WAAW,MAAM,WAAW,MAAM;AAAA,QACzD;AAEA,YAAI,QAAQ,CAAC;AACb,iBAAS,UAAU,UAAU;AAC3B,cAAI,KAAK,IAAI,MAAM,QAAQ,MAAM,OAAO,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG;AAC1D,kBAAM,KAAK,MAAM;AAAA,UACnB;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,MAKA,MAAM,MAAM,WAAW;AACrB,eAAO,SAAS,MAAM,MAAM,SAAS;AAAA,MACvC;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC/IjB;AAAA;AAAA,QAAI,WAAW;AACf,QAAI,WAAW;AACf,QAAI,QAAQ;AAEZ,QAAM,cAAN,cAA0B,SAAS;AAAA,MAIjC,QAAkB;AAChB,eAAO;AAAA,MACT;AAAA,MAKA,SAAS,MAAM,QAAQ;AACrB,eAAO,SAAS;AAAA,MAClB;AAAA,MAKA,UAAU,MAAM;AACd,eAAO;AAAA,MACT;AAAA,MAKA,cAAc,OAAO,QAAQ;AAC3B,iBAAS,SAAS,SAAS,SAAS,GAAG;AACrC,cAAI,UAAU,QAAQ;AACpB;AAAA,UACF;AACA,cAAI,MAAM,SAAS,KAAK,GAAG;AACzB,mBAAO;AAAA,UACT;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA,MAKA,IAAI,MAAM,QAAQ;AAChB,aAAK,OAAO,KAAK,SAAS,KAAK,MAAM,MAAM;AAC3C,eAAO;AAAA,MACT;AAAA,MAKA,YAAY,MAAM;AAChB,YAAI,CAAC,KAAK,sBAAsB;AAC9B,eAAK,uBACH,KAAK,IAAI,QAAQ,YAAY,SAAS,KAAK,IAAI,QAAQ,EAAE,SAAS,IAAI;AAAA,QAC1E;AACA,eAAO,KAAK;AAAA,MACd;AAAA,MAKA,YAAY,UAAU,MAAM;AAC1B,YAAI,KAAK,kBAAkB;AACzB,iBAAO,KAAK;AAAA,QACd;AAEA,YAAI,MAAM;AACV,iBAAS,UAAU,UAAU;AAC3B,mBAAS,MAAM,WAAW,MAAM;AAChC,cAAI,OAAO,SAAS,KAAK;AACvB,kBAAM,OAAO;AAAA,UACf;AAAA,QACF;AACA,aAAK,mBAAmB;AAExB,eAAO,KAAK;AAAA,MACd;AAAA,MAKA,WAAW,UAAU,MAAM,SAAS,IAAI;AACtC,YAAI,MAAM,KAAK,YAAY,UAAU,IAAI;AACzC,YAAI,OAAO,MAAM,MAAM,WAAW,MAAM,EAAE;AAE1C,YAAI,SAAS,KAAK,IAAI,QAAQ;AAC9B,YAAI,OAAO,GAAG;AACZ,oBAAU,MAAM,IAAI,EAAE,KAAK,GAAG,EAAE,KAAK,EAAE;AAAA,QACzC;AAEA,eAAO;AAAA,MACT;AAAA,MAKA,cAAc,MAAM;AAClB,YAAI,QAAQ,KAAK,IAAI,QAAQ,EAAE,MAAM,IAAI;AACzC,YAAI,MAAM,MAAM,MAAM,SAAS;AAE/B,aAAK,IAAI,MAAM,IAAI,EAAE,GAAG,cAAY;AAClC,cAAI,QAAQ,SAAS,IAAI,QAAQ,EAAE,MAAM,IAAI;AAC7C,cAAI,OAAO,MAAM,MAAM,SAAS;AAChC,cAAI,KAAK,SAAS,IAAI,QAAQ;AAC5B,kBAAM;AAAA,UACR;AAAA,QACF,CAAC;AAED,cAAM,MAAM,SAAS,KAAK;AAC1B,aAAK,KAAK,SAAS,MAAM,KAAK,IAAI;AAAA,MACpC;AAAA,MAKA,OAAO,MAAM,QAAQ,UAAU;AAC7B,YAAI,SAAS,KAAK,IAAI,KAAK,MAAM,IAAI,GAAG,MAAM;AAC9C,YAAI,CAAC;AAAQ,iBAAO;AAEpB,YAAI,UAAU,KAAK,OAAO;AAAA,UACxB,OAAK,EAAE,SAAS,OAAO,QAAQ,EAAE,UAAU,OAAO;AAAA,QACpD;AACA,YAAI,SAAS;AACX,iBAAO;AAAA,QACT;AAEA,YAAI,KAAK,YAAY,IAAI,GAAG;AAC1B,iBAAO,KAAK,SAAS,KAAK,WAAW,UAAU,MAAM,MAAM;AAAA,QAC7D;AACA,eAAO,KAAK,OAAO,aAAa,MAAM,MAAM;AAAA,MAC9C;AAAA,MAKA,UAAU,MAAM,UAAU;AACxB,YAAI,UAAU,KAAK,IAAI,MAAM,IAAI,EAAE,GAAG,OAAK,EAAE,SAAS,QAAQ;AAC9D,YAAI,CAAC,SAAS;AACZ,oBAAU,KAAK,IAAI,MAAM,IAAI,EAAE,KAAK,OAAK,EAAE,SAAS,QAAQ;AAAA,QAC9D;AACA,eAAO;AAAA,MACT;AAAA,MAKA,IAAI,MAAM,QAAQ,UAAU,QAAQ;AAClC,YAAI,WAAW,KAAK,SAAS,KAAK,MAAM,MAAM;AAC9C,YACE,KAAK,UAAU,MAAM,QAAQ,KAC7B,KAAK,cAAc,KAAK,OAAO,MAAM,GACrC;AACA,iBAAO;AAAA,QACT;AACA,eAAO,KAAK,OAAO,MAAM,QAAQ,UAAU,MAAM;AAAA,MACnD;AAAA,MAKA,QAAQ,MAAM,QAAQ;AACpB,YAAI,CAAC,KAAK,YAAY,IAAI,GAAG;AAC3B,gBAAM,QAAQ,MAAM,MAAM;AAC1B;AAAA,QACF;AAEA,YAAI,WAAW,MAAM,QAAQ,MAAM,MAAM;AAEzC,YAAI,CAAC,YAAY,CAAC,SAAS,QAAQ;AACjC;AAAA,QACF;AAEA,aAAK,cAAc,IAAI;AACvB,aAAK,KAAK,SAAS,KAAK,WAAW,UAAU,IAAI;AAAA,MACnD;AAAA,MAKA,IAAI,MAAM,QAAQ;AAChB,eAAO,CAAC,KAAK,SAAS,MAAM,MAAM,CAAC;AAAA,MACrC;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC1LjB;AAAA;AAuCA,KAAC,SAAS,MAAM;AAEd;AAKA,UAAI,gBAAgB;AAGpB,UAAI,IAAI;AAAA,QACN,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,MACP;AAEA,eAAS,OAAO,GAAG,GAAG;AAEpB,YAAI,MAAM,IAAI,SAAS,GAAG,EAAE,CAAC,GAAG;AAC9B,gBAAM,SAAS;AAAA,QACjB;AACA,eAAO,IAAI;AAAA,MACb;AAGA,eAAS,YAAY,GAAG,GAAG;AAEzB,YAAI,MAAM,GAAG;AACX,gBAAM,SAAS;AAAA,QACjB;AAEA,YAAI,IAAI,OAAO,OAAO,SAAS,SAAS;AACxC,UAAE,OAAO,IAAI,IAAI,KAAK;AAEtB,YAAI,IAAI,IAAI,CAAC,IAAI;AAEjB,YAAI,IAAI,IAAI,GAAG,CAAC;AAEhB,UAAE,OAAO,IAAI;AACb,UAAE,OAAO,IAAI;AACb,eAAO;AAAA,MACT;AAEA,eAAS,UAAU,KAAK;AAEtB,YAAI,UAAU,CAAC;AAEf,YAAI,IAAI;AACR,YAAI,IAAI;AACR,YAAI,IAAI;AAER,eAAO,KAAK,GAAG;AAEb,iBAAO,IAAI,MAAM,GAAG;AAClB,iBAAI;AACJ,oBAAQ,MAAM,QAAQ,MAAM,KAAK;AAAA,UACnC;AACA,eAAI,IAAI,IAAI;AAAA,QACd;AAEA,YAAI,MAAM,KAAK;AACb,cAAI,IAAI;AACN,oBAAQ,MAAM,QAAQ,MAAM,KAAK;AAAA,QACrC,OAAO;AACL,kBAAQ,QAAQ,QAAQ,QAAQ,KAAK;AAAA,QACvC;AACA,eAAO;AAAA,MACT;AAEA,UAAI,QAAQ,SAAS,IAAI,IAAI;AAE3B,YAAI,IAAI,GAAG,IAAI,GAAG,IAAI;AACtB,YAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI;AAEpC,YAAI,IAAI,GAAG,IAAI;AACf,YAAI,IAAI,GAAG,IAAI;AAEf,YAAI,IAAI;AACR,YAAI;AAEJ,YAAI,OAAO,UAAa,OAAO,MAAM;AAAA,QAErC,WAAW,OAAO,QAAW;AAC3B,cAAI;AACJ,cAAI;AACJ,cAAI,IAAI;AAER,cAAI,IAAI,MAAM,KAAK,IAAI,MAAM,GAAG;AAC9B,kBAAM,SAAS;AAAA,UACjB;AAAA,QAEF;AACE,kBAAQ,OAAO;AAAA,iBAER,UACH;AACE,kBAAI,OAAO,MAAM,OAAO,IAAI;AAC1B,oBAAI,GAAG;AACP,oBAAI,GAAG;AACP,oBAAI,OAAO;AACT,uBAAI,GAAG;AAAA,cACX,WAAW,KAAK,IAAI;AAClB,oBAAI,GAAG;AACP,oBAAI,KAAK;AACP,sBAAI,GAAG;AAAA,cACX,OAAO;AACL,sBAAM,SAAS;AAAA,cACjB;AACA,kBAAI,IAAI;AACR;AAAA,YACF;AAAA,iBACG,UACH;AACE,kBAAI,KAAK,GAAG;AACV,oBAAI;AACJ,qBAAK,CAAC;AAAA,cACR;AAEA,kBAAI,KAAK,MAAM,GAAG;AAChB,oBAAI;AAAA,cACN,WAAW,KAAK,GAAG;AAEjB,oBAAI,MAAM,GAAG;AACX,sBAAI,KAAK,IAAI,IAAI,KAAK,MAAM,IAAI,KAAK,IAAI,EAAE,IAAI,KAAK,IAAI,CAAC;AACzD,wBAAK;AAAA,gBACP;AAKA,uBAAO,KAAK,KAAK,KAAK,GAAG;AACvB,uBAAK,IAAI,MAAM,IAAI;AAEnB,sBAAI,OAAO,GAAG;AACZ,wBAAI,IAAI,KAAK,GAAG;AACd,0BAAI,IAAI;AACR,0BAAI,IAAI;AAAA,oBACV,WAAW,IAAI,GAAG;AAChB,0BAAI;AACJ,0BAAI;AAAA,oBACN,OAAO;AACL,0BAAI;AACJ,0BAAI;AAAA,oBACN;AACA;AAAA,kBAEF,OAAO;AAEL,wBAAI,KAAK,GAAG;AACV,2BAAI;AACJ,2BAAI;AAAA,oBACN,OAAO;AACL,2BAAI;AACJ,2BAAI;AAAA,oBACN;AAEA,wBAAI,IAAI,GAAG;AACT,0BAAI;AACJ,0BAAI;AAAA,oBACN,OAAO;AACL,0BAAI;AACJ,0BAAI;AAAA,oBACN;AAAA,kBACF;AAAA,gBACF;AACA,qBAAI;AAAA,cACN,WAAW,MAAM,EAAE,KAAK,MAAM,EAAE,GAAG;AACjC,oBAAI,IAAI;AAAA,cACV;AACA;AAAA,YACF;AAAA,iBACG,UACH;AACE,kBAAI,GAAG,MAAM,QAAQ;AAErB,kBAAI,MAAM;AACR,sBAAM,SAAS;AAEjB,kBAAI,EAAE,OAAO,KAAK;AAChB,oBAAI;AACJ;AAAA,cACF,WAAW,EAAE,OAAO,KAAK;AACvB;AAAA,cACF;AAEA,kBAAI,EAAE,WAAW,IAAI,GAAG;AACtB,oBAAI,OAAO,EAAE,MAAM,CAAC;AAAA,cACtB,WAAW,EAAE,IAAI,OAAO,OAAO,EAAE,OAAO,KAAK;AAE3C,oBAAI,EAAE,OAAO,KAAK;AAChB,sBAAI,OAAO,EAAE,MAAM,CAAC;AAAA,gBACtB;AACA;AAGA,oBAAI,IAAI,MAAM,EAAE,UAAU,EAAE,IAAI,OAAO,OAAO,EAAE,IAAI,OAAO,OAAO,EAAE,IAAI,OAAO,OAAO,EAAE,IAAI,OAAO,KAAK;AACtG,sBAAI,OAAO,EAAE,IAAI,CAAC;AAClB,sBAAI,KAAK,IAAI,IAAI,EAAE,GAAG,MAAM;AAC5B;AAAA,gBACF;AAGA,oBAAI,EAAE,OAAO,OAAO,EAAE,IAAI,OAAO,OAAO,EAAE,OAAO,OAAO,EAAE,IAAI,OAAO,KAAK;AACxE,sBAAI,OAAO,EAAE,IAAI,IAAI,CAAC;AACtB,sBAAI,KAAK,IAAI,IAAI,EAAE,IAAI,GAAG,MAAM,IAAI;AACpC,uBAAI;AAAA,gBACN;AAAA,cAEF,WAAW,EAAE,IAAI,OAAO,OAAO,EAAE,IAAI,OAAO,KAAK;AAC/C,oBAAI,OAAO,EAAE,IAAI,CAAC;AAClB,oBAAI,OAAO,EAAE,IAAI,IAAI,CAAC;AACtB,qBAAI;AAAA,cACN,WAAW,EAAE,IAAI,OAAO,OAAO,EAAE,IAAI,OAAO,KAAK;AAC/C,oBAAI,OAAO,EAAE,IAAI,CAAC;AAClB,oBAAI,OAAO,EAAE,IAAI,IAAI,CAAC;AACtB,oBAAI,OAAO,EAAE,IAAI,IAAI,CAAC;AACtB,qBAAI;AAAA,cACN;AAEA,kBAAI,EAAE,UAAU,GAAG;AACjB,oBAAI,IAAI;AACR,oBACA,IAAI,IAAI,IAAI,IAAI,IAAI;AACpB;AAAA,cACF;AAAA,YAGF;AAAA;AAEA,oBAAM,SAAS;AAAA;AAGrB,YAAI,MAAM,GAAG;AACX,gBAAM,SAAS;AAAA,QACjB;AAEA,UAAE,OAAO,IAAI,IAAI,KAAK;AACtB,UAAE,OAAO,KAAK,IAAI,CAAC;AACnB,UAAE,OAAO,KAAK,IAAI,CAAC;AAAA,MACrB;AAEA,eAAS,OAAO,GAAG,GAAG,GAAG;AAEvB,YAAI,IAAI;AACR,eAAO,IAAI,GAAG,IAAK,IAAI,IAAK,GAAG,MAAM,GAAG;AAEtC,cAAI,IAAI,GAAG;AACT,gBAAK,IAAI,IAAK;AAAA,UAChB;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAGA,eAAS,SAAS,GAAG,GAAG;AAEtB,eAAO,IAAI,MAAM,GACf,KAAI,GAAG;AAAA,QACT;AAEA,eAAO,IAAI,MAAM,GACf,KAAI,GAAG;AAAA,QACT;AAEA,YAAI,MAAM;AACR,iBAAO;AAOT,YAAI,MAAM,KAAK;AACf,YAAI,IAAI;AAER,eAAO,QAAQ,GAAG,KAAK;AACrB,gBAAM,MAAM,KAAK;AAEjB,cAAI,IAAI;AACN,mBAAO;AAAA,QACX;AACA,eAAO;AAAA,MACT;AAGA,eAAS,WAAW,GAAG,GAAG,KAAK;AAE7B,YAAI,OAAO;AACX,YAAI,OAAO,OAAO,IAAI,KAAK,CAAC;AAE5B,iBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAG5B,cAAI,SAAS;AACX,mBAAO;AAET,iBAAO,OAAO,KAAK;AACnB,iBAAO,OAAO,KAAK;AAAA,QACrB;AACA,eAAO;AAAA,MACT;AAEA,eAAS,IAAI,GAAG,GAAG;AAEjB,YAAI,CAAC;AACH,iBAAO;AACT,YAAI,CAAC;AACH,iBAAO;AAET,eAAO,GAAG;AACR,eAAI;AACJ,cAAI,CAAC;AACH,mBAAO;AACT,eAAI;AACJ,cAAI,CAAC;AACH,mBAAO;AAAA,QACX;AAAA,MACF;AAAC;AASD,eAAS,SAAS,GAAG,GAAG;AAEtB,cAAM,GAAG,CAAC;AAEV,YAAI,gBAAgB,UAAU;AAC5B,cAAI,IAAI,EAAE,MAAM,EAAE,IAAI;AACtB,eAAK,OAAO,EAAE;AACd,eAAK,OAAO,EAAE,OAAO;AACrB,eAAK,OAAO,EAAE,OAAO;AAAA,QACvB,OAAO;AACL,iBAAO,YAAY,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI;AAAA,QAC5C;AAAA,MACF;AAEA,eAAS,oBAAoB,IAAI,MAAM,kBAAkB;AACzD,eAAS,sBAAsB,IAAI,MAAM,kBAAkB;AAC3D,eAAS,yBAAyB,IAAI,MAAM,4BAA4B;AAExE,eAAS,YAAY;AAAA,QAEnB,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QAOL,OAAO,WAAW;AAEhB,iBAAO,YAAY,KAAK,MAAM,KAAK,IAAI;AAAA,QACzC;AAAA,QAOA,OAAO,WAAW;AAEhB,iBAAO,YAAY,CAAC,KAAK,OAAO,KAAK,MAAM,KAAK,IAAI;AAAA,QACtD;AAAA,QAOA,OAAO,SAAS,GAAG,GAAG;AAEpB,gBAAM,GAAG,CAAC;AACV,iBAAO;AAAA,YACL,KAAK,OAAO,KAAK,OAAO,EAAE,OAAO,EAAE,OAAO,KAAK,OAAO,EAAE;AAAA,YACxD,KAAK,OAAO,EAAE;AAAA,UAChB;AAAA,QACF;AAAA,QAOA,OAAO,SAAS,GAAG,GAAG;AAEpB,gBAAM,GAAG,CAAC;AACV,iBAAO;AAAA,YACL,KAAK,OAAO,KAAK,OAAO,EAAE,OAAO,EAAE,OAAO,KAAK,OAAO,EAAE;AAAA,YACxD,KAAK,OAAO,EAAE;AAAA,UAChB;AAAA,QACF;AAAA,QAOA,OAAO,SAAS,GAAG,GAAG;AAEpB,gBAAM,GAAG,CAAC;AACV,iBAAO;AAAA,YACL,KAAK,OAAO,EAAE,OAAO,KAAK,OAAO,EAAE;AAAA,YACnC,KAAK,OAAO,EAAE;AAAA,UAChB;AAAA,QACF;AAAA,QAOA,OAAO,SAAS,GAAG,GAAG;AAEpB,gBAAM,GAAG,CAAC;AACV,iBAAO;AAAA,YACL,KAAK,OAAO,EAAE,OAAO,KAAK,OAAO,EAAE;AAAA,YACnC,KAAK,OAAO,EAAE;AAAA,UAChB;AAAA,QACF;AAAA,QAOA,SAAS,WAAW;AAClB,iBAAO,YAAY,KAAK,OAAO,KAAK,MAAM,KAAK,IAAI;AAAA,QACrD;AAAA,QAOA,OAAO,SAAS,GAAG,GAAG;AAEpB,cAAI,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,IAAI,GAAG;AACxC,mBAAO,IAAI,SAAS,GAAG;AAAA,UACzB;AAEA,cAAI,MAAM,QAAW;AACnB,mBAAO,YAAY,KAAK,OAAO,KAAK,OAAO,KAAK,MAAM,CAAC;AAAA,UACzD;AAEA,gBAAM,GAAG,CAAC;AACV,cAAI,MAAM,EAAE,QAAQ,MAAM,KAAK,MAAM;AACnC,kBAAM,SAAS;AAAA,UACjB;AAgBA,iBAAO;AAAA,YACL,KAAK,QAAQ,EAAE,OAAO,KAAK,SAAS,EAAE,OAAO,KAAK;AAAA,YAClD,EAAE,OAAO,KAAK;AAAA,UAChB;AAAA,QACF;AAAA,QAOA,OAAO,SAAS,GAAG,GAAG;AAEpB,gBAAM,GAAG,CAAC;AAIV,iBAAO,YAAY,IAAI,EAAE,MAAM,KAAK,IAAI,IAAI,IAAI,EAAE,MAAM,KAAK,IAAI,GAAG,EAAE,OAAO,KAAK,IAAI;AAAA,QACxF;AAAA,QAOA,OAAO,SAAS,GAAG,GAAG;AAEpB,gBAAM,GAAG,CAAC;AAIV,cAAI,EAAE,SAAS,KAAK,KAAK,SAAS,GAAG;AACnC,mBAAO,YAAY,GAAG,CAAC;AAAA,UACzB;AACA,iBAAO,YAAY,EAAE,OAAO,KAAK,MAAM,IAAI,EAAE,MAAM,KAAK,IAAI,IAAI,IAAI,EAAE,MAAM,KAAK,IAAI,CAAC;AAAA,QACxF;AAAA,QAOA,QAAQ,SAAS,QAAQ;AAEvB,mBAAS,KAAK,IAAI,IAAI,UAAU,CAAC;AAEjC,cAAI,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,IAAI,GAAG;AACxC,mBAAO,IAAI,SAAS,GAAG;AAAA,UACzB;AACA,iBAAO,YAAY,KAAK,KAAK,SAAS,KAAK,OAAO,KAAK,OAAO,KAAK,IAAI,GAAG,MAAM;AAAA,QAClF;AAAA,QAOA,SAAS,SAAS,QAAQ;AAExB,mBAAS,KAAK,IAAI,IAAI,UAAU,CAAC;AAEjC,cAAI,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,IAAI,GAAG;AACxC,mBAAO,IAAI,SAAS,GAAG;AAAA,UACzB;AACA,iBAAO,YAAY,KAAK,MAAM,SAAS,KAAK,OAAO,KAAK,OAAO,KAAK,IAAI,GAAG,MAAM;AAAA,QACnF;AAAA,QAOA,SAAS,SAAS,QAAQ;AAExB,mBAAS,KAAK,IAAI,IAAI,UAAU,CAAC;AAEjC,cAAI,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,IAAI,GAAG;AACxC,mBAAO,IAAI,SAAS,GAAG;AAAA,UACzB;AACA,iBAAO,YAAY,KAAK,MAAM,SAAS,KAAK,OAAO,KAAK,OAAO,KAAK,IAAI,GAAG,MAAM;AAAA,QACnF;AAAA,QAOA,WAAW,WAAW;AAEpB,iBAAO,YAAY,KAAK,OAAO,KAAK,MAAM,KAAK,IAAI;AAAA,QACrD;AAAA,QAOA,OAAO,SAAS,GAAG,GAAG;AAEpB,gBAAM,GAAG,CAAC;AAIV,cAAI,EAAE,SAAS,GAAG;AAEhB,gBAAI,EAAE,OAAO,GAAG;AACd,qBAAO,YAAY,KAAK,IAAI,KAAK,OAAO,KAAK,MAAM,EAAE,IAAI,GAAG,KAAK,IAAI,KAAK,MAAM,EAAE,IAAI,CAAC;AAAA,YACzF,OAAO;AACL,qBAAO,YAAY,KAAK,IAAI,KAAK,OAAO,KAAK,MAAM,EAAE,IAAI,GAAG,KAAK,IAAI,KAAK,MAAM,EAAE,IAAI,CAAC;AAAA,YACzF;AAAA,UACF;AAQA,cAAI,KAAK,OAAO;AAAG,mBAAO;AAG1B,cAAI,IAAI,UAAU,KAAK,IAAI;AAC3B,cAAI,IAAI,UAAU,KAAK,IAAI;AAG3B,cAAI,IAAI;AACR,cAAI,IAAI;AACR,mBAAS,KAAK,GAAG;AACf,gBAAI,MAAM;AAAK;AACf,gBAAI,MAAM,KAAK;AACb,kBAAI;AACJ;AAAA,YACF;AACA,cAAE,MAAK,EAAE;AAET,gBAAI,EAAE,KAAK,EAAE,SAAS,GAAG;AACvB,gBAAE,MAAK,EAAE;AAAA,YACX;AAAO,qBAAO;AACd,iBAAI,KAAK,IAAI,GAAG,EAAE,EAAE;AAAA,UACtB;AAEA,mBAAS,KAAK,GAAG;AACf,gBAAI,MAAM;AAAK;AACf,cAAE,MAAK,EAAE;AAET,gBAAI,EAAE,KAAK,EAAE,SAAS,GAAG;AACvB,gBAAE,MAAK,EAAE;AAAA,YACX;AAAO,qBAAO;AACd,iBAAI,KAAK,IAAI,GAAG,EAAE,EAAE;AAAA,UACtB;AAEA,cAAI,EAAE,OAAO,GAAG;AACd,mBAAO,YAAY,GAAG,CAAC;AAAA,UACzB;AACA,iBAAO,YAAY,GAAG,CAAC;AAAA,QACzB;AAAA,QAOA,UAAU,SAAS,GAAG,GAAG;AAEvB,gBAAM,GAAG,CAAC;AACV,iBAAO,KAAK,OAAO,KAAK,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,KAAK;AAAA,QACnE;AAAA,QAOA,WAAW,SAAS,GAAG,GAAG;AAExB,gBAAM,GAAG,CAAC;AACV,cAAI,IAAK,KAAK,OAAO,KAAK,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,KAAK;AACjE,kBAAQ,IAAI,MAAM,IAAI;AAAA,QACxB;AAAA,QAEA,YAAY,SAAS,KAAK;AAExB,cAAI,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,IAAI,GAAG;AACxC,mBAAO;AAAA,UACT;AAEA,gBAAM,OAAO;AAEb,cAAI,UAAU,KAAK,OAAO;AAC1B,cAAI,OAAO,QAAQ,eAAe;AAElC,mBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAEpC,gBAAI,IAAI,YAAY,KAAK,IAAI,IAAI,CAAC;AAClC,qBAAS,IAAI,IAAI,GAAG,KAAK,GAAG,KAAK;AAC/B,kBAAI,EAAE,WAAW,EAAE,OAAO,KAAK,EAAE;AAAA,YACnC;AAEA,gBAAI,EAAE,OAAO,OAAO,EAAE,OAAO,EAAE,QAAQ,IAAI,KAAK;AAC9C,qBAAO,EAAE,OAAO,KAAK,IAAI;AAAA,YAC3B;AAAA,UACF;AACA,iBAAO;AAAA,QACT;AAAA,QAOA,aAAa,SAAS,GAAG,GAAG;AAE1B,gBAAM,GAAG,CAAC;AACV,iBAAO,EAAE,EAAE,EAAE,OAAO,KAAK,SAAW,KAAK,OAAO,EAAE,QAAS,EAAE,OAAO,KAAK;AAAA,QAC3E;AAAA,QAOA,WAAW,WAAW;AAEpB,iBAAO,KAAK,OAAO,KAAK,OAAO,KAAK;AAAA,QACtC;AAAA,QAOA,cAAc,SAAS,cAAc;AAEnC,cAAI,OAAO,MAAM;AACjB,cAAI,IAAI,KAAK;AACb,cAAI,IAAI,KAAK;AACb,cAAI,KAAK,OAAO,GAAG;AACjB,mBAAM;AAAA,UACR;AAEA,cAAI,MAAM,GAAG;AACX,mBAAM;AAAA,UACR,OAAO;AAEL,gBAAI,iBAAiB,QAAQ,KAAK,MAAM,IAAI,CAAC,KAAK,GAAG;AACnD,qBAAM;AACN,qBAAM;AACN,mBAAI;AAAA,YACN;AAEA,mBAAM;AACN,mBAAM;AACN,mBAAM;AAAA,UACR;AACA,iBAAO;AAAA,QACT;AAAA,QAOA,WAAW,SAAS,cAAc;AAEhC,cAAI,OAAO,MAAM;AACjB,cAAI,IAAI,KAAK;AACb,cAAI,IAAI,KAAK;AACb,cAAI,KAAK,OAAO,GAAG;AACjB,mBAAM;AAAA,UACR;AAEA,cAAI,MAAM,GAAG;AACX,mBAAM;AAAA,UACR,OAAO;AAEL,gBAAI,iBAAiB,QAAQ,KAAK,MAAM,IAAI,CAAC,KAAK,GAAG;AACnD,qBAAM;AACN,mBAAI;AAAA,YACN;AAEA,mBAAM;AACN,mBAAM;AACN,mBAAM;AACN,mBAAM;AACN,mBAAM;AAAA,UACR;AACA,iBAAO;AAAA,QACT;AAAA,QAOA,eAAe,WAAW;AAExB,cAAI;AACJ,cAAI,IAAI,KAAK;AACb,cAAI,IAAI,KAAK;AACb,cAAI,MAAM,CAAC;AAEX,cAAI,MAAM,CAAC,KAAK,MAAM,CAAC,GAAG;AACxB,mBAAO;AAAA,UACT;AAEA,aAAG;AACD,gBAAI,KAAK,KAAK,MAAM,IAAI,CAAC,CAAC;AAC1B,gBAAI,IAAI;AACR,gBAAI;AACJ,gBAAI;AAAA,UACN,SAAS,MAAM;AAEf,iBAAO;AAAA,QACT;AAAA,QAOA,YAAY,SAAS,KAAK;AAExB,cAAI,IAAI,KAAK;AACb,cAAI,IAAI,KAAK;AAEb,cAAI,MAAM,CAAC,KAAK,MAAM,CAAC,GAAG;AACxB,mBAAO;AAAA,UACT;AAEA,gBAAM,OAAO;AAEb,cAAI,SAAS,SAAS,GAAG,CAAC;AAC1B,cAAI,SAAS,WAAW,GAAG,GAAG,MAAM;AAEpC,cAAI,MAAM,KAAK,OAAO,IAAI,MAAM;AAEhC,iBAAM,IAAI,IAAI;AAEd,eAAI;AACJ,eAAI;AAEJ,cAAI;AACF,mBAAM;AAER,cAAI,QAAQ;AAEV,qBAAS,IAAI,QAAQ,OAAM;AACzB,qBAAM,IAAI,IAAI;AACd,mBAAI;AACJ,mBAAI;AAAA,YACN;AACA,mBAAM;AACN,qBAAS,IAAI,QAAQ,OAAM;AACzB,qBAAM,IAAI,IAAI;AACd,mBAAI;AACJ,mBAAI;AAAA,YACN;AACA,mBAAM;AAAA,UACR,OAAO;AACL,qBAAS,IAAI,KAAK,KAAK,OAAM;AAC3B,qBAAM,IAAI,IAAI;AACd,mBAAI;AACJ,mBAAI;AAAA,YACN;AAAA,UACF;AACA,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,UAAI,OAAO,WAAW,cAAc,OAAO,QAAQ;AACjD,eAAO,CAAC,GAAG,WAAW;AACpB,iBAAO;AAAA,QACT,CAAC;AAAA,MACH,WAAW,OAAO,YAAY,UAAU;AACtC,eAAO,eAAe,UAAU,cAAc,EAAE,SAAS,KAAK,CAAC;AAC/D,iBAAS,aAAa;AACtB,iBAAS,cAAc;AACvB,eAAO,aAAa;AAAA,MACtB,OAAO;AACL,aAAK,cAAc;AAAA,MACrB;AAAA,IAEF,GAAG,OAAI;AAAA;AAAA;;;AC13BP;AAAA;AAAA,QAAI,aAAa;AAEjB,QAAI,WAAW;AACf,QAAI,QAAQ;AAEZ,QAAM,SAAS;AACf,QAAM,QAAQ;AAEd,QAAM,aAAN,cAAyB,SAAS;AAAA,MAIhC,WAAW,QAAQ,MAAM;AACvB,YAAI,WAAW,SAAS;AACtB,iBAAO,OAAO;AAAA,QAChB,OAAO;AACL,iBAAO,SAAS,OAAO;AAAA,QACzB;AAAA,MACF;AAAA,MAKA,YAAY,QAAQ,MAAM,OAAO,OAAO,OAAO;AAC7C,gBAAQ,IAAI,WAAW,KAAK;AAI5B,YAAI,UAAU,OAAO;AACnB,kBAAQ,MAAM,IAAI,EAAE;AAAA,QACtB,WAAW,UAAU,QAAQ;AAC3B,kBAAQ,MAAM,IAAI,IAAI,EAAE,IAAI,EAAE;AAAA,QAChC;AACA,gBAAQ,MAAM,SAAS;AAEvB,YAAI,WAAW,OAAO;AACpB,kBAAQ,MAAM,IAAI,MAAM,MAAM;AAAA,QAChC;AACA,eAAO,KAAK,WAAW,QAAQ,IAAI,IAAI,QAAQ;AAAA,MACjD;AAAA,MAKA,MAAM,MAAM;AACV,YAAI,CAAC,KAAK,KAAK;AACb,eAAK,MAAM,CAAC;AACZ,mBAAS,UAAU,KAAK,UAAU;AAChC,iBAAK,IAAI,KAAK,KAAK,WAAW,QAAQ,KAAK,CAAC;AAC5C,iBAAK,IAAI,KAAK,KAAK,WAAW,QAAQ,KAAK,CAAC;AAAA,UAC9C;AAAA,QACF;AAEA,aAAK,SAAS,MAAM,SAAS,KAAK,QAAQ,aAAW;AACnD,iBAAO,QAAQ,OAAO,WAAS,KAAK,IAAI,MAAM,OAAK,CAAC,MAAM,SAAS,CAAC,CAAC,CAAC;AAAA,QACxE,CAAC;AAAA,MACH;AAAA,MAKA,QAAQ,MAAM;AACZ,YAAI,SAAS,KAAK,aAAa,IAAI;AACnC,YAAI,WAAW,SAAS,CAAC,MAAM,IAAI,KAAK;AAExC,aAAK,SAAS,MAAM,SAAS,KAAK,QAAQ,CAAC,QAAQ,aAAa;AAC9D,mBAAS,SAAS,QAAQ;AACxB,gBACE,CAAC,MAAM,SAAS,gBAAgB,KAChC,CAAC,MAAM,SAAS,gBAAgB,GAChC;AACA,uBAAS,KAAK,KAAK;AACnB;AAAA,YACF;AAEA,qBAAS,UAAU,UAAU;AAC3B,kBAAI,YAAY,MAAM,QAAQ,QAAQ,SAAO;AAC3C,oBAAI,QAAQ,IAAI,MAAM,KAAK;AAC3B,uBAAO,KAAK;AAAA,kBACV;AAAA,kBACA,MAAM;AAAA,kBACN,MAAM;AAAA,kBACN,MAAM;AAAA,kBACN,MAAM;AAAA,gBACR;AAAA,cACF,CAAC;AACD,uBAAS,KAAK,SAAS;AAAA,YACzB;AACA,qBAAS,KAAK,KAAK;AAAA,UACrB;AAEA,iBAAO,MAAM,KAAK,QAAQ;AAAA,QAC5B,CAAC;AAAA,MACH;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;AChGjB;AAAA;AAAA,QAAI,EAAE,KAAK,IAAI;AACf,QAAI,SAAS;AAEb,QAAI,WAAW;AACf,QAAI,SAAS;AAEb,QAAM,aAAN,MAAiB;AAAA,MACf,YAAY,UAAU;AACpB,aAAK,QAAQ,CAAC,cAAc,qBAAqB;AACjD,aAAK,WAAW;AAAA,MAClB;AAAA,MAKA,IAAI,MAAM,QAAQ;AAChB,YAAI,QAAQ;AACZ,YAAI,MAAM,KAAK,SAAS,IAAI,KAAK;AACjC,YAAI,iBAAiB,KAAK,mBAAmB,IAAI;AACjD,YAAI,eAAe,kBAAmB,OAAO,IAAI,YAAa,CAAC;AAE/D,YAAI,SAAS,KAAK,MAAM,KAAK,KAAK;AAClC,YAAI,QAAQ,OAAO,IAAI,OAAK,KAAK,SAAS,CAAC,CAAC;AAC5C,YAAI,QAAQ,CAAC;AAEb,YAAI,MAAM,KAAK,OAAK,EAAE,OAAO,GAAG,GAAG;AACjC;AAAA,QACF;AAEA,iBAAS,SAAS,QAAQ;AACxB,iBAAO,KAAK,SAAS,KAAK;AAC1B,cAAI,KAAK,OAAO;AAAK;AAErB,cAAI,WAAW,KAAK,SAAS,IAAI;AACjC,cAAI,CAAC,YAAY,CAAC,SAAS;AAAU;AAErC,eAAK,UAAU,SAAS,UAAU;AAChC,gBAAI,kBAAkB,CAAC,eAAe,KAAK,OAAK,OAAO,SAAS,CAAC,CAAC,GAAG;AACnE;AAAA,YACF;AAEA,gBAAI,WAAW,KAAK,SAAS,SAAS,MAAM,MAAM;AAClD,gBAAI,aAAa,mBAAmB,CAAC,MAAM,SAAS,QAAQ,GAAG;AAC7D,kBAAI,CAAC,KAAK,SAAS,MAAM,MAAM,GAAG;AAChC,sBAAM,KAAK,KAAK,MAAM,MAAM,UAAU,KAAK,CAAC;AAAA,cAC9C;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,iBAAS,OAAO,OAAO,KAAK;AAC5B,YAAI,QAAQ,KAAK,UAAU,MAAM;AAEjC,YAAI,cAAc,KAAK;AAAA,UACrB,KAAK,oBAAoB,QAAQ,UAAU;AAAA,QAC7C;AACA,YAAI,aAAa,SAAS,UAAU,GAAG;AACrC,eAAK,YAAY,MAAM,WAAW,KAAK,QAAQ,WAAW;AAAA,QAC5D;AACA,aAAK,YAAY,MAAM,KAAK,MAAM,WAAW;AAC7C,YAAI,aAAa,SAAS,KAAK,GAAG;AAChC,cAAI,aAAa,KAAK,UAAU,KAAK,oBAAoB,QAAQ,KAAK,CAAC;AACvE,eAAK,YAAY,MAAM,MAAM,KAAK,QAAQ,UAAU;AAAA,QACtD;AAEA,aAAK,UAAU,cAAc;AAC3B,cAAI,WAAW,cAAc,WAAW,OAAO;AAC7C,gBAAI,cAAc,KAAK;AAAA,cACrB,KAAK,mBAAmB,QAAQ,MAAM;AAAA,YACxC;AACA,iBAAK,YAAY,MAAM,SAAS,KAAK,MAAM,WAAW;AAAA,UACxD;AAAA,QACF;AAEA,YAAI,UAAU,KAAK,SAAS,CAAC,KAAK,QAAQ,MAAM,KAAK,MAAM,KAAK,GAAG;AACjE,eAAK,gBAAgB,QAAQ,IAAI;AACjC,eAAK,YAAY;AACjB,eAAK,QAAQ;AAAA,QACf;AAAA,MACF;AAAA,MAKA,SAAS,OAAO;AACd,YAAI,OAAO,MAAM,GAAG;AACpB,YAAI,MAAM,KAAK,IAAI,GAAG;AACpB,mBAAS,CAAC,GAAG,KAAK,KAAK,MAAM,QAAQ,GAAG;AACtC,gBAAI,MAAM,KAAK,MAAM,SAAS,QAAQ;AACpC,qBAAO,MAAM;AAAA,YACf;AAAA,UACF;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA,MAKA,QAAQ,MAAM,MAAM,OAAO;AACzB,eAAO,KAAK,OAAO,KAAK,OAAK,EAAE,SAAS,QAAQ,EAAE,UAAU,KAAK;AAAA,MACnE;AAAA,MAKA,YAAY,MAAM,MAAM,OAAO;AAC7B,YAAI,CAAC,KAAK,QAAQ,MAAM,MAAM,KAAK,GAAG;AACpC,eAAK,YAAY,EAAE,MAAM,MAAM,CAAC;AAAA,QAClC;AAAA,MACF;AAAA,MAKA,gBAAgB,QAAQ,MAAM;AAC5B,YAAI,KAAK,SAAS,uBAAuB;AACvC;AAAA,QACF;AAEA,YAAI,aAAa;AACjB,YAAI,oBAAoB;AAExB,aAAK,OAAO,KAAK,OAAK;AACpB,cAAI,EAAE,SAAS,QAAQ;AACrB,mBAAO;AAAA,UACT;AACA,cAAI,EAAE,KAAK,QAAQ,aAAa,MAAM,GAAG;AACvC,mBAAO;AAAA,UACT;AACA,cAAI,SAAS,KAAK,MAAM,EAAE,KAAK;AAE/B,cAAI,EAAE,SAAS,uBAAuB;AACpC,mBAAO,QAAQ,WAAS;AACtB,kBAAI,SAAS,KAAK,SAAS,IAAI;AAC/B,kBAAI,UAAU,OAAO,YAAY,OAAO,SAAS,SAAS,GAAG;AAC3D,6BAAa;AAAA,cACf;AAAA,YACF,CAAC;AACD,mBAAO;AAAA,UACT;AAEA,8BAAoB,qBAAqB,OAAO,SAAS;AACzD,iBAAO;AAAA,QACT,CAAC;AAED,YAAI,cAAc,mBAAmB;AACnC,eAAK;AAAA,YACH;AAAA,YACA;AAAA,UAIF;AAAA,QACF;AAAA,MACF;AAAA,MAKA,OAAO,MAAM;AACX,YAAI,SAAS,KAAK,MAAM,KAAK,KAAK;AAClC,iBAAS,OAAO,OAAO,OAAK;AAC1B,cAAI,OAAO,KAAK,SAAS,OAAO,KAAK,SAAS,CAAC;AAC/C,iBAAO,CAAC,QAAQ,CAAC,KAAK;AAAA,QACxB,CAAC;AACD,YAAI,QAAQ,KAAK,UAAU,MAAM;AAEjC,YAAI,KAAK,UAAU,OAAO;AACxB;AAAA,QACF;AAEA,YAAI,OAAO,WAAW,GAAG;AACvB,eAAK,OAAO;AACZ;AAAA,QACF;AAEA,YAAI,SAAS,KAAK,OAAO,KAAK,OAAK;AACjC,iBAAO,EAAE,SAAS,KAAK,QAAQ,EAAE,UAAU;AAAA,QAC7C,CAAC;AACD,YAAI,UAAU,KAAK,OAAO,KAAK,OAAK;AAClC,iBAAO,MAAM,QAAQ,EAAE,SAAS,KAAK,QAAQ,EAAE,MAAM,SAAS,MAAM;AAAA,QACtE,CAAC;AAED,YAAI,UAAU,SAAS;AACrB,eAAK,OAAO;AACZ;AAAA,QACF;AAEA,aAAK,QAAQ;AAAA,MACf;AAAA,MAKA,MAAM,OAAO;AACX,YAAI,MAAM,OAAO,KAAK;AACtB,YAAI,SAAS,CAAC;AACd,YAAI,QAAQ,CAAC;AACb,iBAAS,QAAQ,IAAI,OAAO;AAC1B,gBAAM,KAAK,IAAI;AACf,cAAI,KAAK,SAAS,SAAS,KAAK,UAAU,KAAK;AAC7C,mBAAO,KAAK,KAAK;AACjB,oBAAQ,CAAC;AAAA,UACX;AAAA,QACF;AACA,eAAO,KAAK,KAAK;AACjB,eAAO,OAAO,OAAO,OAAK,EAAE,SAAS,CAAC;AAAA,MACxC;AAAA,MAKA,UAAU,QAAQ;AAChB,YAAI,OAAO,WAAW,GAAG;AACvB,iBAAO;AAAA,QACT;AACA,YAAI,QAAQ,CAAC;AACb,iBAAS,SAAS,QAAQ;AACxB,cAAI,MAAM,MAAM,SAAS,GAAG,SAAS,OAAO;AAC1C,kBAAM,KAAK,KAAK,IAAI,MAAM,CAAC;AAAA,UAC7B;AACA,kBAAQ,MAAM,OAAO,KAAK;AAAA,QAC5B;AACA,YAAI,MAAM,GAAG,SAAS,OAAO;AAC3B,kBAAQ,MAAM,MAAM,CAAC;AAAA,QACvB;AACA,YAAI,MAAM,MAAM,SAAS,GAAG,SAAS,OAAO;AAC1C,kBAAQ,MAAM,MAAM,GAAG,KAAM,KAAK,MAAS;AAAA,QAC7C;AACA,eAAO,OAAO,UAAU,EAAE,MAAM,CAAC;AAAA,MACnC;AAAA,MAKA,MAAM,QAAQ,MAAM,OAAO;AACzB,YAAI,SAAS,CAAC;AACd,YAAI,UAAU;AACd,iBAAS,KAAK,OAAO;AACnB,cAAI,CAAC,WAAW,EAAE,SAAS,UAAU,EAAE,UAAU,QAAQ;AACvD,mBAAO,KAAK,EAAE,MAAM,QAAQ,OAAO,KAAK,CAAC;AACzC,sBAAU;AAAA,UACZ,OAAO;AACL,mBAAO,KAAK,CAAC;AAAA,UACf;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA,MAKA,IAAI,QAAQ;AACV,iBAAS,SAAS,QAAQ;AACxB,mBAAS,QAAQ,OAAO;AACtB,gBAAI,KAAK,SAAS,SAAS,KAAK,UAAU,KAAK;AAC7C,qBAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AACA,eAAO,EAAE,MAAM,OAAO,OAAO,KAAK,OAAO,IAAI;AAAA,MAC/C;AAAA,MAEA,mBAAmB,QAAQ,QAAQ;AACjC,eAAO,OAAO,OAAO,WAAS;AAC5B,cAAI,UAAU,OAAO,OAAO,KAAK,SAAS,KAAK,CAAC;AAChD,iBAAO,YAAY,MAAM,YAAY;AAAA,QACvC,CAAC;AAAA,MACH;AAAA,MAKA,oBAAoB,QAAQ,QAAQ;AAClC,YAAI,SAAS,OACV,IAAI,OAAK,KAAK,SAAS,CAAC,CAAC,EACzB,OAAO,OAAK,EAAE,MAAM,GAAG,OAAO,MAAM,MAAM,MAAM,EAChD,IAAI,OAAK,KAAK,SAAS,WAAW,CAAC,CAAC;AAEvC,YAAI,SAAS,CAAC;AACd,iBAAS,SAAS,QAAQ;AACxB,cAAI,OAAO,KAAK,SAAS,KAAK;AAC9B,cAAI,IAAI,OAAO,OAAO,IAAI;AAC1B,cAAI,CAAC,OAAO,SAAS,IAAI,MAAM,MAAM,UAAU,MAAM,KAAK;AACxD,mBAAO,KAAK,KAAK;AAAA,UACnB;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA,MAKA,SAAS,MAAM,QAAQ;AACrB,YAAI,QAAQ,CAAC,SAAS,mBAAmB,cAAc,eAAe;AACtE,YAAI,KAAK,SAAS,MAAM,KAAK,MAAM,SAAS,IAAI,GAAG;AACjD,cAAI,KAAK,SAAS,QAAQ,YAAY,OAAO;AAC3C,mBAAO;AAAA,UACT;AAEA,cAAI,KAAK,SAAS,QAAQ,YAAY,WAAW;AAC/C,mBAAO,OAAO,SAAS,MAAM;AAAA,UAC/B;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA,MAKA,mBAAmB,MAAM;AACvB,YAAI,EAAE,OAAO,IAAI;AAEjB,YAAI,OAAO,SAAS,QAAQ;AAC1B,iBAAO;AAAA,QACT,WAAW,CAAC,OAAO,SAAS,SAAS,IAAI,GAAG;AAC1C,iBAAO;AAAA,QACT;AAEA,YAAI,YAAY,SAAS,SAAS,EAAE;AAAA,UAAO,OACzC,OAAO,SAAS,SAAS,MAAM,CAAC;AAAA,QAClC;AAEA,eAAO,UAAU,SAAS,IAAI,YAAY;AAAA,MAC5C;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACxUjB;AAAA;AAAA,QAAI,QAAQ;AAEZ,QAAM,WAAN,MAAe;AAAA,MACb,YAAY,YAAY,UAAU,QAAQ,QAAQ;AAChD,aAAK,aAAa;AAClB,aAAK,WAAW;AAChB,aAAK,SAAS,UAAU;AACxB,aAAK,SAAS,UAAU,MAAM,OAAO,QAAQ;AAAA,MAC/C;AAAA,MAKA,MAAM,OAAO;AACX,YAAI,MAAM,SAAS,KAAK,MAAM,GAAG;AAC/B,iBAAO,CAAC,CAAC,MAAM,MAAM,KAAK,MAAM;AAAA,QAClC;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACrBjB;AAAA;AAAA,QAAI,WAAW;AACf,QAAI,WAAW;AACf,QAAI,SAAS;AACb,QAAI,QAAQ;AAEZ,QAAM,QAAN,cAAoB,SAAS;AAAA,MAI3B,OAAO,KAAK,UAAU,MAAM;AAC1B,YAAI,OAAO,KAAK;AAChB,YAAI,SAAS,CAAC;AAEd,iBAAS,UAAU,KAAK,qBAAqB;AAC3C,cAAI,QAAQ,KAAK,oBAAoB;AAErC,cAAI,UAAU,KAAK,OAAO;AACxB;AAAA,UACF;AAEA,cAAI;AACJ,cAAI,aAAa,OAAO,OAAO,IAAI;AAEnC,cAAI,eAAe,SAAS;AAC1B;AAAA,UACF;AAEA,cAAI,eAAe,QAAQ;AACzB,mBAAO,KAAK,QAAQ;AACpB,mBAAO,KAAK,IAAI;AAChB;AAAA,UACF;AAEA,cAAI,WAAW,SAAS,SAAS,MAAM,MAAM;AAC7C,cAAI,OAAO,KAAK;AAEhB,cAAI,CAAC,KAAK,MAAM,OAAK,EAAE,SAAS,QAAQ,GAAG;AACzC,mBAAO,KAAK,IAAI;AAChB;AAAA,UACF;AAEA,cAAI,UAAU,MAAM,QAAQ,OAAO,GAAG;AACtC,cAAI,UAAU,KAAK;AAAA,YACjB,OAAK,EAAE,SAAS,KAAK,QAAQ,EAAE,MAAM,QAAQ,OAAO,GAAG,MAAM;AAAA,UAC/D;AAEA,cAAI,SAAS;AACX,mBAAO,KAAK,IAAI;AAChB;AAAA,UACF;AAEA,cAAI,SAAS,KAAK,MAAM,MAAM,EAAE,MAAM,CAAC;AACvC,iBAAO,KAAK,OAAO,aAAa,MAAM,MAAM;AAE5C,iBAAO,KAAK,IAAI;AAAA,QAClB;AAEA,eAAO;AAAA,MACT;AAAA,MAKA,MAAM,MAAM;AACV,YAAI,QAAQ,KAAK;AACjB,YAAI,CAAC,MAAM,SAAS,KAAK,IAAI,GAAG;AAC9B,iBAAO;AAAA,QACT;AAEA,eAAO,CAAC,CAAC,MAAM,MAAM,KAAK,OAAO,CAAC;AAAA,MACpC;AAAA,MAKA,SAAS;AACP,eAAO,KAAK,gBAAgB,KAAK,cAAc,MAAM,OAAO,KAAK,IAAI;AAAA,MACvE;AAAA,MAKA,QAAQ,QAAQ,QAAQ;AACtB,eAAO,OAAO,QAAQ,KAAK,OAAO,GAAG,KAAK,UAAU;AAAA,MACtD;AAAA,MAKA,MAAM,MAAM;AACV,YAAI,KAAK,KAAK,SAAS,KAAK,KAAK,MAAM,UAAU,KAAK,OAAO;AAC3D,iBAAO,KAAK,KAAK,MAAM;AAAA,QACzB,OAAO;AACL,iBAAO,KAAK;AAAA,QACd;AAAA,MACF;AAAA,MAKA,IAAI,MAAM,QAAQ;AAChB,YAAI,CAAC,KAAK,qBAAqB;AAC7B,eAAK,sBAAsB,CAAC;AAAA,QAC9B;AACA,YAAI,QAAQ,KAAK,oBAAoB,WAAW,KAAK,MAAM,IAAI;AAE/D,YAAI;AACJ,WAAG;AACD,mBAAS;AACT,kBAAQ,KAAK,QAAQ,OAAO,MAAM;AAClC,cAAI,UAAU;AAAO;AAAA,QACvB,SAAS,UAAU;AAEnB,aAAK,oBAAoB,UAAU;AAAA,MACrC;AAAA,MAKA,IAAI,QAAQ;AACV,eAAO,IAAI,SAAS,KAAK,MAAM,SAAS,KAAK,IAAI;AAAA,MACnD;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC5HjB;AAAA;AAAA,QAAI,SAAS;AACb,QAAI,OAAO,kBAAmB;AAE9B,QAAI,OAAO,gBAAoB;AAC/B,QAAI,eAAe,gBAAoB;AACvC,QAAI,gBAAgB,gBAAoB;AAExC,aAAS,QAAQ,OAAO;AACtB,UACE,SACA,MAAM,WAAW,KACjB,MAAM,OAAO,UACb,SAAS,MAAM,IAAI,EAAE,IAAI,GACzB;AACA,eAAO,CAAC,OAAO,SAAS,MAAM,IAAI,EAAE,CAAC;AAAA,MACvC;AAEA,UAAI,SAAS,MAAM,WAAW,KAAK,SAAS,MAAM,IAAI,EAAE,IAAI,GAAG;AAC7D,eAAO,CAAC,SAAS,MAAM,IAAI,EAAE,GAAG,KAAK;AAAA,MACvC;AAEA,aAAO,CAAC,OAAO,KAAK;AAAA,IACtB;AAEA,YAAQ,YAAY;AAEpB,aAAS,UAAU,QAAQ,YAAY,UAAU;AAC/C,UAAI,aAAa,OAAO;AACxB,UAAI,WAAW,OAAO;AAEtB,UAAI,CAAC,YAAY;AACf,eAAO,CAAC,OAAO,KAAK;AAAA,MACtB;AAEA,UAAI,CAAC,OAAO,SAAS,IAAI,QAAQ,UAAU;AAC3C,UAAI,CAAC,KAAK,OAAO,IAAI,QAAQ,QAAQ;AAErC,UAAI,SAAS,CAAC,UAAU;AACtB,eAAO,CAAC,OAAO,KAAK;AAAA,MACtB;AAEA,UAAI,aAAa,KAAK;AACpB,eAAO,CAAC,MAAM,WAAW,SAAS;AAAA,MACpC;AAEA,UAAI,SAAS,SAAS;AACpB,eAAO,CAAC,OAAO,OAAO;AAAA,MACxB;AAEA,UAAI,SAAS,KAAK;AAChB,eAAO,CAAC,OAAO,MAAM,KAAK;AAAA,MAC5B;AAEA,aAAO,CAAC,OAAO,KAAK;AAAA,IACtB;AAEA,YAAQ,QAAQ;AAEhB,aAAS,MAAM,MAAM;AACnB,UAAI,OAAO,OAAO,KAAK,KAAK;AAE5B,UAAI,SAAS,CAAC;AACd,UAAI,UAAU;AACd,aAAO,WAAW,CAAC;AAEnB,eAAS,KAAK,KAAK,OAAO;AACxB,YAAI,EAAE,SAAS,OAAO;AACpB,qBAAW;AACX,iBAAO,WAAW,CAAC;AAAA,QACrB,WAAW,EAAE,SAAS,QAAQ;AAC5B,iBAAO,SAAS,KAAK,EAAE,KAAK;AAAA,QAC9B;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,YAAQ,aAAa;AAErB,aAAS,WAAW,MAAM,MAAM,OAAO;AACrC,UAAI,SAAS,CAAC,KAAK,OAAO,KAAK,OAAK,EAAE,SAAS,OAAO,MAAM,GAAG;AAC7D,aAAK,YAAY;AAAA,UACf,MAAM,OAAO;AAAA,UACb,OAAO,MAAM,SAAS;AAAA,QACxB,CAAC;AAAA,MACH;AAAA,IACF;AAIA,YAAQ,kBAAkB;AAE1B,aAAS,gBAAgB,EAAE,MAAM,OAAO,GAAG;AACzC,aAAO,SAAS,KAAK,QAAQ,aAAa,EAAE;AAAA,IAC9C;AAEA,aAAS,gBAAgB,EAAE,MAAM,GAAG,EAAE,IAAI,GAAG;AAC3C,UAAI,EAAE,OAAO,KAAK,IAAI,MAAM;AAAA,QAC1B,CAAC,QAAQ,SAAS;AAChB,cAAI,KAAK,SAAS,SAAS,KAAK,UAAU,KAAK;AAC7C,mBAAO,MAAM;AAAA,UACf,OAAO;AACL,mBAAO,OAAO,KAAK,KAAK,OAAO,UAAU,IAAI,CAAC;AAAA,UAChD;AACA,iBAAO;AAAA,QACT;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM,CAAC;AAAA,UACP,OAAO,CAAC;AAAA,QACV;AAAA,MACF;AAGA,UAAI,KAAK;AACP,eAAO,KAAK,OAAO,OAAK,EAAE,KAAK,CAAC;AAChC,YAAI,MAAM,CAAC;AACX,iBAAS,IAAI,GAAG,KAAK,OAAO,KAAK;AAC/B,eAAK,QAAQ,CAAC,MAAM,UAAU;AAC5B,gBAAI,QAAQ,KAAK,IAAI,GAAG;AACtB,kBAAI,KAAK,GAAG;AAAA,YACd;AACA,gBAAI,KAAK,IAAI;AAAA,UACf,CAAC;AAAA,QACH;AAEA,eAAO,IAAI,KAAK,GAAG;AAAA,MACrB;AAEA,aAAO,IAAI,KAAK,KAAK,EAAE,MAAM,MAAM,KAAK,EAAE;AAAA,IAC5C;AAEA,YAAQ,mBAAmB;AAE3B,aAAS,iBAAiB,EAAE,OAAO,IAAI,GAAG;AACxC,UAAI,SAAS,OAAO,KAAK,EAAE,MAAM,OAAO,CAAC,OAAO,SAAS;AACvD,YAAI,KAAK,SAAS,cAAc,KAAK,UAAU,UAAU;AACvD,iBAAO,MAAM,OAAO;AAAA,YAClB,MAAM;AAAA,YACN,OAAO,gBAAgB,MAAM,EAAE,IAAI,CAAC;AAAA,UACtC,CAAC;AAAA,QACH;AACA,YAAI,OAAO,KAAK,SAAS,SAAS;AAChC,iBAAO,MAAM;AAAA,YACX;AAAA,cACE,MAAM;AAAA,cACN,OAAO;AAAA,YACT;AAAA,YACA;AAAA,cACE,MAAM;AAAA,cACN,OAAO;AAAA,YACT;AAAA,YACA;AAAA,UACF;AAAA,QACF;AACA,eAAO,MAAM,OAAO,IAAI;AAAA,MAC1B,GAAG,CAAC,CAAC;AAEL,aAAO,OAAO,UAAU,MAAM;AAAA,IAChC;AAIA,QAAI,OAAO;AAEX,aAAS,MAAM,OAAO,KAAK;AACzB,aAAO,EAAE,OAAO,KAAK,MAAM,MAAM,MAAM;AAAA,IACzC;AAEA,aAAS,WAAW,MAAM;AACxB,aAAO,KAAK,KAAK,EAAE,MAAM,MAAM;AAAA,IACjC;AAEA,YAAQ,iBAAiB;AAEzB,aAAS,eAAe,EAAE,MAAM,IAAI,GAAG;AACrC,aAAO,KAAK,OAAO,CAAC,OAAO,MAAM,aAAa;AAC5C,YAAI,IAAI;AAAK,sBAAY;AAEzB,YAAI,KAAK,KAAK,MAAM;AAAI,iBAAO;AAE/B,mBAAW,IAAI,EAAE,QAAQ,CAAC,MAAM,gBAAgB;AAC9C,cAAI,KAAK,KAAK,IAAI;AAAG;AAErB,cAAI,IAAI;AAAQ,2BAAe;AAE/B,cAAI,OAAO,MAAM,UAAU,aAAa;AACtC,kBAAM,QAAQ;AAAA,cACZ,QAAQ,MAAM,cAAc,GAAG,cAAc,CAAC;AAAA,cAC9C,KAAK,MAAM,WAAW,GAAG,WAAW,CAAC;AAAA,YACvC;AAAA,UACF,OAAO;AACL,gBAAI,EAAE,QAAQ,IAAI,IAAI,MAAM;AAE5B,mBAAO,QAAQ,KAAK,IAAI,OAAO,OAAO,cAAc,CAAC;AACrD,mBAAO,MAAM,KAAK,IAAI,OAAO,KAAK,cAAc,CAAC;AACjD,mBAAO,OAAO,OAAO,MAAM,OAAO;AAElC,gBAAI,QAAQ,KAAK,IAAI,IAAI,OAAO,WAAW,CAAC;AAC5C,gBAAI,MAAM,KAAK,IAAI,IAAI,KAAK,WAAW,CAAC;AACxC,gBAAI,OAAO,IAAI,MAAM,IAAI;AAAA,UAC3B;AAAA,QACF,CAAC;AAED,eAAO;AAAA,MACT,GAAG,CAAC,CAAC;AAAA,IACP;AAIA,aAAS,UAAU,MAAM;AACvB,aAAO,KAAK,SAAS,UAAU,UAAU,KAAK,KAAK,KAAK;AAAA,IAC1D;AAEA,aAAS,cAAc,QAAQ;AAC7B,UAAI,OAAO,MAAM,SAAS,OAAO,KAAK,QAAQ;AAC5C,eAAO,KAAK,KAAK,MAAM;AAAA,MACzB;AACA,aAAO;AAAA,IACT;AAEA,YAAQ,gBAAgB;AAExB,aAAS,cAAc,EAAE,MAAM,IAAI,GAAG;AACpC,UAAI,eAAe,OAAO,KAAK,KAAK,EAAE,MAAM;AAAA,QAC1C,CAAC,QAAQ,SAAS;AAChB,cAAI,EAAE,MAAM,MAAM,IAAI;AAEtB,cAAI,UAAU,IAAI,KAAK,SAAS;AAAS,mBAAO;AAGhD,cAAI,SAAS,UAAU;AACrB,qBAAS,cAAc,MAAM;AAC7B,mBAAO,MAAM,KAAK,KAAK;AAAA,UACzB;AAGA,cAAI,SAAS,UAAU,SAAS,YAAY;AAC1C,mBAAO,OAAO,KAAK,KAAK,OAAO,UAAU,IAAI,CAAC;AAAA,UAChD;AAGA,cAAI,SAAS,SAAS,UAAU,KAAK;AACnC,mBAAO,MAAM;AACb,qBAAS,cAAc,MAAM;AAAA,UAC/B;AAEA,iBAAO;AAAA,QACT;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,SAAS,CAAC;AAAA,UACV,MAAM,CAAC;AAAA,UACP,OAAO,CAAC;AAAA,QACV;AAAA,MACF;AAEA,aAAO;AAAA,QACL,OAAO,eAAe;AAAA,UACpB,MAAM,aAAa;AAAA,UACnB;AAAA,QACF,CAAC;AAAA,QACD,SAAS,iBAAiB;AAAA,UACxB,OAAO,aAAa,QAAQ,KAAK,GAAG;AAAA,UACpC,KAAK,IAAI;AAAA,QACX,CAAC;AAAA,QACD,MAAM,iBAAiB;AAAA,UACrB,OAAO,aAAa,KAAK,KAAK,GAAG;AAAA,UACjC,KAAK,IAAI;AAAA,QACX,CAAC;AAAA,MACH;AAAA,IACF;AAWA,aAAS,WAAW,MAAM,aAAa,OAAO,gBAAgB,OAAO;AACnE,UAAI,SAAS;AAAA,QACX;AAAA,UACE,MAAM;AAAA,UACN,OAAO,OAAO,KAAK,IAAI,KAAK;AAAA,QAC9B;AAAA,MACF;AACA,UAAI,KAAK,IAAI,OAAO,KAAK,YAAY;AACnC,eAAO,KAAK;AAAA,UACV,MAAM;AAAA,UACN,OAAO,OAAO,KAAK,IAAI,IAAI;AAAA,QAC7B,CAAC;AAAA,MACH;AACA,aAAO,KAAK;AAAA,QACV,MAAM;AAAA,QACN,OAAO,OAAO,KAAK,OAAO,KAAK;AAAA,MACjC,CAAC;AACD,UAAI,KAAK,OAAO,OAAO,KAAK,eAAe;AACzC,eAAO,KAAK;AAAA,UACV,MAAM;AAAA,UACN,OAAO,OAAO,KAAK,OAAO,IAAI;AAAA,QAChC,CAAC;AAAA,MACH;AACA,aAAO;AAAA,IACT;AAEA,aAAS,eAAe,QAAQ;AAC9B,UAAI,OAAO,SAAS,YAAY,OAAO,SAAS,SAAS;AACvD,eAAO;AAAA,MACT;AACA,UAAI,CAAC,OAAO,QAAQ;AAClB,eAAO;AAAA,MACT;AACA,aAAO,eAAe,OAAO,MAAM;AAAA,IACrC;AAQA,aAAS,6BAA6B,eAAe,mBAAmB;AACtE,sBAAgB,cAAc,IAAI,cAAY;AAC5C,YAAI,kBAAkB,KAAK,MAAM,QAAQ;AACzC,YAAI,kBAAkB,KAAK,MAAM,QAAQ;AAEzC,YAAI,gBAAgB,SAAS,gBAAgB,QAAQ;AACnD,qBAAW,gBAAgB,MAAM,EAAE,EAAE,KAAK,EAAE;AAAA,QAC9C;AACA,eAAO;AAAA,MACT,CAAC;AAED,aAAO,cAAc,IAAI,kBAAgB;AACvC,YAAI,cAAc,kBAAkB,IAAI,CAAC,aAAa,UAAU;AAC9D,cAAI,QAAQ,UAAU,IAAI,KAAK;AAC/B,iBAAO,GAAG,QAAQ,iBAAiB;AAAA,QACrC,CAAC;AAED,eAAO;AAAA,MACT,CAAC;AAAA,IACH;AAQA,aAAS,eAAe,OAAO,OAAO;AACpC,aAAO,MAAM,UAAU,KAAK,SAAO;AACjC,eAAO,MAAM,UAAU,SAAS,GAAG;AAAA,MACrC,CAAC;AAAA,IACH;AAOA,aAAS,uBAAuB,KAAK;AACnC,UAAI,SAAS,CAAC;AAId,UAAI,UAAU,2BAA2B,OAAK;AAC5C,YAAI,OAAO,EAAE;AACb,YAAI,QAAQ,eAAe,IAAI;AAC/B,YAAI,MAAM,WAAW,CAAC;AACtB,YAAI,eAAe,eAAe,GAAG,GAAG;AACxC,YAAI,EAAE,MAAM,IAAI,cAAc,EAAE,MAAM,GAAG,KAAK,gBAAgB,IAAI,CAAC;AACnE,YAAI,YAAY,OAAO,KAAK,KAAK;AAGjC,YAAI,UAAU,WAAW,GAAG;AAC1B,iBAAO;AAAA,QACT;AAIA,YAAI,QAAQ,OAAO,OAAO,CAAC,KAAK,EAAE,SAAS,GAAG,QAAQ;AACpD,cAAI,WAAW,YAAY,UAAU,KAAK,UAAQ,SAAS,SAAS,IAAI,CAAC;AACzE,iBAAO,WAAW,MAAM;AAAA,QAC1B,GAAG,IAAI;AAEP,YAAI,UAAU,MAAM;AAElB,cAAI,EAAE,UAAU,MAAM,IAAI,OAAO;AAGjC,cAAI,kBAAkB,MAAM,KAAK,OAAK;AACpC,mBAAO,EAAE,kBAAkB,SAAS,eAAe,GAAG,IAAI;AAAA,UAC5D,CAAC;AAED,cAAI,kBAAkB;AAGtB,cAAI,qBAAqB,MAAM,OAAO,CAAC,KAAK,MAAM;AAChD,gBAAI,CAAC,EAAE,UAAU,eAAe,GAAG,IAAI,GAAG;AACxC,gCAAkB;AAClB,qBAAO,EAAE;AAAA,YACX;AACA,gBAAI,CAAC,iBAAiB;AACpB,wBAAU,QAAQ,UAAQ;AACxB,oBAAI,EAAE,MAAM,OAAO;AACjB,sBAAI,KAAK,IAAI;AAAA,gBACf;AAAA,cACF,CAAC;AAAA,YACH;AACA,mBAAO,KAAK,GAAG;AAAA,UACjB,GAAG,CAAC,CAAC;AAIL,gBAAM,QAAQ,OAAK;AACjB,sBAAU,QAAQ,UAAQ;AACxB,kBAAI,OAAO,EAAE,MAAM;AACnB,kBAAI,QAAQ,KAAK,IAAI,SAAS,MAAM,MAAM,IAAI,MAAM;AAClD,sBAAM,MAAM,IAAI,aAAa;AAAA,cAC/B;AAEA,kBAAI,QAAQ,KAAK,OAAO,SAAS,MAAM,MAAM,OAAO,MAAM;AACxD,sBAAM,MAAM,OAAO,aAAa;AAAA,cAClC;AAAA,YACF,CAAC;AAAA,UACH,CAAC;AAED,iBAAO,OAAO,WAAW,KAAK,CAAC,GAAG,UAAU,GAAG,SAAS,CAAC;AACzD,iBAAO,OAAO,MAAM,KAAK;AAAA,YACvB,eAAe,CAAC;AAAA,YAChB,QAAQ,MAAM;AAAA,YACd,WAAW,KAAK;AAAA,YAChB,MAAM;AAAA,YACN;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH,OAAO;AAEL,iBAAO,KAAK;AAAA,YACV,UAAU;AAAA,YACV,YAAY;AAAA,YACZ,OAAO;AAAA,cACL;AAAA,gBACE,eAAe;AAAA,gBACf,gBAAgB,CAAC;AAAA,gBACjB,QAAQ,MAAM;AAAA,gBACd,WAAW,KAAK;AAAA,gBAChB,MAAM;AAAA,gBACN,oBAAoB,CAAC;AAAA,gBACrB;AAAA,cACF;AAAA,YACF;AAAA,UACF,CAAC;AAAA,QACH;AAEA,eAAO;AAAA,MACT,CAAC;AAED,aAAO;AAAA,IACT;AAQA,YAAQ,cAAc;AAEtB,aAAS,YAAY,KAAK,YAAY;AAEpC,UAAI,oBAAoB,uBAAuB,GAAG;AAGlD,UAAI,kBAAkB,WAAW,GAAG;AAClC,eAAO;AAAA,MACT;AAGA,UAAI,gBAAgB,CAAC;AAErB,UAAI,UAAU,aAAa,cAAY;AACrC,YAAI,eAAe,SAAS;AAC5B,YAAI,iBAAiB,aAAa,MAAM,SAAS;AACjD,YAAI,gBAAgB,eAAe,YAAY;AAE/C,YAAI,WAAW,QAAQ,GAAG;AACxB,iBAAO;AAAA,QACT;AAEA,YAAI,oBAAoB,IAAI,MAAM,iBAAiB,YAAY;AAE/D,YAAI,QAAQ,SAAS;AAErB,YAAI,OAAO,kBAAkB,OAAO,OAAK,EAAE,SAAS,SAAS,KAAK,CAAC,EAAE;AAErE,YAAI,CAAC,MAAM;AACT,iBAAO;AAAA,QACT;AAEA,YAAI,WAAW,KAAK,SAAS,KAAK,SAAS,SAAS;AACpD,YAAI,kBAAkB,KAAK,MAAM,aAAa,QAAQ;AACtD,YAAI,kBAAkB,KAAK,MAAM,aAAa,QAAQ;AACtD,YAAI,oBACF,gBAAgB,SAAS,KACzB,gBAAgB,SAAS,gBAAgB;AAG3C,YAAI,gBAAgB;AAClB,iBAAO;AAAA,QACT;AAIA,YAAI,CAAC,cAAc,WAAW;AAC5B,wBAAc,YAAY,CAAC;AAAA,QAC7B;AAEA,YAAI,gBAAgB;AAGpB,iBAAS,QAAQ,KAAK,OAAO;AAC3B,cAAI,OAAO,KAAK,MAAM;AACtB,cAAI,mBAAmB,KAAK,mBAAmB,SAAS,KAAK;AAG7D,cAAI,CAAC,MAAM;AACT,gBAAI,WAAW,cAAc,UAAU;AACvC,gBAAI;AACJ,gBAAI,UAAU;AACZ,8BAAgB,IAAI,MAAM,QAAQ;AAAA,YACpC,OAAO;AAEL,8BAAgB;AAAA,YAClB;AAEA,gBAAI,oBAAoB,eAAe;AACrC,4BAAc,UAAU,WAAW,iBAAiB;AAAA,YACtD;AACA;AAAA,UACF;AAIA,cAAI,KAAK,UAAU,CAAC,cAAc,UAAU,KAAK,SAAS;AACxD,0BAAc,UAAU,KAAK,UAAU,CAAC;AAAA,UAC1C;AAEA,eAAK,CAAC,KAAK,iBAAiB,CAAC,qBAAqB,CAAC,KAAK,QAAQ;AAG9D,uBAAW,MAAM,OAAO,KAAK,EAC1B,QAAQ,EACR;AAAA,cAAQ,OACP,aAAa;AAAA,gBACX,OAAO,OAAO,GAAG;AAAA,kBACf,MAAM;AAAA,oBACJ,SAAS,SAAS,KAAK;AAAA,kBACzB;AAAA,gBACF,CAAC;AAAA,cACH;AAAA,YACF;AAEF,0BAAc,UAAU,WAAW;AACnC,4BAAgB;AAAA,UAClB,WAAW,KAAK,iBAAiB,CAAC,KAAK,UAAU,CAAC,mBAAmB;AAEnE,gBAAI,SAAS,aAAa,MAAM;AAChC,mBAAO,UAAU;AAEjB,uBAAW,MAAM,KAAK,IAAI,YAAY,KAAK,OAAO,UAAU,EACzD,QAAQ,EACR;AAAA,cAAQ,OACP,OAAO;AAAA,gBACL,OAAO,OAAO,GAAG;AAAA,kBACf,MAAM;AAAA,oBACJ,SAAS,SAAS,KAAK;AAAA,kBACzB;AAAA,gBACF,CAAC;AAAA,cACH;AAAA,YACF;AAEF,mBAAO,YAAY;AAAA,cACjB,OAAO;AAAA,cACP,KAAK;AAAA,YACP;AAEA,gBAAI,cAAc,UAAU,UAAU;AACpC,4BAAc,UAAU,SAAS,MAAM,MAAM;AAAA,YAC/C;AACA,0BAAc,UAAU,WAAW;AACnC,4BAAgB;AAAA,UAClB,WACE,KAAK,iBACL,CAAC,KAAK,UACN,qBACA,aAAa,SAAS,SAAS,KAAK,UAAU,EAAE,GAChD;AAGA,yBAAa,UAAU,yBAAyB,OAAK,EAAE,OAAO,CAAC;AAC/D,uBAAW,MAAM,KAAK,IAAI,YAAY,KAAK,OAAO,UAAU,EACzD,QAAQ,EACR;AAAA,cAAQ,OACP,aAAa;AAAA,gBACX,OAAO,OAAO,GAAG;AAAA,kBACf,MAAM;AAAA,oBACJ,SAAS,SAAS,KAAK;AAAA,kBACzB;AAAA,gBACF,CAAC;AAAA,cACH;AAAA,YACF;AAAA,UACJ,WAAW,KAAK,QAAQ;AAKtB,gBAAI,SAAS,aAAa,MAAM;AAChC,mBAAO,UAAU;AAEjB,uBAAW,MAAM,KAAK,IAAI,YAAY,KAAK,OAAO,UAAU,EACzD,QAAQ,EACR;AAAA,cAAQ,OACP,OAAO;AAAA,gBACL,OAAO,OAAO,GAAG;AAAA,kBACf,MAAM;AAAA,oBACJ,SAAS,SAAS,KAAK;AAAA,kBACzB;AAAA,gBACF,CAAC;AAAA,cACH;AAAA,YACF;AAEF,gBAAI,KAAK,iBAAiB,kBAAkB;AAC1C,qBAAO,YAAY;AAAA,gBACjB,OAAO;AAAA,gBACP,KAAK;AAAA,cACP;AAAA,YACF;AAEA,mBAAO,OAAO,KAAK,KAAK;AAExB,gBAAI,IAAI,MAAM,KAAK,KAAK,MAAM,IAAI,mBAAmB;AAGnD,mBAAK,KAAK,OAAO,OAAO,MAAM;AAAA,YAChC,OAAO;AAEL,4BAAc,UAAU,KAAK,QAAQ,KAAK,MAAM;AAAA,YAClD;AAIA,gBAAI,CAAC,eAAe;AAClB,4BAAc,UAAU,WAAW,iBAAiB;AAAA,YACtD;AAAA,UACF;AAAA,QACF;AAEA,eAAO;AAAA,MACT,CAAC;AAGD,aAAO,KAAK,aAAa,EAAE,QAAQ,UAAQ;AACzC,YAAI,OAAO,cAAc;AACzB,YAAI,WAAW,KAAK;AACpB,eAAO,KAAK,IAAI,EACb,QAAQ,EACR,OAAO,OAAK,MAAM,UAAU,EAC5B,QAAQ,YAAU;AACjB,cAAI,KAAK,QAAQ,SAAS,KAAK,UAAU;AACvC,qBAAS,MAAM,EAAE,MAAM,SAAS,OAAO,CAAC;AACxC,qBAAS,KAAK,EAAE,OAAO,KAAK,OAAO;AAAA,UACrC;AAAA,QACF,CAAC;AAAA,MACL,CAAC;AAED,aAAO;AAAA,IACT;AASA,YAAQ,kBAAkB;AAE1B,aAAS,gBAAgB,OAAO,MAAM,QAAQ;AAC5C,UAAI,SAAS,OAAO,KAAK,KAAK;AAE9B,WAAK,KAAK,EAAE,UAAU,aAAa,cAAY;AAC7C,iBAAS,OAAO,OAAO,OAAK,MAAM,SAAS,KAAK;AAAA,MAClD,CAAC;AAED,UAAI,OAAO,SAAS,GAAG;AACrB,aAAK,KAAK,QAAQ,8BAA8B,OAAO,KAAK,IAAI,CAAC;AAAA,MACnE;AAEA,aAAO;AAAA,IACT;AAUA,YAAQ,+BAA+B;AAEvC,aAAS,6BAA6B,MAAM,QAAQ;AAClD,UAAI,OAAO,KAAK;AAChB,UAAI,OAAO,KAAK,KAAK;AACrB,UAAI,kBAAkB;AAGtB,UAAI,oBAAoB,KACrB,MAAM,KAAK,QAAQ,EACnB,OAAO,SAAO,QAAQ,GAAG,EACzB,MAAM,GAAG,EAAE;AAId,UAAI,kBAAkB,SAAS,GAAG;AAChC,YAAI,oBAAoB;AACxB,YAAI,oBAAoB;AAExB,aAAK,UAAU,2BAA2B,OAAK;AAC7C,cAAI,SAAS,EAAE;AACf,cAAI,oBAAoB,OAAO;AAE/B,cAAI,EAAE,MAAM,IAAI,cAAc,EAAE,MAAM,GAAG,KAAK,WAAW,CAAC,EAAE,CAAC;AAC7D,cAAI,UAAU,MAAM,KAAK;AAGzB,mBAAS,eAAe,mBAAmB;AACzC,gBAAI,mBAAmB;AACrB;AAAA,YACF;AACA,gBAAI,iBAAiB,KAAK,MAAM,WAAW,EAAE,OAAO,SAAO,QAAQ,GAAG;AAEtE,gCAAoB,eAAe;AAAA,cACjC,CAAC,MAAM,QAAQ,SAAS,kBAAkB;AAAA,YAC5C;AAAA,UACF;AAEA,cAAI,qBAAqB,CAAC,SAAS;AACjC,mBAAO;AAAA,UACT;AAEA,cAAI,CAAC,mBAAmB;AACtB,gCAAoB,OAAO;AAAA,UAC7B;AAGA,cAAI,qBAAqB,sBAAsB,OAAO,UAAU;AAC9D,8BAAkB;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT,CAAC;AAGD,YAAI,CAAC,qBAAqB,iBAAiB;AACzC,eAAK;AAAA,YACH;AAAA,YACA,gFACyC,KAAK,uCACZ,kBAAkB,KAAK,GAAG;AAAA,UAC9D;AAAA,QACF;AAAA,MACF;AAAA,IACF;AASA,YAAQ,4BAA4B;AAEpC,aAAS,0BAA0B,MAAM,QAAQ;AAC/C,UAAI,OAAO,KAAK;AAChB,UAAI,QAAQ,CAAC;AACb,WAAK,UAAU,sBAAsB,OAAK;AACxC,YACE,CAAC,EAAE,KAAK,SAAS,MAAM,KACvB,CAAC,EAAE,MAAM,WAAW,MAAM,KAC1B,CAAC,EAAE,KAAK,SAAS,MAAM,GACvB;AACA,gBAAM,KAAK,CAAC;AAAA,QACd;AAAA,MACF,CAAC;AACD,UAAI,MAAM,SAAS,GAAG;AACpB,cAAM,QAAQ,OAAK;AACjB,YAAE;AAAA,YACA;AAAA,YACA,oGACwC,EAAE;AAAA,UAC5C;AAAA,QACF,CAAC;AAAA,MACH;AAEA,aAAO;AAAA,IACT;AAIA,YAAQ,aAAa;AAErB,aAAS,WAAW,MAAM;AACxB,UAAI,MAAM,CAAC;AAGX,UAAI,UAAU;AACd,WAAK,OAAO,UAAU,SAAS,CAAC,EAAE,MAAM,MAAM,MAAM;AAClD,YAAI,gBAAgB,KAAK,IAAI,GAAG;AAC9B,cAAI,CAAC,KAAK,EAAE,MAAM,IAAI,OAAO,KAAK,EAAE;AAEpC,cAAI,MAAM,OAAO,OAAO,UAAU,GAAG;AACrC,cAAI,SAAS,SAAS,OAAO,UAAU,MAAM,IAAI,IAAI;AAAA,QACvD;AACA,YAAI,oBAAoB,KAAK,IAAI;AAAG,cAAI,MAAM;AAC9C,YAAI,uBAAuB,KAAK,IAAI;AAAG,cAAI,SAAS;AAAA,MACtD,CAAC;AAED,aAAO;AAAA,IACT;AAOA,aAAS,iBAAiB,QAAQ;AAChC,UAAI,CAAC,QAAQ;AACX,eAAO,CAAC;AAAA,MACV;AACA,UAAI,SAAS,OAAO,MAAM;AAC1B,UAAI;AACJ,UAAI;AAEJ,aAAO,KAAK,UAAQ;AAClB,YAAI,KAAK,SAAS,UAAU,WAAW,KAAK,KAAK,KAAK,GAAG;AACvD,iBAAO,KAAK;AAAA,QACd,WAAW,KAAK,MAAM,SAAS,IAAI,GAAG;AACpC,kBAAQ,SAAS,KAAK,MAAM,QAAQ,OAAO,EAAE,CAAC;AAAA,QAChD;AAAA,MACF,CAAC;AAED,aAAO,CAAC,MAAM,KAAK;AAAA,IACrB;AASA,aAAS,iBAAiB,MAAM,MAAM;AACpC,UAAI;AAGJ,UAAI,oBAAoB,cAAc,IAAI;AAC1C,UAAI,oBAAoB,cAAc,IAAI;AAE1C,UAAI,kBAAkB,GAAG,SAAS,kBAAkB,GAAG,QAAQ;AAG7D,eAAO;AAAA,MACT,WAAW,kBAAkB,GAAG,SAAS,kBAAkB,GAAG,QAAQ;AAIpE,YAAI,MAAM,kBAAkB,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,UAAU;AAC5D,cAAI,oBAAoB,kBAAkB,GAAG,GAAG;AAChD,cAAI,SAAS,mBAAmB;AAC9B,mBAAO;AAAA,UACT;AACA,iBAAO;AAAA,QACT,GAAG,KAAK;AAER,YAAI,KAAK;AACP,mBAAS,kBAAkB,GAAG,MAAM,CAAC,KAAK,UAAU;AAClD,mBAAO,IAAI;AAAA,cACT,CAAC,MAAM,eAGL,kBAAkB,GAAG,MAAM,GAAG,EAAE,OAAO,gBAAgB;AAAA,YAC3D;AAAA,UACF,CAAC;AAAA,QACH;AAAA,MACF,OAAO;AAGL,iBAAS,kBAAkB,KAAK,gBAAc;AAC5C,iBAAO,WAAW,MAAM,CAAC,YAAY,UAAU;AAC7C,mBAAO,WAAW;AAAA,cAChB,CAAC,MAAM,eAAe,kBAAkB,GAAG,OAAO,gBAAgB;AAAA,YACpE;AAAA,UACF,CAAC;AAAA,QACH,CAAC;AAAA,MACH;AAEA,aAAO;AAAA,IACT;AAQA,YAAQ,iBAAiB;AAEzB,aAAS,eAAe,MAAM,KAAK;AACjC,UAAI,OAAO,KAAK;AAChB,UAAI,YAAY,eAAe,IAAI;AACnC,UAAI,OAAO,KAAK,KAAK;AAGrB,UAAI,mBAAmB,cAAc,KAAK,QAAQ;AAGlD,UAAI,OAAO,KAAK,GAAG,EAAE,SAAS,GAAG;AAC/B,eAAO;AAAA,MACT;AAGA,UAAI,CAAC,IAAI,IAAI,iBAAiB,UAAU,MAAM;AAE9C,UAAI,cAAc,iBAAiB;AAInC,UAAI,UAAU,aAAa,YAAY,YAAY,SAAS,GAAG,EAAE;AAEjE,UAAI,SAAS,IAAI,OAAO,IAAI,cAAc,cAAc;AAGxD,UAAI;AACJ,WAAK,UAAU,QAAQ,OAAK;AAC1B,YAAI;AAGJ,YAAI,KAAK,SAAS,MAAM,EAAE,SAAS,GAAG;AACpC,iBAAO;AAAA,QACT;AAGA,UAAE,UAAU,YAAY,OAAM,UAAU,WAAW,CAAC,CAAE;AAGtD,YAAI,CAAC,WAAW,OAAO,KAAK,OAAO,EAAE,WAAW,GAAG;AACjD,iBAAO;AAAA,QACT;AAGA,YAAI,CAAC,iBAAiB,KAAK,UAAU,EAAE,QAAQ,GAAG;AAChD,iBAAO;AAAA,QACT;AAEA,YAAI,QAAQ,eAAe,CAAC;AAC5B,YAAI,OAAO;AAGT,cAAI,gBAAgB,iBAAiB,MAAM,MAAM,EAAE;AACnD,cAAI,kBAAkB,MAAM;AAC1B,6BAAiB;AACjB,mBAAO;AAAA,UACT;AAAA,QACF,OAAO;AACL,2BAAiB;AACjB,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,MACT,CAAC;AAGD,UAAI,kBAAkB,OAAO,KAAK,cAAc,EAAE,SAAS,GAAG;AAC5D,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAEA,YAAQ,cAAc;AAEtB,aAAS,YAAY,EAAE,KAAK,YAAY,MAAM,OAAO,GAAG;AACtD,UAAI,cAAc,IAAI,OAAO,IAAI;AACjC,UAAI,CAAC,eAAe,eAAgB,IAAI,UAAU,CAAC,IAAI,MAAO;AAC5D,eAAO,IAAI;AACX,aAAK;AAAA,UACH;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAUA,aAAS,mBAAmB,KAAK;AAC/B,UAAI,aAAa,OAAO,GAAG,EAAE,MAAM,OAAO,CAAC,QAAQ,SAAS;AAC1D,YAAI,KAAK,SAAS,cAAc,KAAK,UAAU,UAAU;AACvD,cAAI,MAAM;AAEV,cAAI,CAAC,OAAO,KAAK,IAAI,KAAK,MAAM;AAAA,YAC9B,CAAC,KAAK,MAAM;AACV,kBAAI,EAAE,SAAS,UAAU,QAAQ,SAAS;AACxC,oBAAI,KAAK,KAAK,IAAI,SAAS,EAAE,KAAK,CAAC;AACnC,uBAAO;AAAA,cACT;AACA,kBAAI,EAAE,SAAS,SAAS,EAAE,UAAU,KAAK;AACvC,sBAAM;AACN,uBAAO;AAAA,cACT;AACA,kBAAI,QAAQ,SAAS;AACnB,oBAAI,MAAM,OAAO,UAAU,CAAC;AAAA,cAC9B;AACA,qBAAO;AAAA,YACT;AAAA,YACA,CAAC,GAAG,EAAE;AAAA,UACR;AAEA,cAAI,OAAO;AACT,qBAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC9B,qBAAO,KAAK,KAAK;AAAA,YACnB;AAAA,UACF;AAEA,iBAAO;AAAA,QACT;AACA,YAAI,KAAK,SAAS,SAAS;AACzB,iBAAO;AAAA,QACT;AACA,eAAO,OAAO,OAAO,OAAO,UAAU,IAAI,CAAC;AAAA,MAC7C,GAAG,CAAC,CAAC;AAEL,aAAO;AAAA,IACT;AAEA,YAAQ,qBAAqB;AAW7B,aAAS,mBAAmB,MAAM,QAAQ,KAAK,gBAAgB,OAAO;AACpE,UAAI,EAAE,OAAO,IAAI;AAEjB,UAAI,UAAU,OAAO,MAAM,KAAK,OAAK,EAAE,SAAS,oBAAoB;AACpE,UAAI,OAAO,mBAAmB,QAAQ,KAAK;AAC3C,UAAI,UAAU,mBAAmB,KAAK,KAAK;AAI3C,UAAI,aAAa,KAAK,IAAI,CAAC,GAAG,aAAa;AACzC,eAAO,MAAM;AAAA,UACX,EAAE,QAAQ,QAAQ,OAAO;AAAA,UACzB,CAAC,GAAG,MAAM,IAAI,WAAW,QAAQ,SAAS;AAAA,QAC5C,EAAE,KAAK,GAAG;AAAA,MACZ,CAAC;AAED,UAAI,QAAQ,eAAe,EAAE,MAAM,YAAY,IAAI,CAAC;AACpD,UAAI,OAAO,OAAO,KAAK,KAAK;AAC5B,UAAI,QAAQ,KAAK,IAAI,OAAK,MAAM,EAAE;AAGlC,UAAI,cAAc,SAAS,QAAQ,GAAG;AACpC,gBAAQ,MAAM,KAAK,CAAC,GAAG,MAAM,EAAE,OAAO,QAAQ,EAAE,OAAO,KAAK;AAAA,MAC9D;AAGA,YAAM,QAAQ,EAAE,QAAQ,CAAC,MAAM,UAAU;AACvC,YAAI,EAAE,QAAQ,IAAI,IAAI;AACtB,YAAI,eAAe,OAAO,UACvB,IAAI,SAAO,MAAM,kBAAkB,KAAK,SAAS,QAAQ,EACzD,KAAK,IAAI;AAGZ,YAAI,OAAO,OAAO,MAAM,EAAE,UAAU;AAGpC,aAAK,WAAW;AAGhB,aAAK,OAAO,EAAE,MAAM,gBAAgB,OAAO,IAAI,MAAM,CAAC;AACtD,aAAK,OAAO,EAAE,MAAM,mBAAmB,OAAO,OAAO,MAAM,CAAC;AAG5D,eAAO,MAAM,IAAI;AAAA,MACnB,CAAC;AAED,aAAO;AAAA,IACT;AAAA;AAAA;;;ACxlCA;AAAA;AAAA,QAAI,SAAS;AAEb,QAAI,QAAQ;AACZ,QAAI,cAAc,qBAA8B;AAEhD,QAAM,aAAa;AACnB,QAAM,aAAa;AACnB,QAAM,cAAc;AACpB,QAAM,aAAa;AAEnB,QAAM,QAAQ;AAAA,MACZ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,aAAS,gBAAgB,MAAM;AAC7B,aAAO,KAAK,OAAO;AAAA,QACjB,OAAK,EAAE,SAAS,mBAAmB,EAAE,SAAS;AAAA,MAChD;AAAA,IACF;AAEA,aAAS,kBAAkB,MAAM;AAC/B,UAAI,UAAU,KAAK,OAAO,KAAK,OAAK,EAAE,SAAS,oBAAoB;AACnE,UAAI,aAAa,KAAK,OAAO,KAAK,OAAK,EAAE,SAAS,uBAAuB;AACzE,aAAO,WAAW;AAAA,IACpB;AAEA,QAAM,YAAN,MAAgB;AAAA,MACd,YAAY,UAAU;AACpB,aAAK,WAAW;AAAA,MAClB;AAAA,MAKA,IAAI,KAAK,QAAQ;AAEf,YAAI,aAAa,KAAK,SAAS,IAAI;AACnC,YAAI,YAAY,KAAK,SAAS,IAAI;AAClC,YAAI,WAAW,KAAK,SAAS,IAAI;AACjC,YAAI,WAAW,KAAK,SAAS,IAAI;AAEjC,YAAI,YAAY,UAAQ;AACtB,cAAI,KAAK,SAAS,aAAa;AAC7B,gBAAI,CAAC,KAAK,SAAS,MAAM,MAAM,GAAG;AAChC,qBAAO,aAAa,UAAU,QAAQ,IAAI;AAAA,YAC5C;AAAA,UACF,WAAW,KAAK,SAAS,YAAY;AACnC,gBAAI,CAAC,KAAK,SAAS,MAAM,MAAM,GAAG;AAChC,qBAAO,YAAY,SAAS,QAAQ,IAAI;AAAA,YAC1C;AAAA,UACF,WAAW,KAAK,SAAS,YAAY;AACnC,gBACE,KAAK,SAAS,QAAQ,aAAa,SACnC,CAAC,KAAK,SAAS,MAAM,MAAM,GAC3B;AACA,qBAAO,SAAS,QAAQ,IAAI;AAAA,YAC9B;AAAA,UACF,WAAW,KAAK,SAAS,WAAW,KAAK,OAAO,SAAS,aAAa,GAAG;AACvE,gBAAI,CAAC,KAAK,SAAS,MAAM,MAAM,GAAG;AAChC,qBAAO,cAAc,WAAW,QAAQ,IAAI;AAAA,YAC9C;AAAA,UACF;AAEA,iBAAO;AAAA,QACT,CAAC;AAGD,YAAI,UAAU,UAAQ;AACpB,cAAI,KAAK,SAAS,MAAM,MAAM;AAAG,mBAAO;AAExC,iBAAO,KAAK,SAAS,IAAI,UAAU,IAAI,cAAY;AACjD,mBAAO,SAAS,QAAQ,MAAM,MAAM;AAAA,UACtC,CAAC;AAAA,QACH,CAAC;AAED,iBAAS,WAAW,MAAM;AACxB,iBAAO,KAAK,OAAO,MAAM,KAAK,UAAQ;AACpC,gBAAI,KAAK,SAAS;AAAQ,qBAAO;AACjC,gBAAI,cACF,KAAK,SAAS,aAAa,iBAAiB,KAAK,KAAK,KAAK;AAC7D,gBAAI,eAAe,KAAK,KAAK,WAAW,eAAe;AACvD,gBAAI,UAAU,sBAAsB,KAAK,KAAK,IAAI;AAClD,mBAAO,eAAe,gBAAgB;AAAA,UACxC,CAAC;AAAA,QACH;AACA,iBAAS,WAAW,MAAM;AACxB,iBAAO,KAAK,OAAO,KAAK,UAAQ;AAC9B,mBAAO,KAAK,SAAS,aAAa,iBAAiB,KAAK,KAAK,KAAK;AAAA,UACpE,CAAC;AAAA,QACH;AAEA,YAAI,eACF,KAAK,WAAW,KAAK,MAAM,KAC3B,KAAK,SAAS,IAAI,gBAClB,KAAK,SAAS,IAAI,aAAa;AAEjC,YAAI,UAAU,UAAQ;AACpB,cAAI,KAAK,aAAa,MAAM,MAAM;AAAG,mBAAO;AAE5C,cAAI,SAAS,KAAK;AAClB,cAAI,OAAO,KAAK;AAChB,cAAI,QAAQ,KAAK;AAEjB,cAAI,SAAS,gBAAgB;AAC3B,gBAAI,OAAO,MAAM,OAAK,EAAE,SAAS,oBAAoB,GAAG;AACtD,qBAAO;AAAA,gBACL;AAAA,gBAEA,EAAE,MAAM,KAAK;AAAA,cACf;AAAA,YACF;AAAA,UACF,WAAW,SAAS,iBAAiB;AACnC,mBAAO;AAAA,cACL;AAAA,cACA,EAAE,MAAM,KAAK;AAAA,YACf;AACA,mBAAO;AAAA,UACT,WAAW,SAAS,oBAAoB;AACtC,mBAAO;AAAA,cACL;AAAA,cACA,EAAE,MAAM,KAAK;AAAA,YACf;AACA,mBAAO;AAAA,UACT,WAAW,SAAS,aAAa,UAAU,OAAO;AAChD,mBAAO;AAAA,cACL;AAAA,cAEA,EAAE,MAAM,KAAK;AAAA,YACf;AACA,mBAAO;AAAA,UACT,WAAW,SAAS,0BAA0B;AAC5C,gBAAI,UAAU,WAAW,UAAU,QAAQ;AACzC,qBAAO;AAAA,gBACL;AAAA,gBAEA,EAAE,MAAM,KAAK;AAAA,cACf;AAAA,YACF;AAAA,UACF,WACE,0CAA0C,KAAK,IAAI,KACnD,WAAW,IAAI,GACf;AACA,gBAAI,UAAU,WAAW,UAAU,OAAO;AACxC,qBAAO;AAAA,gBACL,GAAG,sDACO;AAAA,gBACV,EAAE,MAAM,KAAK;AAAA,cACf;AAAA,YACF;AAAA,UACF,WAAW,SAAS,0BAA0B,UAAU,OAAO;AAC7D,mBAAO;AAAA,cACL;AAAA,cAEA,EAAE,MAAM,KAAK;AAAA,YACf;AAAA,UACF,OAAO;AACL,gBAAI,gBAAgB,KAAK,WAAW,MAAM,MAAM,GAAG;AACjD,kBAAI,KAAK,UAAU,WAAW;AAC5B,uBAAO,KAAK,+BAA+B,EAAE,MAAM,KAAK,CAAC;AAAA,cAC3D;AACA,kBAAI,gCAAgC,KAAK,IAAI,KAAK,WAAW,IAAI,GAAG;AAClE,oBAAI,QAAQ,KAAK,QAAQ,UAAU,OAAO;AAC1C,uBAAO;AAAA,kBACL,uBAAuB,sCACR,oCACV,KAAK,OAAO,kBAAkB,UAAU,KAAK;AAAA,kBAClD,EAAE,MAAM,KAAK;AAAA,gBACf;AAAA,cACF,WACE,kCAAkC,KAAK,IAAI,KAC3C,WAAW,IAAI,GACf;AACA,uBAAO,KAAK,uBAAuB,KAAK,2BAA2B;AAAA,kBACjE,MAAM;AAAA,gBACR,CAAC;AAAA,cACH,WAAW,SAAS,aAAa,KAAK,UAAU,YAAY;AAC1D,uBAAO;AAAA,kBACL;AAAA,kBAEA,EAAE,MAAM,KAAK;AAAA,gBACf;AACA,uBAAO;AAAA,cACT,WAAW,KAAK,SAAS,YAAY;AACnC,oBAAI,SAAS,KAAK,WAAW,MAAM,MAAM;AACzC,oBACE,WAAW,eACX,CAAC,kBAAkB,IAAI,KACvB,CAAC,gBAAgB,IAAI,GACrB;AACA,yBAAO;AAAA,oBACL;AAAA,oBAIA,EAAE,MAAM,KAAK;AAAA,kBACf;AAAA,gBACF,YACG,WAAW,QAAQ,WAAW,mBAC/B,CAAC,gBAAgB,IAAI,GACrB;AACA,yBAAO;AAAA,oBACL;AAAA,oBACA,EAAE,MAAM,KAAK;AAAA,kBACf;AAAA,gBACF;AAAA,cACF,WAAW,SAAS,qBAAqB;AACvC,uBAAO,KAAK,4CAA4C;AAAA,kBACtD,MAAM;AAAA,gBACR,CAAC;AACD,uBAAO;AAAA,cACT,WAAW,SAAS,kBAAkB;AACpC,uBAAO,KAAK,yCAAyC,EAAE,MAAM,KAAK,CAAC;AACnE,uBAAO;AAAA,cACT,WAAW,SAAS,kBAAkB;AACpC,oBAAI,UAAU,OAAO,KAAK,OAAK,EAAE,SAAS,oBAAoB;AAC9D,oBAAI,UAAU,OAAO,KAAK,OAAK,EAAE,SAAS,uBAAuB;AAEjE,oBAAI,gBAAgB,IAAI,GAAG;AACzB,yBAAO,KAAK,yCAAyC;AAAA,oBACnD,MAAM;AAAA,kBACR,CAAC;AAAA,gBACH,WAAW,MAAM,SAAS,OAAO,GAAG;AAClC,yBAAO,KAAK,gDAAgD;AAAA,oBAC1D,MAAM;AAAA,kBACR,CAAC;AAAA,gBACH,WAAW,CAAC,WAAW,CAAC,SAAS;AAC/B,yBAAO;AAAA,oBACL;AAAA,oBAEA,EAAE,MAAM,KAAK;AAAA,kBACf;AAAA,gBACF;AACA,uBAAO;AAAA,cACT,WAAW,MAAM,SAAS,UAAU,GAAG;AACrC,uBAAO,KAAK,yCAAyC;AAAA,kBACnD,MAAM;AAAA,kBACN,MAAM;AAAA,gBACR,CAAC;AACD,uBAAO;AAAA,cACT,WAAW,MAAM,SAAS,WAAW,GAAG;AACtC,uBAAO,KAAK,0CAA0C;AAAA,kBACpD,MAAM;AAAA,kBACN,MAAM;AAAA,gBACR,CAAC;AACD,uBAAO;AAAA,cACT,WAAW,KAAK,WAAW,eAAe,KAAK,MAAM,SAAS,GAAG,GAAG;AAClE,uBAAO;AAAA,kBACL;AAAA,kBAEA,EAAE,MAAM,MAAM,MAAM,IAAI;AAAA,gBAC1B;AAAA,cACF;AAAA,YACF;AACA,gBAAI,MAAM,SAAS,iBAAiB,GAAG;AACrC,kBAAI,WAAW,KAAK,KAAK,KAAK,GAAG;AAC/B,uBAAO;AAAA,kBACL;AAAA,kBAGA,EAAE,MAAM,KAAK;AAAA,gBACf;AAAA,cACF,OAAO;AACL,oBAAI,MAAM,OAAO,KAAK;AAEtB,yBAAS,KAAK,IAAI,OAAO;AACvB,sBAAI,EAAE,SAAS,cAAc,EAAE,UAAU,mBAAmB;AAC1D,6BAAS,QAAQ,EAAE,OAAO;AACxB,0BAAI,KAAK,SAAS,QAAQ;AACxB,4BAAI,KAAK,UAAU,SAAS;AAC1B,iCAAO;AAAA,4BACL;AAAA,4BAEA,EAAE,MAAM,KAAK;AAAA,0BACf;AAAA,wBACF,WAAW,KAAK,UAAU,WAAW;AACnC,iCAAO;AAAA,4BACL;AAAA,4BAEA,EAAE,MAAM,KAAK;AAAA,0BACf;AAAA,wBACF;AAAA,sBACF;AAAA,oBACF;AAAA,kBACF;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AACA,gBAAI,MAAM,SAAS,iBAAiB,GAAG;AACrC,kBAAI,WAAW,KAAK,KAAK,GAAG;AAC1B,uBAAO;AAAA,kBACL;AAAA,kBAEA,EAAE,MAAM,KAAK;AAAA,gBACf;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAEA,cAAI,MAAM,SAAS,KAAK,IAAI,GAAG;AAC7B,gBAAI,CAAC,KAAK,MAAM,SAAS,iBAAiB,GAAG;AAC3C,kBAAI,KAAK,MAAM,SAAS,gBAAgB,GAAG;AACzC,uBAAO;AAAA,kBACL;AAAA,kBAEA,EAAE,MAAM,KAAK;AAAA,gBACf;AAAA,cACF,WAAW,KAAK,MAAM,SAAS,MAAM,GAAG;AACtC,oBAAI,MAAM,OAAO,KAAK;AACtB,oBAAI,IAAI,MAAM,KAAK,OAAK,EAAE,SAAS,UAAU,EAAE,UAAU,MAAM,GAAG;AAChE,yBAAO;AAAA,oBACL;AAAA,oBACA,EAAE,MAAM,KAAK;AAAA,kBACf;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAEA,cAAI;AAEJ,cAAI,KAAK,SAAS,gBAAgB,KAAK,SAAS,uBAAuB;AAErE,mBAAO,KAAK,SAAS,WAAW,IAAI,MAAM,MAAM;AAAA,UAClD,WAAW,KAAK,SAAS,cAAc;AAErC,gBAAI,UAAU,KAAK,YAAY,IAAI;AACnC,gBAAI,YAAY,UAAU,KAAK,SAAS,QAAQ,YAAY,OAAO;AACjE,yBAAW,KAAK,SAAS,IAAI;AAC7B,kBAAI,YAAY,SAAS,UAAU;AACjC,yBAAS,QAAQ,IAAI;AAAA,cACvB;AAAA,YACF;AACA,gBAAI,KAAK,WAAW,MAAM,MAAM,MAAM,OAAO;AAC3C,yBAAW,KAAK,SAAS,IAAI;AAC7B,kBAAI,YAAY,SAAS,UAAU;AACjC,uBAAO,SAAS,QAAQ,MAAM,MAAM;AAAA,cACtC;AAAA,YACF;AAAA,UACF,WAAW,KAAK,SAAS,gBAAgB;AAEvC,gBAAI,KAAK,WAAW,MAAM,MAAM,MAAM,OAAO;AAC3C,yBAAW,KAAK,SAAS,IAAI;AAC7B,kBAAI,YAAY,SAAS,UAAU;AACjC,uBAAO,SAAS,QAAQ,MAAM,MAAM;AAAA,cACtC;AAAA,YACF;AAAA,UACF,WAAW,KAAK,SAAS,cAAc;AACrC,uBAAW,KAAK,SAAS,IAAI;AAC7B,gBACE,YACA,SAAS,YACT,KAAK,WAAW,MAAM,MAAM,MAAM,OAClC;AACA,qBAAO,SAAS,QAAQ,MAAM,MAAM;AAAA,YACtC;AAAA,UACF,OAAO;AAEL,uBAAW,KAAK,SAAS,IAAI,KAAK;AAClC,gBAAI,YAAY,SAAS,UAAU;AACjC,qBAAO,SAAS,QAAQ,MAAM,MAAM;AAAA,YACtC;AAAA,UACF;AAEA,iBAAO;AAAA,QACT,CAAC;AAID,YAAI,KAAK,WAAW,KAAK,MAAM,GAAG;AAChC,sBAAY,KAAK,KAAK,QAAQ;AAAA,QAChC;AAGA,eAAO,IAAI,UAAU,UAAQ;AAC3B,cAAI,KAAK,cAAc,MAAM,MAAM;AAAG;AAEtC,cAAI,aAAa,KAAK,SAAS,WAAW,KAAK,IAAI;AACnD,cAAI,OAAO,KAAK,SAAS,OAAO,OAAO,UAAU;AACjD,cAAI,MAAM,QAAQ,IAAI,GAAG;AACvB,qBAAS,SAAS,MAAM;AACtB,kBAAI,MAAM;AAAS,sBAAM,QAAQ,MAAM,MAAM;AAAA,YAC/C;AAAA,UACF;AACA,gBAAM,KAAK,KAAK,UAAU,IAAI;AAAA,QAChC,CAAC;AAAA,MACH;AAAA,MAKA,OAAO,KAAK,QAAQ;AAElB,YAAI,aAAa,KAAK,SAAS,OAAO;AAEtC,YAAI,YAAY,CAAC,MAAM,MAAM;AAC3B,cAAI,KAAK,SAAS,OAAO,IAAI,KAAK,SAAS;AACzC,gBAAI,CAAC,KAAK,SAAS,MAAM,MAAM,GAAG;AAChC,mBAAK,OAAO,YAAY,CAAC;AAAA,YAC3B;AAAA,UACF,WACE,KAAK,SAAS,WACd,KAAK,OAAO,SAAS,aAAa,KAClC,YACA;AACA,uBAAW,MAAM,IAAI;AAAA,UACvB;AAAA,QACF,CAAC;AAGD,iBAAS,WAAW,KAAK,SAAS,OAAO,WAAW;AAClD,cAAI,UAAU,CAAC,MAAM,MAAM;AACzB,gBAAI,QAAQ,MAAM,IAAI,GAAG;AACvB,kBAAI,CAAC,KAAK,SAAS,MAAM,MAAM,GAAG;AAChC,qBAAK,OAAO,YAAY,CAAC;AAAA,cAC3B;AAAA,YACF;AAAA,UACF,CAAC;AAAA,QACH;AAEA,eAAO,IAAI,UAAU,CAAC,MAAM,MAAM;AAChC,cAAI,KAAK,SAAS,MAAM,MAAM;AAAG;AAEjC,cAAI,OAAO,KAAK;AAChB,cAAI,aAAa,KAAK,SAAS,WAAW,KAAK,IAAI;AAGnD,cAAI,KAAK,SAAS,gBAAgB,KAAK,SAAS,uBAAuB;AACrE,iBAAK,SAAS,WAAW,OAAO,IAAI;AAAA,UACtC;AAGA,cACE,KAAK,SAAS,OAAO,KAAK,SAC1B,KAAK,SAAS,OAAO,KAAK,MAAM,QAChC;AACA,gBAAI,UAAU,KAAK,SAAS,MAAM,IAAI,EAAE,KAAK,WAAS;AACpD,qBAAO,KAAK,SAAS,UAAU,MAAM,IAAI,MAAM;AAAA,YACjD,CAAC;AAED,gBAAI,eAAe,aAAa;AAC9B,wBAAU;AAAA,YACZ;AAEA,gBAAI,KAAK,SAAS,sBAAsB;AACtC,kBAAI,QAAQ,EAAE,kBAAkB,MAAM,aAAa,KAAK;AACxD,kBAAI,CAAC,KAAK,OAAO,KAAK,OAAK,MAAM,EAAE,KAAK;AAAG;AAAA,YAC7C;AAEA,gBAAI,WAAW,CAAC,KAAK,cAAc,IAAI,GAAG;AACxC,kBAAI,KAAK,IAAI,QAAQ,EAAE,SAAS,IAAI,GAAG;AACrC,qBAAK,aAAa,IAAI;AAAA,cACxB;AACA,mBAAK,YAAY,CAAC;AAClB;AAAA,YACF;AAAA,UACF;AAGA,mBAAS,WAAW,KAAK,SAAS,OAAO,UAAU,UAAU,GAAG;AAC9D,gBAAI,CAAC,QAAQ;AAAO;AACpB,gBAAI,CAAC,QAAQ,MAAM,KAAK,KAAK;AAAG;AAEhC,yBAAa,QAAQ;AACrB,gBAAI,UAAU,KAAK,SAAS,MAAM,IAAI,EAAE,KAAK,WAAS;AACpD,qBAAO,MAAM,MAAM,SAAS,UAAU;AAAA,YACxC,CAAC;AAED,gBAAI,SAAS;AACX,mBAAK,YAAY,CAAC;AAClB;AAAA,YACF;AAAA,UACF;AAAA,QACF,CAAC;AAAA,MACH;AAAA,MAKA,cAAc,MAAM;AAClB,eAAO,KAAK,SAAS,6BAA6B,KAAK,UAAU;AAAA,MACnE;AAAA,MAKA,cAAc,MAAM,QAAQ;AAC1B,YAAI,KAAK,WAAW,MAAM,MAAM,MAAM,SAAS,KAAK,SAAS,QAAQ;AACnE,cAAI,KAAK,SAAS,aAAa,KAAK,MAAM,SAAS,MAAM,GAAG;AAC1D,mBAAO;AAAA,UACT;AAAA,QACF;AACA,YAAI,KAAK,SAAS,QAAQ,YAAY,SAAS,KAAK,SAAS,QAAQ;AACnE,cAAI,KAAK,SAAS,aAAa,KAAK,MAAM,SAAS,MAAM,GAAG;AAC1D,mBAAO;AAAA,UACT;AAAA,QACF;AACA,YAAI,KAAK,SAAS,UAAU,KAAK,SAAS,WAAW;AACnD,iBAAO;AAAA,QACT;AAEA,eAAO,KAAK,SAAS,MAAM,MAAM;AAAA,MACnC;AAAA,MAKA,aAAa,MAAM,QAAQ;AACzB,YAAI,KAAK,WAAW,MAAM,MAAM,MAAM,SAAS,KAAK,SAAS,QAAQ;AACnE,cAAI,KAAK,KAAK,SAAS,MAAM,KAAK,KAAK,SAAS,iBAAiB;AAC/D,mBAAO;AAAA,UACT;AAAA,QACF;AACA,YAAI,KAAK,SAAS,QAAQ,YAAY,SAAS,KAAK,SAAS,QAAQ;AACnE,cAAI,QAAQ,CAAC,SAAS,mBAAmB,eAAe,eAAe;AACvE,cAAI,KAAK,KAAK,SAAS,MAAM,KAAK,MAAM,SAAS,KAAK,IAAI,GAAG;AAC3D,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,eAAO,KAAK,SAAS,MAAM,MAAM;AAAA,MACnC;AAAA,MAKA,SAAS,MAAM,QAAQ;AACrB,YAAI,CAAC;AAAM,iBAAO;AAElB,YAAI,KAAK,0BAA0B,QAAW;AAC5C,iBAAO,KAAK;AAAA,QACd;AAEA,YAAI,KAAK,QAAQ;AACf,cAAI,IAAI,KAAK,KAAK;AAClB,cAAI,KAAK,EAAE,SAAS,aAAa,YAAY,KAAK,EAAE,IAAI,GAAG;AACzD,iBAAK,wBAAwB;AAC7B,iBAAK,4BAA4B;AACjC,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,YAAI,QAAQ;AACZ,YAAI,KAAK,OAAO;AACd,cAAI;AACJ,eAAK,KAAK,OAAK;AACb,gBAAI,EAAE,SAAS;AAAW;AAC1B,gBAAI,mCAAmC,KAAK,EAAE,IAAI,GAAG;AACnD,kBAAI,OAAO,WAAW,aAAa;AACjC,uBAAO;AAAA,kBACL;AAAA,kBAGA,EAAE,MAAM,EAAE;AAAA,gBACZ;AAAA,cACF,OAAO;AACL,yBAAS,MAAM,KAAK,EAAE,IAAI;AAAA,cAC5B;AAAA,YACF;AAAA,UACF,CAAC;AAED,cAAI,WAAW,QAAW;AACxB,oBAAQ,CAAC;AAAA,UACX;AAAA,QACF;AACA,YAAI,CAAC,KAAK,SAAS,UAAU,MAAM;AACjC,cAAI,KAAK,QAAQ;AACf,gBAAI,mBAAmB,KAAK,SAAS,KAAK,QAAQ,MAAM;AACxD,gBAAI,KAAK,OAAO,8BAA8B,MAAM;AAClD,sBAAQ;AAAA,YACV,OAAO;AACL,sBAAQ;AAAA,YACV;AAAA,UACF,OAAO;AACL,oBAAQ;AAAA,UACV;AAAA,QACF;AACA,aAAK,wBAAwB;AAC7B,eAAO;AAAA,MACT;AAAA,MAKA,aAAa,MAAM;AACjB,YAAI,OAAO;AACX,aAAK,SAAS,MAAM,IAAI,EAAE,GAAG,MAAM;AACjC,iBAAO;AACP,iBAAO;AAAA,QACT,CAAC;AACD,YAAI,MAAM;AACR;AAAA,QACF;AAEA,YAAI,QAAQ,KAAK,IAAI,QAAQ,EAAE,MAAM,IAAI;AACzC,YAAI,UAAU,MAAM,MAAM,SAAS,GAAG;AACtC,YAAI,OAAO;AAEX,aAAK,SAAS,MAAM,IAAI,EAAE,KAAK,WAAS;AACtC,kBAAQ,MAAM,IAAI,QAAQ,EAAE,MAAM,IAAI;AACtC,cAAI,OAAO,MAAM,SAAS;AAE1B,cAAI,MAAM,MAAM,SAAS,SAAS;AAChC,gBAAI,SAAS,OAAO;AAClB,qBAAO,MAAM,MAAM,SAAS;AAAA,YAC9B;AAEA,kBAAM,QAAQ,MAAM,MAAM,MAAM,GAAG,CAAC,IAAI;AACxC,kBAAM,KAAK,SAAS,MAAM,KAAK,IAAI;AAAA,UACrC;AAAA,QACF,CAAC;AAAA,MACH;AAAA,MAKA,YAAY,MAAM;AAChB,iBAAS,KAAK,KAAK,OAAO,OAAO;AAC/B,cAAI,EAAE,SAAS,WAAW;AACxB;AAAA,UACF;AAEA,cAAI,EAAE,MAAM,SAAS,MAAM,GAAG;AAC5B,mBAAO;AAAA,UACT;AAEA,cAAI,EAAE,MAAM,SAAS,MAAM,GAAG;AAC5B,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,MAKA,WAAW,MAAM,QAAQ;AACvB,YAAI,CAAC;AAAM,iBAAO;AAElB,YAAI,KAAK,4BAA4B,QAAW;AAC9C,iBAAO,KAAK;AAAA,QACd;AAEA,YAAI,QAAQ;AACZ,YAAI,KAAK,OAAO;AACd,cAAI;AACJ,eAAK,KAAK,OAAK;AACb,gBAAI,EAAE,SAAS;AAAW;AAC1B,gBAAI,WAAW,KAAK,EAAE,IAAI,GAAG;AAC3B,kBAAI,eAAe,iBAAiB,KAAK,EAAE,IAAI;AAC/C,kBAAI,cAAc,gBAAgB,KAAK,EAAE,IAAI;AAC7C,kBAAI,OAAO,WAAW,aAAa;AACjC,uBAAO;AAAA,kBACL;AAAA,kBAGA,EAAE,MAAM,EAAE;AAAA,gBACZ;AAAA,cACF,WAAW,cAAc;AACvB,yBAAS;AAAA,cACX,WAAW,aAAa;AACtB,yBAAS;AAAA,cACX,OAAO;AACL,yBAAS,MAAM,KAAK,EAAE,IAAI;AAAA,cAC5B;AAAA,YACF;AAAA,UACF,CAAC;AAED,cAAI,WAAW,QAAW;AACxB,oBAAQ;AAAA,UACV;AAAA,QACF;AAEA,YAAI,KAAK,SAAS,YAAY,KAAK,SAAS,YAAY;AACtD,cAAI,SAAS,KAAK;AAClB,cAAI,OAAO,SAAS,MAAM,KAAK,OAAO,SAAS,MAAM,GAAG;AACtD,oBAAQ;AAAA,UACV;AAAA,QACF;AAEA,YAAI,CAAC,KAAK,SAAS,UAAU,MAAM;AACjC,cAAI,KAAK,QAAQ;AACf,gBAAI,eAAe,KAAK,WAAW,KAAK,QAAQ,MAAM;AACtD,gBAAI,KAAK,OAAO,8BAA8B,MAAM;AAClD,sBAAQ;AAAA,YACV,OAAO;AACL,sBAAQ;AAAA,YACV;AAAA,UACF,WAAW,OAAO,KAAK,SAAS,QAAQ,SAAS,aAAa;AAC5D,oBAAQ,KAAK,SAAS,QAAQ;AAAA,UAChC,WAAW,OAAO,QAAQ,IAAI,sBAAsB,aAAa;AAC/D,gBAAI,QAAQ,IAAI,sBAAsB,aAAa;AACjD,sBAAQ;AAAA,YACV,OAAO;AACL,sBAAQ;AAAA,YACV;AAAA,UACF,OAAO;AACL,oBAAQ;AAAA,UACV;AAAA,QACF;AAEA,aAAK,0BAA0B;AAC/B,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC7sBjB;AAAA;AAAA,aAAS,KAAK,OAAO;AACnB,aAAO,MAAM,MAAM,SAAS;AAAA,IAC9B;AAEA,QAAI,WAAW;AAAA,MAIb,MAAM,KAAK;AACT,YAAI,UAAU,CAAC,EAAE;AACjB,YAAI,QAAQ,CAAC,OAAO;AAEpB,iBAAS,OAAO,KAAK;AACnB,cAAI,QAAQ,KAAK;AACf,sBAAU,CAAC,EAAE;AACb,iBAAK,KAAK,EAAE,KAAK,OAAO;AACxB,kBAAM,KAAK,OAAO;AAClB;AAAA,UACF;AAEA,cAAI,QAAQ,KAAK;AACf,kBAAM,IAAI;AACV,sBAAU,KAAK,KAAK;AACpB,oBAAQ,KAAK,EAAE;AACf;AAAA,UACF;AAEA,kBAAQ,QAAQ,SAAS,MAAM;AAAA,QACjC;AAEA,eAAO,MAAM;AAAA,MACf;AAAA,MAKA,UAAU,KAAK;AACb,YAAI,SAAS;AACb,iBAAS,KAAK,KAAK;AACjB,cAAI,OAAO,MAAM,UAAU;AACzB,sBAAU,IAAI,SAAS,UAAU,CAAC;AAClC;AAAA,UACF;AAEA,oBAAU;AAAA,QACZ;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;AClDjB;AAAA;AAAA,QAAI,iBAAiB;AACrB,QAAI,EAAE,QAAQ,IAAI;AAClB,QAAI,EAAE,MAAM,IAAI;AAEhB,QAAI,WAAW;AACf,QAAI,WAAW;AACf,QAAI,QAAQ;AACZ,QAAI,QAAQ;AAEZ,QAAI,OAAO,QAAQ,cAAc;AAEjC,QAAI,YAAY,CAAC;AACjB,aAAS,WAAW,KAAK,OAAO;AAC9B,UAAI,WAAW,KAAK,MAAM;AAC1B,eAAS,WAAW,UAAU;AAC5B,YAAI,UAAU,SAAS;AACvB,YAAI,IAAI,KAAK,OAAO,GAAG;AACrB,oBAAU,KAAK,UAAU,MAAM,OAAO;AAAA,QACxC;AAAA,MACF;AAAA,IACF;AAEA,QAAM,WAAN,MAAe;AAAA,MACb,YAAY,UAAU,KAAK;AACzB,aAAK,WAAW;AAChB,aAAK,MAAM;AAAA,MACb;AAAA,MAKA,WAAW;AACT,YAAI,KAAK,eAAe;AACtB,iBAAO,KAAK;AAAA,QACd;AAEA,YAAI,WAAW,KAAK,IAAI,SAAS,SAAS,OAAO,OAAK;AACpD,iBAAO,UAAU,SAAS,CAAC;AAAA,QAC7B,CAAC;AAED,YAAI,WAAW,IAAI;AAAA,UACjB,KAAK,IAAI,SAAS;AAAA,UAClB;AAAA,UACA,KAAK,IAAI;AAAA,QACX;AACA,aAAK,gBAAgB,IAAI,KAAK;AAAA,UAC5B,KAAK,IAAI;AAAA,UACT;AAAA,UACA,KAAK,IAAI;AAAA,QACX;AACA,eAAO,KAAK;AAAA,MACd;AAAA,MAKA,MAAM,KAAK;AACT,YAAI,QAAQ,IAAI,MAAM,GAAG;AACzB,YAAI,OAAO,MAAM;AACjB,YAAI,QAAQ,MAAM;AAClB,YAAI,CAAC;AAAO,kBAAQ;AACpB,eAAO,CAAC,KAAK,KAAK,GAAG,MAAM,KAAK,CAAC;AAAA,MACnC;AAAA,MAKA,QAAQ,KAAK;AACX,YAAI,CAAC,MAAM,KAAK,IAAI,KAAK,MAAM,GAAG;AAClC,YAAI,OAAO,MAAM,KAAK,EAAE;AACxB,aAAK,OAAO,EAAE,MAAM,OAAO,MAAM,EAAE,QAAQ,GAAG,EAAE,CAAC;AACjD,eAAO;AAAA,MACT;AAAA,MAKA,SAAS,KAAK;AACZ,YAAI,OAAO,KAAK,QAAQ,GAAG;AAC3B,YAAI,KAAK,SAAS,KAAK,KAAK,GAAG;AAC7B,iBAAO,KAAK;AAAA,QACd;AAEA,YAAI,SAAS,EAAE,MAAM,MAAM,KAAK;AAEhC,YAAI,WAAW,KAAK,SAAS,EAAE,IAAI,KAAK,MAAM;AAC9C,oBAAY,SAAS,WAAW,SAAS,QAAQ,KAAK,OAAO,MAAM;AAEnE,iBAAS,QAAQ,KAAK,OAAO;AAC3B,mBAAS,SAAS,KAAK,SAAS,EAAE,OAAO,OAAO,KAAK,MAAM,IAAI,GAAG;AAChE,kBAAM,QAAQ,IAAI;AAAA,UACpB;AACA,gBAAM,KAAK,KAAK,KAAK,IAAI;AAAA,QAC3B;AAEA,eAAO,KAAK;AAAA,MACd;AAAA,MAKA,MAAM,MAAM;AACV,eAAO,OAAO,SAAS,YAAY,UAAU,KAAK,IAAI;AAAA,MACxD;AAAA,MAKA,KAAK,MAAM;AACT,eAAO,OAAO,SAAS,YAAY,YAAY,KAAK,IAAI;AAAA,MAC1D;AAAA,MAKA,OAAO,MAAM;AACX,eACE,OAAO,SAAS,YAChB,KAAK,WAAW,KAChB,OAAO,KAAK,OAAO;AAAA,MAEvB;AAAA,MAKA,OAAO,KAAK,YAAY;AACtB,YAAI,QAAQ,IAAI,OAAO,YAAY,MAAM,aAAa,UAAU,IAAI;AACpE,eAAO,CAAC,MAAM,KAAK,GAAG;AAAA,MACxB;AAAA,MAKA,SAAS,KAAK,KAAK;AACjB,YAAI,CAAC,MAAM,KAAK,IAAI,KAAK,MAAM,GAAG;AAClC,YAAI,aAAa,KAAK,IAAI,WAAW,IAAI;AAEzC,YAAI,UAAU,KAAK,IAAI,QAAQ;AAE/B,YACE,QAAQ,OAAO,SACf,QAAQ,OAAO,MAAM,UACrB,CAAC,KAAK,OAAO,KAAK,UAAU,GAC5B;AACA,iBAAO;AAAA,QACT;AAEA,iBAAS,WAAW,QAAQ,OAAO,UAAU,UAAU,GAAG;AACxD,cAAI,QAAQ,MAAM,KAAK,GAAG;AACxB,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,MAKA,OAAO,OAAO,KAAK;AACjB,YAAI,IAAI;AACR,eAAO,IAAI,MAAM,QAAQ;AACvB,cACE,CAAC,KAAK,MAAM,MAAM,IAAI,EAAE,KACxB,KAAK,OAAO,MAAM,EAAE,KACpB,KAAK,KAAK,MAAM,IAAI,EAAE,GACtB;AACA,gBAAI,KAAK,SAAS,MAAM,GAAG,IAAI,GAAG,GAAG;AACnC,oBAAM,OAAO,GAAG,CAAC;AACjB;AAAA,YACF;AAEA,iBAAK;AACL;AAAA,UACF;AAEA,cAAI,OAAO,MAAM,OAAO,UAAU;AAChC,kBAAM,KAAK,KAAK,OAAO,MAAM,IAAI,GAAG;AAAA,UACtC;AAEA,eAAK;AAAA,QACP;AACA,eAAO;AAAA,MACT;AAAA,MAKA,cAAc,OAAO;AACnB,eAAO,MAAM,IAAI,OAAK;AACpB,cAAI,OAAO,MAAM,UAAU;AACzB,mBAAO;AAAA,UACT;AAEA,cAAI,EAAE,WAAW,KAAK,OAAO,EAAE,OAAO,UAAU;AAC9C,mBAAO,KAAK,cAAc,EAAE,EAAE;AAAA,UAChC;AAEA,iBAAO,KAAK,cAAc,CAAC;AAAA,QAC7B,CAAC;AAAA,MACH;AAAA,MAKA,QAAQ,UAAU;AAChB,YAAI,SAAS,CAAC,EAAE;AAChB,iBAAS,KAAK,UAAU;AACtB,iBAAO,KAAK,CAAC,GAAG,EAAE,SAAS,EAAE,OAAO,CAAC;AACrC,iBAAO,KAAK,MAAM;AAAA,QACpB;AACA,eAAO,OAAO,SAAS,KAAK;AAC5B,eAAO;AAAA,MACT;AAAA,MAKA,UAAU,OAAO;AACf,YAAI,OAAO,UAAU,UAAU;AAC7B,iBAAO;AAAA,QACT;AAEA,gBAAQ,MAAM,OAAO,OAAK,MAAM,EAAE;AAElC,YAAI,OAAO,MAAM,OAAO,UAAU;AAChC,cAAI,YAAY,MAAM,GAAG,KAAK;AAE9B,cACE,UAAU,SAAS,GAAG,KACtB,cAAc,cACd,cAAc,gBACd;AACA,mBAAO,CAAC,SAAS,UAAU,KAAK,CAAC;AAAA,UACnC;AAAA,QACF;AACA,eAAO,MAAM,IAAI,OAAK,KAAK,UAAU,CAAC,CAAC;AAAA,MACzC;AAAA,MAKA,IAAI,OAAO,KAAK;AACd,eAAO,MAAM,IAAI,OAAK;AACpB,cAAI,KAAK,OAAO,CAAC,GAAG;AAClB,gBAAI,WAAW,KAAK,SAAS,EAAE,EAAE;AACjC,gBAAI,SAAS,SAAS,GAAG;AACvB,qBAAO,KAAK,QAAQ,QAAQ;AAAA,YAC9B;AAEA,mBAAO;AAAA,UACT;AAEA,cAAI,OAAO,MAAM,UAAU;AACzB,mBAAO,KAAK,IAAI,GAAG,GAAG;AAAA,UACxB;AAEA,iBAAO;AAAA,QACT,CAAC;AAAA,MACH;AAAA,MAKA,QAAQ,MAAM;AACZ,YAAI,MAAM,SAAS,MAAM,KAAK,MAAM;AACpC,cAAM,KAAK,UAAU,GAAG;AACxB,cAAM,KAAK,OAAO,KAAK,KAAK,MAAM;AAClC,cAAM,KAAK,IAAI,KAAK,KAAK,MAAM;AAC/B,cAAM,KAAK,cAAc,GAAG;AAC5B,aAAK,SAAS,SAAS,UAAU,GAAG;AAAA,MACtC;AAAA,MAKA,SAAS,MAAM;AACb,YAAI,CAAC,KAAK,IAAI,QAAQ,MAAM;AAC1B,cAAI,KAAK,SAAS,aAAa,KAAK,MAAM,SAAS,MAAM,GAAG;AAC1D,mBAAO;AAAA,UACT;AACA,cAAI,KAAK,KAAK,SAAS,MAAM,KAAK,KAAK,SAAS,iBAAiB;AAC/D,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,YAAI,KAAK,IAAI,QAAQ,YAAY,OAAO;AACtC,cAAI,KAAK,SAAS,aAAa,KAAK,MAAM,SAAS,MAAM,GAAG;AAC1D,mBAAO;AAAA,UACT;AACA,cAAI,QAAQ,CAAC,SAAS,mBAAmB,eAAe,eAAe;AACvE,cAAI,KAAK,KAAK,SAAS,MAAM,KAAK,MAAM,SAAS,KAAK,IAAI,GAAG;AAC3D,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC7SjB;AAAA;AAAA,QAAM,cAAN,MAAkB;AAAA,MAChB,YAAY,UAAU,QAAQ;AAC5B,aAAK,SAAS;AACd,aAAK,WAAW,SAAS,SAAS,KAAK,MAAM;AAC7C,aAAK,SAAS,SAAS,OAAO,KAAK,MAAM;AAEzC,aAAK,YAAY,SACd,SAAS,EACT,IAAI,OAAK,CAAC,SAAS,SAAS,CAAC,GAAG,SAAS,OAAO,CAAC,CAAC,CAAC;AAEtD,aAAK,aAAa,SAAS;AAC3B,aAAK,aAAa,SAAS,OAAO;AAAA,MACpC;AAAA,MAKA,OAAO,MAAM;AACX,YAAI,QAAQ,KAAK,OAAO,MAAM,IAAI,IAAI;AACtC,YAAI,QAAQ,KAAK,OAAO;AAExB,eAAO,QAAQ,MAAM,QAAQ;AAC3B,cAAI,SAAS,MAAM,OAAO;AAC1B,cAAI,CAAC,QAAQ;AACX,mBAAO;AAAA,UACT;AAEA,cAAI,OAAO,SAAS,KAAK,UAAU,KAAK,OAAO,MAAM,KAAK,UAAU,GAAG;AACrE,mBAAO;AAAA,UACT;AAEA,cAAI,OAAO;AACX,mBAAS,CAAC,QAAQ,MAAM,KAAK,KAAK,WAAW;AAC3C,gBAAI,OAAO,SAAS,MAAM,KAAK,OAAO,MAAM,MAAM,GAAG;AACnD,qBAAO;AACP;AAAA,YACF;AAAA,UACF;AAEA,cAAI,CAAC,MAAM;AACT,mBAAO;AAAA,UACT;AAEA,mBAAS;AAAA,QACX;AAEA,eAAO;AAAA,MACT;AAAA,MAKA,MAAM,MAAM;AACV,YAAI,CAAC,KAAK,SAAS,SAAS,KAAK,QAAQ,GAAG;AAC1C,iBAAO;AAAA,QACT;AACA,YAAI,CAAC,KAAK,SAAS,MAAM,KAAK,MAAM,GAAG;AACrC,iBAAO;AAAA,QACT;AACA,YAAI,KAAK,OAAO,IAAI,GAAG;AACrB,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;AClEjB;AAAA;AAAA,QAAI,EAAE,KAAK,IAAI;AAEf,QAAI,cAAc;AAClB,QAAI,WAAW;AACf,QAAI,WAAW;AACf,QAAI,QAAQ;AAEZ,QAAM,WAAN,cAAuB,SAAS;AAAA,MAC9B,YAAY,MAAM,UAAU,KAAK;AAC/B,cAAM,MAAM,UAAU,GAAG;AACzB,aAAK,cAAc,oBAAI,IAAI;AAAA,MAC7B;AAAA,MAKA,MAAM,MAAM;AACV,YAAI,KAAK,SAAS,SAAS,KAAK,IAAI,GAAG;AACrC,iBAAO,CAAC,CAAC,KAAK,SAAS,MAAM,KAAK,OAAO,CAAC;AAAA,QAC5C;AAEA,eAAO;AAAA,MACT;AAAA,MAKA,SAAS,QAAQ;AACf,eAAO,KAAK,KAAK,QAAQ,UAAU,KAAK,QAAQ;AAAA,MAClD;AAAA,MAKA,OAAO,QAAQ;AACb,YAAI,CAAC,KAAK,YAAY,IAAI,MAAM,GAAG;AACjC,cAAI,OAAO,SAAS,KAAK,SAAS,MAAM,IAAI,KAAK;AACjD,eAAK,YAAY;AAAA,YACf;AAAA,YACA,IAAI,OAAO,cAAc,MAAM,aAAa,IAAI,KAAK,IAAI;AAAA,UAC3D;AAAA,QACF;AAEA,eAAO,KAAK,YAAY,IAAI,MAAM;AAAA,MACpC;AAAA,MAKA,WAAW;AACT,eAAO,SAAS,SAAS;AAAA,MAC3B;AAAA,MAKA,UAAU,MAAM;AACd,YAAI,KAAK,wBAAwB;AAC/B,cAAI,KAAK,uBAAuB,KAAK,OAAO;AAC1C,mBAAO,KAAK;AAAA,UACd;AAAA,QACF,OAAO;AACL,eAAK,yBAAyB,CAAC;AAAA,QACjC;AAEA,YAAI,YAAY,CAAC;AACjB,YAAI,KAAK,SAAS,SAAS,GAAG,GAAG;AAC/B,cAAI,YAAY,KAAK,MAAM,KAAK,QAAQ;AACxC,cAAI,YAAY,UAAU,OAAO,QAAM,GAAG,SAAS,KAAK,IAAI,CAAC;AAE7D,mBAAS,UAAU,KAAK,SAAS,GAAG;AAClC,sBAAU,UAAU,UACjB,IAAI,QAAM,KAAK,QAAQ,IAAI,MAAM,CAAC,EAClC,KAAK,IAAI;AAAA,UACd;AAAA,QACF,OAAO;AACL,mBAAS,UAAU,KAAK,SAAS,GAAG;AAClC,sBAAU,UAAU,KAAK,QAAQ,KAAK,UAAU,MAAM;AAAA,UACxD;AAAA,QACF;AAEA,aAAK,uBAAuB,KAAK,QAAQ;AACzC,eAAO,KAAK;AAAA,MACd;AAAA,MAKA,QAAQ,MAAM,WAAW,QAAQ;AAC/B,YAAI,QAAQ,KAAK,OAAO,MAAM,IAAI,IAAI;AAEtC,eAAO,SAAS,GAAG;AACjB,cAAI,SAAS,KAAK,OAAO,MAAM;AAE/B,cAAI,OAAO,SAAS,QAAQ;AAC1B,mBAAO;AAAA,UACT;AAEA,cAAI,OAAO;AACX,mBAAS,OAAO,UAAU,KAAK,OAAO;AACpC,gBAAI,WAAW,UAAU,KAAK,MAAM;AACpC,gBAAI,OAAO,aAAa,UAAU;AAChC,kBAAI,WAAW,KAAK;AAClB,uBAAO;AAAA,cACT,OAAO;AACL,uBAAO;AACP;AAAA,cACF;AAAA,YACF;AAAA,UACF;AACA,cAAI,CAAC,MAAM;AACT,mBAAO;AAAA,UACT;AAEA,mBAAS;AAAA,QACX;AAEA,eAAO;AAAA,MACT;AAAA,MAKA,QAAQ,UAAU,QAAQ;AACxB,eAAO,SAAS,QAAQ,KAAK,OAAO,GAAG,KAAK,KAAK,SAAS,MAAM,GAAG;AAAA,MACrE;AAAA,MAKA,IAAI,MAAM,QAAQ;AAChB,YAAI,YAAY,KAAK,UAAU,IAAI;AAEnC,YAAI,KAAK,QAAQ,MAAM,WAAW,MAAM,GAAG;AACzC;AAAA,QACF;AAEA,YAAI,SAAS,KAAK,MAAM,MAAM,EAAE,UAAU,UAAU,KAAK,MAAM,QAAQ,CAAC;AACxE,aAAK,OAAO,aAAa,MAAM,MAAM;AAAA,MACvC;AAAA,MAKA,IAAI,QAAQ;AACV,eAAO,IAAI,YAAY,MAAM,MAAM;AAAA,MACrC;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACrJjB;AAAA;AAAA,QAAI,WAAW;AAEf,QAAM,SAAN,cAAqB,SAAS;AAAA,MAI5B,IAAI,MAAM,QAAQ;AAChB,YAAI,WAAW,SAAS,KAAK;AAE7B,YAAI,UAAU,KAAK,OAAO;AAAA,UACxB,OAAK,EAAE,SAAS,YAAY,EAAE,WAAW,KAAK;AAAA,QAChD;AACA,YAAI,SAAS;AACX,iBAAO;AAAA,QACT;AAEA,YAAI,SAAS,KAAK,MAAM,MAAM,EAAE,MAAM,SAAS,CAAC;AAChD,eAAO,KAAK,OAAO,aAAa,MAAM,MAAM;AAAA,MAC9C;AAAA,MAKA,QAAQ,MAAM;AACZ,YAAI,SAAS,KAAK,aAAa,IAAI;AAEnC,iBAAS,UAAU,KAAK,UAAU;AAChC,cAAI,CAAC,UAAU,WAAW,QAAQ;AAChC,iBAAK,IAAI,MAAM,MAAM;AAAA,UACvB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;AClCjB,IAAAA,sBAAA;AAAA;AAAA,QAAI,WAAW;AAEf,QAAM,aAAN,cAAyB,SAAS;AAAA,MAIhC,SAAS,QAAQ;AACf,YAAI,WAAW,YAAY;AACzB,iBAAO;AAAA,QACT;AACA,YAAI,WAAW,SAAS;AACtB,iBAAO;AAAA,QACT;AACA,eAAO,IAAI;AAAA,MACb;AAAA,IACF;AAEA,eAAW,QAAQ,CAAC,aAAa;AAEjC,WAAO,UAAU;AAAA;AAAA;;;ACnBjB;AAAA;AAAA,QAAI,WAAW;AAEf,QAAM,cAAN,cAA0B,SAAS;AAAA,MAIjC,WAAW;AACT,eAAO,MAAM,SAAS,EAAE,OAAO,CAAC,aAAa,UAAU,CAAC;AAAA,MAC1D;AAAA,MAKA,SAAS,QAAQ;AACf,YAAI,WAAW,YAAY;AACzB,iBAAO;AAAA,QACT;AACA,YAAI,WAAW,QAAQ;AACrB,iBAAO;AAAA,QACT;AACA,YAAI,WAAW,YAAY;AACzB,iBAAO;AAAA,QACT;AACA,YAAI,WAAW,aAAa;AAC1B,iBAAO;AAAA,QACT;AACA,eAAO,KAAK;AAAA,MACd;AAAA,IACF;AAEA,gBAAY,QAAQ,CAAC,eAAe;AAEpC,WAAO,UAAU;AAAA;AAAA;;;AChCjB;AAAA;AAAA,QAAI,WAAW;AAEf,QAAM,mBAAN,cAA+B,SAAS;AAAA,MAItC,SAAS,QAAQ;AACf,YAAI,WAAW,QAAQ;AACrB,iBAAO;AAAA,QACT;AACA,eAAO,IAAI;AAAA,MACb;AAAA,IACF;AAEA,qBAAiB,QAAQ,CAAC,oBAAoB;AAE9C,WAAO,UAAU;AAAA;AAAA;;;AChBjB;AAAA;AAAA,QAAI,WAAW;AACf,QAAI,QAAQ;AAEZ,QAAM,qBAAN,cAAiC,SAAS;AAAA,MACxC,YAAY,MAAM,UAAU,KAAK;AAC/B,cAAM,MAAM,UAAU,GAAG;AAEzB,YAAI,KAAK,UAAU;AACjB,eAAK,WAAW,MAAM,KAAK,KAAK,SAAS,IAAI,MAAM,UAAU,CAAC;AAAA,QAChE;AAAA,MACF;AAAA,MAKA,SAAS,QAAQ;AACf,YAAI,WAAW,YAAY;AACzB,iBAAO;AAAA,QACT;AACA,eAAO,KAAK;AAAA,MACd;AAAA,IACF;AAEA,uBAAmB,QAAQ,CAAC,wBAAwB;AAEpD,WAAO,UAAU;AAAA;AAAA;;;ACzBjB;AAAA;AAGA,WAAO,UAAU,SAAU,QAAQ;AACjC,UAAI;AACJ,UAAI,WAAW,mBAAmB,WAAW,SAAS;AACpD,eAAO;AAAA,MACT,WAAW,WAAW,QAAQ;AAC5B,eAAO;AAAA,MACT,WAAW,WAAW,YAAY;AAChC,eAAO;AAAA,MACT;AAEA,UAAI,WAAW,iBAAiB;AAC9B,iBAAS;AAAA,MACX;AAEA,aAAO,CAAC,MAAM,MAAM;AAAA,IACtB;AAAA;AAAA;;;AClBA;AAAA;AAAA,QAAI,OAAO,kBAAmB;AAE9B,QAAI,WAAW;AACf,QAAI,cAAc;AAElB,QAAM,OAAN,cAAmB,YAAY;AAAA,MAI7B,SAAS,MAAM,QAAQ;AACrB,YAAI;AACH,SAAC,MAAM,MAAM,IAAI,SAAS,MAAM;AACjC,YAAI,SAAS,MAAM;AACjB,iBAAO,SAAS;AAAA,QAClB;AACA,eAAO,MAAM,SAAS,MAAM,MAAM;AAAA,MACpC;AAAA,MAKA,YAAY;AACV,eAAO;AAAA,MACT;AAAA,MAMA,IAAI,MAAM,QAAQ;AAChB,YAAI,OAAO,SAAS,MAAM,EAAE;AAC5B,YAAI,SAAS,MAAM;AACjB,eAAK,QAAQ,KAAK,MAAM,KAAK,KAAK,EAAE;AACpC,eAAK,QAAQ,KAAK,UAAU,KAAK,UAAU,KAAK;AAChD,iBAAO,MAAM,IAAI,MAAM,MAAM;AAAA,QAC/B;AACA,YAAI,SAAS,MAAM;AACjB,cAAI,aAAa,KAAK,MAAM,KAAK,KAAK;AACtC,cAAI,WAAW,WAAW,KAAK,WAAW,OAAO,KAAK;AACpD,iBAAK,QAAQ,WAAW,MAAM,GAAG,CAAC,EAAE,OAAO,KAAK,EAAE,KAAK,GAAG;AAAA,UAC5D;AAAA,QACF;AACA,eAAO,MAAM,IAAI,MAAM,MAAM;AAAA,MAC/B;AAAA,IACF;AAEA,SAAK,QAAQ,CAAC,QAAQ,UAAU;AAEhC,SAAK,YAAY;AAAA,MACf,MAAM;AAAA,MACN,MAAM;AAAA,IACR;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACrDjB;AAAA;AAAA,QAAI,WAAW;AACf,QAAI,cAAc;AAElB,QAAM,QAAN,cAAoB,YAAY;AAAA,MAI9B,SAAS,MAAM,QAAQ;AACrB,YAAI;AACH,SAAC,MAAM,MAAM,IAAI,SAAS,MAAM;AACjC,YAAI,SAAS,MAAM;AACjB,iBAAO,SAAS;AAAA,QAClB;AACA,YAAI,SAAS,MAAM;AACjB,iBAAO,SAAS;AAAA,QAClB;AACA,eAAO,MAAM,SAAS,MAAM,MAAM;AAAA,MACpC;AAAA,MAKA,YAAY;AACV,eAAO;AAAA,MACT;AAAA,MAKA,IAAI,MAAM,QAAQ;AAChB,YAAI,OAAO,SAAS,MAAM,EAAE;AAC5B,YAAI,SAAS,QAAQ,KAAK,KAAK,KAAK,KAAK,GAAG;AAC1C,eAAK,SAAS,SAAS,KAAK,KAAK,IAAI,GAAG,SAAS;AACjD,iBAAO,MAAM,IAAI,MAAM,MAAM;AAAA,QAC/B;AACA,eAAO,MAAM,IAAI,MAAM,MAAM;AAAA,MAC/B;AAAA,IACF;AAEA,UAAM,QAAQ,CAAC,SAAS,cAAc,mBAAmB;AAEzD,WAAO,UAAU;AAAA;AAAA;;;ACzCjB;AAAA;AAAA,QAAI,cAAc;AAElB,QAAM,SAAN,cAAqB,YAAY;AAAA,MAI/B,MAAM,MAAM;AACV,YAAI,IAAI,KAAK;AACb,eACE,CAAC,EAAE,YAAY,EAAE,SAAS,QAAQ,KAClC,CAAC,EAAE,SAAS,4BAA4B,KACxC,CAAC,EAAE,SAAS,oBAAoB;AAAA,MAEpC;AAAA,IACF;AAEA,WAAO,QAAQ,CAAC,QAAQ;AAExB,WAAO,UAAU;AAAA;AAAA;;;AClBjB;AAAA;AAAA,QAAI,cAAc;AAClB,QAAI,EAAE,aAAa,IAAI;AAEvB,QAAM,UAAN,cAAsB,YAAY;AAAA,MAIhC,OAAO,MAAM,QAAQ,UAAU,QAAQ;AACrC,YAAI,WAAW;AAAQ,iBAAO,MAAM,OAAO,MAAM,QAAQ,QAAQ;AAEjE,YAAI,aAAa,KAAK,MAAM,IAAI;AAEhC,YAAI,YAAY,KAAK,KAAK,QAAQ,QAAQ,OAAO;AACjD,YAAI,WAAW,SAAS,KAAK,KAAK,QAAQ,QAAQ,MAAM;AAExD,YAAI,KAAK,OAAO,KAAK,OAAK,EAAE,SAAS,QAAQ,GAAG;AAC9C,iBAAO;AAAA,QACT;AAEA,mBAAW,OAAO;AAElB,YAAI,KAAK,MAAM,SAAS,MAAM,GAAG;AAC/B,qBAAW,QAAQ,KAAK,MAAM,QAAQ,WAAW,EAAE;AAAA,QACrD,OAAO;AACL,cAAI;AACJ,eAAK,OAAO,UAAU,WAAW,OAAK;AACpC,wBAAY;AAAA,UACd,CAAC;AACD,cAAI,WAAW;AACb,gBAAI,aAAa,UAAU,KAAK,GAAG;AACjC,kBAAI,QAAQ,OAAO,KAAK,KAAK,IAAI,OAAO,UAAU,KAAK,IAAI;AAC3D,yBAAW,QAAQ;AAAA,YACrB,OAAO;AACL,qBAAO;AAAA,YACT;AAAA,UACF,OAAO;AACL,iBAAK;AAAA,cACH;AAAA,cACA,kBAAkB,KAAK,SAAS;AAAA,YAClC;AAAA,UACF;AAAA,QACF;AAEA,aAAK,YAAY,UAAU;AAE3B,eAAO;AAAA,MACT;AAAA,IACF;AAEA,YAAQ,QAAQ,CAAC,gBAAgB,iBAAiB;AAElD,WAAO,UAAU;AAAA;AAAA;;;ACnDjB;AAAA;AAAA,QAAI,cAAc;AAElB,QAAM,YAAN,cAAwB,YAAY;AAAA,MAIlC,MAAM,MAAM;AACV,eAAO,CAAC,KAAK,MAAM,MAAM,KAAK,EAAE,KAAK,OAAK;AACxC,cAAI,QAAQ,EAAE,YAAY;AAC1B,iBAAO,UAAU,aAAa,UAAU;AAAA,QAC1C,CAAC;AAAA,MACH;AAAA,IACF;AAEA,cAAU,QAAQ,CAAC,aAAa,qBAAqB;AAErD,WAAO,UAAU;AAAA;AAAA;;;AChBjB;AAAA;AAAA,QAAI,WAAW;AACf,QAAI,cAAc;AAElB,QAAM,WAAN,cAAuB,YAAY;AAAA,MAIjC,OAAO,MAAM,QAAQ,UAAU;AAC7B,YAAI;AACH,SAAC,MAAM,MAAM,IAAI,SAAS,MAAM;AACjC,YAAI,SAAS,MAAM;AACjB,iBAAO,MAAM,OAAO,MAAM,QAAQ,QAAQ;AAAA,QAC5C;AACA,YAAI,SAAS,KAAK,MACf,MAAM,KAAK,EACX,OAAO,OAAK,MAAM,UAAU,MAAM,YAAY,cAAc;AAC/D,YAAI,OAAO,WAAW,GAAG;AACvB,iBAAO;AAAA,QACT;AAEA,YAAI,UAAU,KAAK,OAAO;AAAA,UACxB,OACE,EAAE,SAAS,SAAS,gBAAgB,EAAE,SAAS,SAAS;AAAA,QAC5D;AACA,YAAI,SAAS;AACX,iBAAO;AAAA,QACT;AAEA,YAAI,QAAQ,OAAO;AACnB,YAAI,SAAS,MAAM,SAAS,KAAK,IAAI,eAAe;AACpD,YAAI,MAAM,MAAM,SAAS,SAAS,IAAI,YAAY;AAElD,YAAI,SAAS,KAAK,MAAM,IAAI;AAC5B,eAAO,OAAO,SAAS;AACvB,eAAO,QAAQ;AACf,YAAI,KAAK,YAAY,IAAI,GAAG;AAC1B,iBAAO,KAAK,SAAS,KAAK,WAAW,UAAU,MAAM,MAAM;AAAA,QAC7D;AACA,aAAK,OAAO,aAAa,MAAM,MAAM;AAErC,iBAAS,KAAK,MAAM,IAAI;AACxB,eAAO,OAAO,SAAS;AACvB,eAAO,QAAQ;AACf,YAAI,KAAK,YAAY,IAAI,GAAG;AAC1B,iBAAO,KAAK,SAAS,KAAK,WAAW,UAAU,MAAM,MAAM;AAAA,QAC7D;AACA,eAAO,KAAK,OAAO,aAAa,MAAM,MAAM;AAAA,MAC9C;AAAA,IACF;AAEA,aAAS,QAAQ,CAAC,aAAa,iBAAiB,YAAY;AAE5D,WAAO,UAAU;AAAA;AAAA;;;ACpDjB;AAAA;AAAA,QAAI,WAAW;AACf,QAAI,cAAc;AAElB,QAAM,OAAN,cAAmB,YAAY;AAAA,MAI7B,YAAY;AACV,eAAO;AAAA,MACT;AAAA,MAKA,SAAS,MAAM,QAAQ;AACrB,YAAI;AACH,SAAC,MAAM,MAAM,IAAI,SAAS,MAAM;AACjC,YAAI,SAAS,MAAM;AACjB,iBAAO,SAAS;AAAA,QAClB;AACA,YAAI,SAAS,MAAM;AACjB,iBAAO,SAAS;AAAA,QAClB;AACA,eAAO,MAAM,SAAS,MAAM,MAAM;AAAA,MACpC;AAAA,IACF;AAEA,SAAK,QAAQ,CAAC,aAAa,eAAe;AAE1C,WAAO,UAAU;AAAA;AAAA;;;AC7BjB;AAAA;AAAA,QAAI,WAAW;AACf,QAAI,cAAc;AAElB,QAAM,WAAN,cAAuB,YAAY;AAAA,MAIjC,IAAI,MAAM,QAAQ;AAChB,YAAI,OAAO,SAAS,MAAM,EAAE;AAC5B,YAAI,SAAS,MAAM;AACjB,iBAAO,MAAM,IAAI,MAAM,MAAM;AAAA,QAC/B;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,aAAS,QAAQ,CAAC,WAAW;AAE7B,WAAO,UAAU;AAAA;AAAA;;;AClBjB;AAAA;AAAA,QAAI,cAAc;AAClB,QAAI,QAAQ;AAEZ,QAAM,WAAN,cAAuB,YAAY;AAAA,MAIjC,OAAO,MAAM,QAAQ,UAAU,QAAQ;AACrC,YAAI,WAAW;AAAQ,iBAAO,MAAM,OAAO,MAAM,QAAQ,QAAQ;AAEjE,YAAI,SAAS,MAAM,MAAM,IAAI;AAE7B,YAAI,CAAC,UAAU,OAAO,IAAI,MAAM,UAAU,QAAQ,GAAG,CAAC;AACtD,YAAI,CAAC,aAAa,UAAU,IAAI,MAAM,UAAU,QAAQ,GAAG,CAAC;AAE3D;AAAA,UACC,CAAC,YAAY,QAAQ;AAAA,UACrB,CAAC,iBAAiB,OAAO;AAAA,UACzB,CAAC,eAAe,WAAW;AAAA,UAC3B,CAAC,oBAAoB,UAAU;AAAA,QACjC,EAAE,QAAQ,CAAC,CAAC,MAAM,KAAK,MAAM;AAC3B,gBAAM,WAAW,MAAM,MAAM,KAAK;AAAA,QACpC,CAAC;AAED,cAAM,6BAA6B,MAAM,MAAM;AAC/C,cAAM,0BAA0B,MAAM,MAAM;AAE5C,eAAO;AAAA,MACT;AAAA,IACF;AAEA,aAAS,QAAQ,CAAC,WAAW;AAE7B,WAAO,UAAU;AAAA;AAAA;;;ACjCjB;AAAA;AAAA,QAAI,cAAc;AAClB,QAAI,QAAQ;AAEZ,QAAM,YAAN,cAAwB,YAAY;AAAA,MAIlC,OAAO,MAAM,QAAQ,UAAU;AAC7B,YAAI,WAAW;AAAQ,iBAAO,MAAM,OAAO,MAAM,QAAQ,QAAQ;AAGjE,YAAI,KAAK,OAAO,KAAK,OAAK,EAAE,SAAS,oBAAoB,GAAG;AAC1D,iBAAO;AAAA,QACT;AAEA,YAAI,CAAC,CAAC,OAAO,MAAM,CAAC,IAAI,MAAM,MAAM,IAAI;AAExC,YAAI,QAAQ;AACV,gBAAM,WAAW,MAAM,kBAAkB,KAAK;AAC9C,gBAAM,WAAW,MAAM,qBAAqB,MAAM;AAAA,QACpD,OAAO;AACL,gBAAM,WAAW,MAAM,kBAAkB,KAAK;AAC9C,gBAAM,WAAW,MAAM,qBAAqB,KAAK;AAAA,QACnD;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,cAAU,QAAQ,CAAC,YAAY;AAE/B,WAAO,UAAU;AAAA;AAAA;;;AC/BjB;AAAA;AAAA,QAAI,cAAc;AAElB,QAAM,YAAN,cAAwB,YAAY;AAAA,MAIlC,MAAM,MAAM;AACV,YAAI,QAAQ,KAAK;AACjB,eAAO,CAAC,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,SAAS,MAAM;AAAA,MACvD;AAAA,MAKA,UAAU,MAAM;AACd,eAAO,KAAK,QAAQ,UAAU,EAAE;AAAA,MAClC;AAAA,MAKA,SAAS,MAAM,QAAQ;AACrB,YAAI,SAAS,MAAM,SAAS,MAAM,MAAM;AACxC,YAAI,WAAW,QAAQ;AACrB,mBAAS,OAAO,QAAQ,UAAU,EAAE;AAAA,QACtC;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,cAAU,QAAQ,CAAC,kBAAkB,mBAAmB;AAExD,WAAO,UAAU;AAAA;AAAA;;;AChCjB;AAAA;AAAA,QAAI,WAAW;AACf,QAAI,cAAc;AAElB,QAAM,YAAN,cAAwB,YAAY;AAAA,MAClC,MAAM,MAAM;AACV,eACE,KAAK,UACL,CAAC,KAAK,OAAO,KAAK,OAAK;AACrB,iBAAO,EAAE,QAAQ,EAAE,KAAK,WAAW,OAAO;AAAA,QAC5C,CAAC;AAAA,MAEL;AAAA,MAKA,SAAS,MAAM,QAAQ;AACrB,YAAI;AACH,SAAC,MAAM,MAAM,IAAI,SAAS,MAAM;AACjC,YAAI,SAAS,MAAM;AACjB,iBAAO,SAAS;AAAA,QAClB;AACA,eAAO,MAAM,SAAS,MAAM,MAAM;AAAA,MACpC;AAAA,MAKA,YAAY;AACV,eAAO;AAAA,MACT;AAAA,MAKA,IAAI,MAAM,QAAQ;AAChB,YAAI,OAAO,SAAS,MAAM,EAAE;AAC5B,YAAI,SAAS,MAAM;AACjB,eAAK,QAAQ,UAAU,UAAU,KAAK,UAAU,KAAK;AACrD,iBAAO,MAAM,IAAI,MAAM,MAAM;AAAA,QAC/B;AACA,YAAI,SAAS,SAAS;AACpB,iBAAO,MAAM,IAAI,MAAM,MAAM;AAAA,QAC/B;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,cAAU,QAAQ,CAAC,cAAc,iBAAiB;AAElD,cAAU,YAAY;AAAA,MACpB,YAAY;AAAA,MACZ,cAAc;AAAA,IAChB;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACvDjB;AAAA;AAAA,QAAI,cAAc;AAClB,QAAI,QAAQ;AAEZ,QAAM,aAAN,cAAyB,YAAY;AAAA,MACnC,YAAY,MAAM,UAAU,KAAK;AAC/B,cAAM,MAAM,UAAU,GAAG;AAEzB,YAAI,KAAK,UAAU;AACjB,eAAK,WAAW,MAAM;AAAA,YACpB,KAAK,SAAS,IAAI,OAAK;AACrB,kBAAI,MAAM,QAAQ;AAChB,uBAAO;AAAA,cACT;AACA,qBAAO;AAAA,YACT,CAAC;AAAA,UACH;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,eAAW,QAAQ,CAAC,YAAY;AAEhC,WAAO,UAAU;AAAA;AAAA;;;ACtBjB;AAAA;AAAA,QAAI,WAAW;AACf,QAAI,cAAc;AAElB,QAAM,YAAN,cAAwB,YAAY;AAAA,MAIlC,YAAY;AACV,eAAO;AAAA,MACT;AAAA,MAKA,SAAS,MAAM,QAAQ;AACrB,YAAI;AACH,SAAC,MAAM,MAAM,IAAI,SAAS,MAAM;AACjC,YAAI,SAAS,MAAM;AACjB,iBAAO,SAAS;AAAA,QAClB;AACA,eAAO,MAAM,SAAS,MAAM,MAAM;AAAA,MACpC;AAAA,MAKA,IAAI,MAAM,QAAQ;AAChB,YAAI;AACH,SAAC,MAAM,MAAM,IAAI,SAAS,MAAM;AACjC,YAAI,SAAS,QAAQ,SAAS,SAAS;AACrC,iBAAO,MAAM,IAAI,MAAM,MAAM;AAAA,QAC/B;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,cAAU,QAAQ,CAAC,cAAc,qBAAqB;AAEtD,WAAO,UAAU;AAAA;AAAA;;;ACtCjB;AAAA;AAAA,QAAI,cAAc;AAElB,QAAM,aAAN,cAAyB,YAAY;AAAA,MAInC,YAAY;AACV,eAAO,KAAK,KAAK,QAAQ,aAAa,QAAQ;AAAA,MAChD;AAAA,MAKA,SAAS,MAAM,QAAQ;AACrB,YAAI,SAAS,MAAM,SAAS,MAAM,MAAM;AACxC,YAAI,WAAW,YAAY;AACzB,mBAAS,OAAO,QAAQ,UAAU,WAAW;AAAA,QAC/C;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,eAAW,QAAQ;AAAA,MACjB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACrCjB;AAAA;AAAA,QAAI,cAAc;AAElB,QAAM,gBAAN,cAA4B,YAAY;AAAA,MAItC,OAAO,MAAM,QAAQ,UAAU;AAC7B,YAAI,kBAAkB,KAAK,SAAS;AAEpC,YAAI;AAEJ,YAAI,iBAAiB;AACnB,4BAAkB,KAAK,MAAM,MAAM,GAAG;AAAA,QACxC,OAAO;AACL,4BAAkB,KAAK,MAAM,MAAM,cAAc,MAAM,KAAK,CAAC;AAAA,QAC/D;AAEA,0BAAkB,gBAAgB,IAAI,QAAM,GAAG,KAAK,CAAC,EAAE,OAAO,QAAM,EAAE;AACtE,YAAI,qBAAqB,gBAAgB;AAEzC,YAAI;AAEJ,YAAI,oBAAoB;AACtB,0BAAgB,KAAK,MAAM,IAAI;AAC/B,wBAAc,QAAQ,gBACnB,IAAI,WAAS,cAAc,UAAU,UAAU,KAAK,EACpD,KAAK,IAAI;AAEZ,cAAI,gBAAgB,SAAS,WAAW,GAAG;AACzC,0BAAc,SAAS;AAAA,UACzB;AAEA,wBAAc,OAAO,SAAS;AAAA,QAChC;AAEA,YAAI,iBAAiB;AACnB,cAAI,CAAC,oBAAoB;AACvB,mBAAO;AAAA,UACT;AAEA,cAAI,KAAK,YAAY,IAAI,GAAG;AAC1B,0BAAc,KAAK,SAAS,KAAK,WAAW,UAAU,MAAM,MAAM;AAAA,UACpE;AAEA,iBAAO,KAAK,OAAO,aAAa,MAAM,aAAa;AAAA,QACrD;AAEA,YAAI,SAAS,KAAK,MAAM,IAAI;AAC5B,eAAO,OAAO,SAAS,OAAO;AAE9B,YAAI,oBAAoB;AACtB,iBAAO,QAAQ,OAAO,MAAM,QAAQ,cAAc,QAAQ,EAAE;AAAA,QAC9D;AAEA,YAAI,KAAK,YAAY,IAAI,GAAG;AAC1B,iBAAO,KAAK,SAAS,KAAK,WAAW,UAAU,MAAM,MAAM;AAAA,QAC7D;AAEA,aAAK,OAAO,aAAa,MAAM,MAAM;AAErC,YAAI,CAAC,oBAAoB;AACvB,iBAAO;AAAA,QACT;AAEA,YAAI,KAAK,YAAY,IAAI,GAAG;AAC1B,wBAAc,KAAK,SAAS,KAAK,WAAW,UAAU,MAAM,MAAM;AAAA,QACpE;AACA,eAAO,KAAK,OAAO,aAAa,MAAM,aAAa;AAAA,MACrD;AAAA,IACF;AAEA,kBAAc,QAAQ,CAAC,QAAQ,gBAAgB;AAE/C,kBAAc,YAAY;AAAA,MACxB,KAAK;AAAA,MACL,UAAU;AAAA,MACV,WAAW;AAAA,MACX,SAAS;AAAA,IACX;AAEA,kBAAc,SAAS,IAAI;AAAA,MACzB,QAAQ,OAAO,KAAK,cAAc,SAAS,EAAE;AAAA,QAC3C;AAAA,MACF;AAAA,MACA;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACvFjB;AAAA;AAAA,QAAI,WAAW;AACf,QAAI,cAAc;AAElB,QAAM,aAAN,cAAyB,YAAY;AAAA,MAInC,SAAS,MAAM,QAAQ;AACrB,YAAI;AACH,SAAC,MAAM,MAAM,IAAI,SAAS,MAAM;AACjC,YAAI,SAAS,MAAM;AACjB,iBAAO,SAAS;AAAA,QAClB;AACA,YAAI,SAAS,MAAM;AACjB,iBAAO,SAAS;AAAA,QAClB;AACA,eAAO,MAAM,SAAS,MAAM,MAAM;AAAA,MACpC;AAAA,MAKA,YAAY;AACV,eAAO;AAAA,MACT;AAAA,MAKA,IAAI,MAAM,QAAQ;AAChB,YAAI,OAAO,SAAS,MAAM,EAAE;AAC5B,YAAI,SAAS,QAAQ,SAAS,MAAM;AAClC,eAAK,QAAQ,WAAW,UAAU,KAAK,UAAU,KAAK;AAAA,QACxD;AACA,eAAO,MAAM,IAAI,MAAM,MAAM;AAAA,MAC/B;AAAA,IACF;AAEA,eAAW,QAAQ,CAAC,eAAe,cAAc,WAAW;AAE5D,eAAW,YAAY;AAAA,MACrB,YAAY;AAAA,MACZ,cAAc;AAAA,IAChB;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC7CjB;AAAA;AAAA,QAAI,cAAc;AAElB,QAAM,aAAN,cAAyB,YAAY;AAAA,MAInC,IAAI,MAAM,QAAQ;AAChB,YAAI,WAAW,UAAU,KAAK,UAAU,WAAW;AACjD,eAAK,QAAQ;AAAA,QACf;AACA,eAAO,MAAM,IAAI,MAAM,MAAM;AAAA,MAC/B;AAAA,MAKA,OAAO,MAAM,QAAQ,UAAU;AAC7B,YAAI,KAAK,UAAU,SAAS,WAAW,QAAQ;AAC7C,iBAAO;AAAA,QACT,OAAO;AACL,iBAAO,MAAM,OAAO,MAAM,QAAQ,QAAQ;AAAA,QAC5C;AAAA,MACF;AAAA,IACF;AAEA,eAAW,QAAQ,CAAC,aAAa;AAEjC,WAAO,UAAU;AAAA;AAAA;;;AC3BjB;AAAA;AAAA,QAAI,WAAW;AACf,QAAI,cAAc;AAElB,QAAM,aAAN,cAAyB,YAAY;AAAA,MAInC,YAAY;AACV,eAAO;AAAA,MACT;AAAA,MAKA,SAAS,MAAM,QAAQ;AACrB,YAAI;AACH,SAAC,MAAM,MAAM,IAAI,SAAS,MAAM;AACjC,YAAI,SAAS,MAAM;AACjB,iBAAO,SAAS;AAAA,QAClB;AACA,eAAO,MAAM,SAAS,MAAM,MAAM;AAAA,MACpC;AAAA,MAKA,IAAI,MAAM,QAAQ;AAChB,YAAI;AACH,SAAC,MAAM,MAAM,IAAI,SAAS,MAAM;AACjC,YAAI,SAAS,QAAQ,SAAS,SAAS;AACrC,iBAAO,MAAM,IAAI,MAAM,MAAM;AAAA,QAC/B;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,eAAW,QAAQ,CAAC,eAAe,eAAe;AAElD,WAAO,UAAU;AAAA;AAAA;;;ACtCjB;AAAA;AAAA,QAAI,cAAc;AAElB,QAAM,aAAN,cAAyB,YAAY;AAAA,MAInC,SAAS,MAAM,QAAQ;AACrB,eAAO,GAAG,gBAAgB;AAAA,MAC5B;AAAA,MAKA,UAAU,MAAM;AACd,YAAI,KAAK,SAAS,QAAQ,GAAG;AAC3B,iBAAO;AAAA,QACT;AACA,YAAI,KAAK,SAAS,QAAQ,GAAG;AAC3B,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAAA,MAKA,IAAI,MAAM,QAAQ;AAChB,YACG,KAAK,SAAS,kBAAkB,KAAK,UAAU,kBAChD,KAAK,UAAU,cACf;AACA,eAAK,QAAQ;AAAA,QACf;AACA,eAAO,MAAM,IAAI,MAAM,MAAM;AAAA,MAC/B;AAAA,MAKA,OAAO,MAAM,QAAQ,UAAU;AAC7B,YAAI,KAAK,SAAS,gBAAgB;AAChC,iBAAO,MAAM,OAAO,MAAM,QAAQ,QAAQ;AAAA,QAC5C;AACA,YAAI,UAAU,KAAK,KAAK,KAAK,KAAK,QAAQ,KAAK,KAAK,KAAK,GAAG;AAC1D,iBAAO;AAAA,QACT;AACA,eAAO,MAAM,OAAO,MAAM,QAAQ,QAAQ;AAAA,MAC5C;AAAA,IACF;AAEA,eAAW,QAAQ;AAAA,MACjB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC9DjB;AAAA;AAAA,QAAI,cAAc;AAElB,QAAM,cAAN,cAA0B,YAAY;AAAA,MACpC,OAAO,MAAM,QAAQ,UAAU;AAC7B,YAAI,WAAW,QAAQ;AACrB,cAAI,SAAS,KAAK,IAAI,KAAK,MAAM,IAAI,GAAG,MAAM;AAE9C,cAAI,KAAK,YAAY,IAAI,GAAG;AAC1B,mBAAO,KAAK,SAAS,KAAK,WAAW,UAAU,MAAM,MAAM;AAAA,UAC7D;AACA,cAAI,YAAY;AAEhB,eAAK,OAAO,MAAM,QAAQ,OAAK;AAC7B,gBAAI,EAAE,SAAS,aAAa;AAC1B,kBAAI,EAAE,UAAU,SAAS,EAAE,UAAU;AAAO,4BAAY,EAAE;AAAA,YAC5D;AAAA,UACF,CAAC;AAED,iBAAO,QAAQ,YAAY,SAAS,WAAW,KAAK,UAAU,KAAK;AACnE,iBAAO,KAAK,OAAO,aAAa,MAAM,MAAM;AAAA,QAC9C;AAEA,eAAO,MAAM,OAAO,MAAM,QAAQ,QAAQ;AAAA,MAC5C;AAAA,IACF;AAEA,gBAAY,QAAQ,CAAC,cAAc;AAEnC,gBAAY,WAAW;AAAA,MACrB,KAAK;AAAA,QACH,iBAAiB;AAAA,QACjB,eAAe;AAAA,QACf,eAAe;AAAA,MACjB;AAAA,MACA,KAAK;AAAA,QACH,iBAAiB;AAAA,QACjB,eAAe;AAAA,QACf,eAAe;AAAA,MACjB;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACzCjB,IAAAC,wBAAA;AAAA;AAAA,QAAI,cAAc;AAElB,QAAM,cAAN,cAA0B,YAAY;AAAA,MAIpC,IAAI,MAAM,QAAQ;AAChB,aAAK,QAAQ,KAAK,MAAM,QAAQ,eAAe,IAAI;AACnD,eAAO,MAAM,IAAI,MAAM,MAAM;AAAA,MAC/B;AAAA,IACF;AAEA,gBAAY,QAAQ,CAAC,cAAc;AAEnC,WAAO,UAAU;AAAA;AAAA;;;ACdjB;AAAA;AAAA,QAAI,WAAW;AACf,QAAI,cAAc;AAElB,QAAM,eAAN,cAA2B,YAAY;AAAA,MAIrC,SAAS,MAAM,QAAQ;AACrB,YAAI;AACH,SAAC,MAAM,MAAM,IAAI,SAAS,MAAM;AACjC,YAAI,SAAS,MAAM;AACjB,iBAAO,SAAS;AAAA,QAClB;AACA,eAAO,MAAM,SAAS,MAAM,MAAM;AAAA,MACpC;AAAA,MAKA,YAAY;AACV,eAAO;AAAA,MACT;AAAA,MAKA,IAAI,MAAM,QAAQ;AAChB,YAAI,OAAO,SAAS,MAAM,EAAE;AAC5B,YAAI,SAAS,MAAM;AACjB,eAAK,QAAQ,aAAa,UAAU,KAAK,UAAU,KAAK;AACxD,iBAAO,MAAM,IAAI,MAAM,MAAM;AAAA,QAC/B;AACA,YAAI,SAAS,SAAS;AACpB,iBAAO,MAAM,IAAI,MAAM,MAAM;AAAA,QAC/B;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,iBAAa,QAAQ,CAAC,iBAAiB,gBAAgB;AAEvD,iBAAa,YAAY;AAAA,MACvB,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,iBAAiB;AAAA,MACjB,gBAAgB;AAAA,IAClB;AAEA,WAAO,UAAU;AAAA;AAAA;;;AChDjB,IAAAC,yBAAA;AAAA;AAAA,QAAI,cAAc;AAElB,QAAM,eAAN,cAA2B,YAAY;AAAA,MAIrC,SAAS,MAAM,QAAQ;AACrB,YAAI,WAAW,SAAS;AACtB,iBAAO,UAAU,aAAa,UAAU,SAAS;AAAA,QACnD;AACA,eAAO,MAAM,SAAS,MAAM,MAAM;AAAA,MACpC;AAAA,MAKA,UAAU,MAAM;AACd,eAAO,aAAa,SAAS,SAAS;AAAA,MACxC;AAAA,IACF;AAEA,iBAAa,QAAQ,CAAC,eAAe;AAErC,iBAAa,YAAY,CAAC;AAC1B,iBAAa,WAAW,CAAC;AAEzB,aAAS,OAAO,CAAC,OAAO,QAAQ,GAAG;AACjC,eAAS,OAAO,CAAC,QAAQ,OAAO,GAAG;AACjC,YAAI,SAAS,UAAU,OAAO;AAC9B,YAAI,UAAU,iBAAiB,MAAM;AAErC,qBAAa,MAAM,KAAK,MAAM;AAC9B,qBAAa,MAAM,KAAK,OAAO;AAE/B,qBAAa,UAAU,UAAU;AACjC,qBAAa,SAAS,WAAW;AAAA,MACnC;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACvCjB;AAAA;AAAA,QAAI,cAAc;AAElB,QAAM,eAAN,cAA2B,YAAY;AAAA,MAIrC,SAAS,MAAM,QAAQ;AACrB,YAAI,KAAK,SAAS,QAAQ,GAAG;AAC3B,iBAAO,SAAS,KAAK,QAAQ,gBAAgB,SAAS;AAAA,QACxD;AACA,eAAO,SAAS,KAAK,QAAQ,cAAc,QAAQ;AAAA,MACrD;AAAA,MAKA,UAAU,MAAM;AACd,YAAI,KAAK,SAAS,SAAS,GAAG;AAC5B,iBAAO,KAAK,QAAQ,WAAW,cAAc;AAAA,QAC/C;AACA,eAAO,KAAK,QAAQ,UAAU,YAAY;AAAA,MAC5C;AAAA,IACF;AAEA,iBAAa,QAAQ;AAAA,MACnB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACvCjB;AAAA;AAAA,QAAI,cAAc;AAClB,QAAI;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AAEJ,QAAM,eAAN,cAA2B,YAAY;AAAA,MAIrC,OAAO,MAAM,QAAQ,UAAU,QAAQ;AACrC,YAAI,WAAW;AAAQ,iBAAO,MAAM,OAAO,MAAM,QAAQ,QAAQ;AAEjE,YAAI,KAAK,OAAO,KAAK,OAAK,EAAE,SAAS,eAAe,GAAG;AACrD,iBAAO;AAAA,QACT;AAEA,YAAI,MAAM,WAAW,IAAI;AAMzB,YAAI,eAAe,eAAe,MAAM,GAAG;AAE3C,YAAI,EAAE,MAAM,SAAS,MAAM,IAAI,cAAc;AAAA,UAC3C;AAAA,UACA,KAAK,gBAAgB;AAAA,QACvB,CAAC;AAED,YAAI,WAAW,OAAO,KAAK,KAAK,EAAE,SAAS;AAC3C,YAAI,UAAU,QAAQ,IAAI;AAC1B,YAAI,aAAa,QAAQ,OAAO;AAEhC,oBAAY;AAAA,UACV;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAED,wBAAgB,OAAO,MAAM,MAAM;AAEnC,YAAK,WAAW,cAAe,UAAU;AACvC,eAAK,YAAY;AAAA,YACf,MAAM;AAAA,YACN,OAAO;AAAA,YACP,MAAM,CAAC;AAAA,UACT,CAAC;AAAA,QACH;AAEA,YAAI,YAAY;AACd,eAAK,YAAY;AAAA,YACf,MAAM;AAAA,YACN,OAAO;AAAA,YACP,MAAM,CAAC;AAAA,UACT,CAAC;AAAA,QACH;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,iBAAa,QAAQ,CAAC,eAAe;AAErC,WAAO,UAAU;AAAA;AAAA;;;ACpEjB;AAAA;AAAA,QAAI,cAAc;AAElB,QAAM,gBAAN,cAA4B,YAAY;AAAA,MAItC,SAAS,MAAM,QAAQ;AACrB,eAAO,SAAS,KAAK,QAAQ,WAAW,EAAE;AAAA,MAC5C;AAAA,MAKA,UAAU,MAAM;AACd,eAAO,KAAK,QAAQ,uCAAuC,cAAc;AAAA,MAC3E;AAAA,IACF;AAEA,kBAAc,QAAQ;AAAA,MACpB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACjCjB;AAAA;AAAA,QAAI,cAAc;AAElB,QAAM,eAAN,cAA2B,YAAY;AAAA,MAIrC,MAAM,MAAM;AACV,eAAO,CAAC,KAAK,MAAM,SAAS,OAAO,KAAK,KAAK,UAAU;AAAA,MACzD;AAAA,MAKA,SAAS,MAAM,QAAQ;AACrB,eAAO,SAAS;AAAA,MAClB;AAAA,MAKA,YAAY;AACV,eAAO;AAAA,MACT;AAAA,IACF;AAEA,iBAAa,QAAQ,CAAC,gBAAgB;AAEtC,WAAO,UAAU;AAAA;AAAA;;;AC3BjB;AAAA;AAAA,QAAI,cAAc;AAElB,QAAM,gBAAN,cAA4B,YAAY;AAAA,MAItC,gBAAgB,MAAM;AACpB,YAAI,EAAE,OAAO,IAAI;AACjB,eAAO,QAAQ;AACb,cAAI,OAAO,SAAS,YAAY,OAAO,SAAS,aAAa;AAC3D,mBAAO;AAAA,UACT;AACA;AAAC,WAAC,EAAE,OAAO,IAAI;AAAA,QACjB;AACA,eAAO;AAAA,MACT;AAAA,MAKA,UAAU,MAAM;AACd,YAAI,KAAK,SAAS,oBAAoB;AACpC,iBAAO;AAAA,QACT;AAEA,iBAAS,QAAQ,cAAc,aAAa;AAC1C,cAAI,KAAK,MAAM,SAAS,GAAG,OAAO,GAAG;AACnC,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,MAKA,IAAI,MAAM,QAAQ;AAChB,eAAO,MAAM,IAAI,MAAM,MAAM;AAC7B,YAAI,WAAW,QAAQ;AACrB,eAAK,QAAQ,KAAK,MAAM,QAAQ,aAAa,QAAQ;AAAA,QACvD;AACA,eAAO;AAAA,MACT;AAAA,MAKA,OAAO,MAAM,QAAQ,UAAU;AAC7B,YAAI,WAAW,QAAQ;AACrB,cAAI,CAAC,KAAK,UAAU,IAAI,KAAK,CAAC,KAAK,gBAAgB,IAAI,GAAG;AACxD,mBAAO,MAAM,OAAO,MAAM,QAAQ,QAAQ;AAAA,UAC5C;AAAA,QACF,WAAW,WAAW,OAAO;AAC3B,cAAI,CAAC,KAAK,UAAU,IAAI,GAAG;AACzB,mBAAO,MAAM,OAAO,MAAM,QAAQ,QAAQ;AAAA,UAC5C;AAAA,QACF,OAAO;AACL,iBAAO,MAAM,OAAO,MAAM,QAAQ,QAAQ;AAAA,QAC5C;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,kBAAc,QAAQ,CAAC,aAAa,kBAAkB;AAEtD,kBAAc,cAAc;AAAA,MAC1B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC9EjB;AAAA;AAAA,QAAI,WAAW;AACf,QAAI,cAAc;AAElB,QAAM,gBAAN,cAA4B,YAAY;AAAA,MAItC,YAAY;AACV,eAAO;AAAA,MACT;AAAA,MAKA,OAAO,MAAM,QAAQ,UAAU;AAC7B,YAAI;AACH,SAAC,MAAM,MAAM,IAAI,SAAS,MAAM;AACjC,YAAI,SAAS,MAAM;AACjB,iBAAO,MAAM,OAAO,MAAM,QAAQ,QAAQ;AAAA,QAC5C;AACA,YAAI,UAAU,KAAK,OAAO;AAAA,UACxB,OACE,EAAE,SAAS,SAAS,gBAAgB,EAAE,SAAS,SAAS;AAAA,QAC5D;AACA,YAAI,SAAS;AACX,iBAAO;AAAA,QACT;AAEA,YAAI,IAAI,KAAK;AACb,YAAI,QAAQ;AACZ,YAAI,MAAM,aAAa,MAAM,aAAa,MAAM,SAAS;AACvD,mBAAS;AACT,gBAAM;AAAA,QACR,OAAO;AACL,mBAAS,EAAE,SAAS,KAAK,IAAI,eAAe;AAC5C,gBAAM,EAAE,SAAS,SAAS,IAAI,YAAY;AAAA,QAC5C;AAEA,YAAI,SAAS,KAAK,MAAM,IAAI;AAC5B,eAAO,OAAO,SAAS;AACvB,eAAO,QAAQ;AACf,YAAI,KAAK,YAAY,IAAI,GAAG;AAC1B,iBAAO,KAAK,SAAS,KAAK,WAAW,UAAU,MAAM,MAAM;AAAA,QAC7D;AACA,aAAK,OAAO,aAAa,MAAM,MAAM;AAErC,iBAAS,KAAK,MAAM,IAAI;AACxB,eAAO,OAAO,SAAS;AACvB,eAAO,QAAQ;AACf,YAAI,KAAK,YAAY,IAAI,GAAG;AAC1B,iBAAO,KAAK,SAAS,KAAK,WAAW,UAAU,MAAM,MAAM;AAAA,QAC7D;AACA,eAAO,KAAK,OAAO,aAAa,MAAM,MAAM;AAAA,MAC9C;AAAA,MAKA,IAAI,MAAM,QAAQ;AAChB,YAAI;AACH,SAAC,MAAM,MAAM,IAAI,SAAS,MAAM;AACjC,YAAI,SAAS,MAAM;AACjB,iBAAO,CAAC,SAAS,cAAc,SAAS,eAAe;AAAA,QACzD,OAAO;AACL,iBAAO,MAAM,IAAI,MAAM,MAAM;AAAA,QAC/B;AAAA,MACF;AAAA,IACF;AAEA,kBAAc,QAAQ,CAAC,kBAAkB,iBAAiB,YAAY;AAEtE,WAAO,UAAU;AAAA;AAAA;;;ACvEjB;AAAA;AAAA,QAAI,cAAc;AAElB,QAAM,iBAAN,cAA6B,YAAY;AAAA,MAIvC,MAAM,MAAM;AACV,eAAO,KAAK,UAAU;AAAA,MACxB;AAAA,MAKA,SAAS,MAAM,QAAQ;AACrB,YAAI,WAAW,QAAQ;AACrB,iBAAO;AAAA,QACT;AACA,eAAO,MAAM,SAAS,MAAM,MAAM;AAAA,MACpC;AAAA,MAKA,IAAI,MAAM,QAAQ;AAChB,YAAI,WAAW;AAAQ,iBAAO,MAAM,IAAI,MAAM,MAAM;AACpD,aAAK,OAAO;AACZ,aAAK,QAAQ;AACb,eAAO;AAAA,MACT;AAAA,MAKA,YAAY;AACV,eAAO;AAAA,MACT;AAAA,MAKA,QAAQ,MAAM,QAAQ;AACpB,eAAO,MAAM,QAAQ,MAAM,MAAM;AAAA,MACnC;AAAA,IACF;AAEA,mBAAe,QAAQ,CAAC,mBAAmB,oBAAoB;AAE/D,WAAO,UAAU;AAAA;AAAA;;;AC/CjB;AAAA;AAAA,QAAI,cAAc;AAClB,QAAI,QAAQ;AAEZ,QAAM,iBAAN,cAA6B,YAAY;AAAA,MACvC,YAAY,MAAM,UAAU,KAAK;AAC/B,cAAM,MAAM,UAAU,GAAG;AAEzB,YAAI,KAAK,UAAU;AACjB,eAAK,WAAW,MAAM;AAAA,YACpB,KAAK,SAAS,IAAI,OAAK;AACrB,qBAAO,MAAM,SAAS,aAAa;AAAA,YACrC,CAAC;AAAA,UACH;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,mBAAe,QAAQ,CAAC,iBAAiB;AAEzC,WAAO,UAAU;AAAA;AAAA;;;ACnBjB;AAAA;AAAA,QAAI,cAAc;AAClB,QAAI,QAAQ;AAEZ,QAAM,iBAAN,cAA6B,YAAY;AAAA,MACvC,YAAY,MAAM,UAAU,KAAK;AAC/B,cAAM,MAAM,UAAU,GAAG;AAEzB,YAAI,KAAK,UAAU;AACjB,eAAK,WAAW,MAAM;AAAA,YACpB,KAAK,SAAS,IAAI,OAAK;AACrB,qBAAO,MAAM,SAAS,aAAa;AAAA,YACrC,CAAC;AAAA,UACH;AAAA,QACF;AAAA,MACF;AAAA,MAEA,MAAM,MAAM;AACV,eAAO,KAAK,MAAM,YAAY,MAAM;AAAA,MACtC;AAAA,IACF;AAEA,mBAAe,QAAQ,CAAC,iBAAiB;AAEzC,WAAO,UAAU;AAAA;AAAA;;;ACvBjB,IAAAC,2BAAA;AAAA;AAAA,QAAI,cAAc;AAElB,QAAM,QAAQ;AAAA,MACZ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,QAAM,iBAAN,cAA6B,YAAY;AAAA,MAIvC,MAAM,MAAM;AACV,eAAO,KAAK,MAAM,MAAM,KAAK,EAAE,KAAK,OAAK,CAAC,MAAM,SAAS,CAAC,CAAC;AAAA,MAC7D;AAAA,IACF;AAEA,mBAAe,QAAQ,CAAC,iBAAiB;AAEzC,WAAO,UAAU;AAAA;AAAA;;;ACxBjB;AAAA;AAAA,QAAI,WAAW;AACf,QAAI,cAAc;AAElB,QAAM,iBAAN,cAA6B,YAAY;AAAA,MAIvC,SAAS,MAAM,QAAQ;AACrB,YAAI;AACH,SAAC,MAAM,MAAM,IAAI,SAAS,MAAM;AACjC,YAAI,SAAS,MAAM;AACjB,iBAAO,SAAS;AAAA,QAClB;AACA,YAAI,SAAS,MAAM;AACjB,iBAAO,SAAS;AAAA,QAClB;AACA,eAAO,MAAM,SAAS,MAAM,MAAM;AAAA,MACpC;AAAA,MAKA,YAAY;AACV,eAAO;AAAA,MACT;AAAA,MAKA,IAAI,MAAM,QAAQ;AAChB,YAAI,OAAO,SAAS,MAAM,EAAE;AAC5B,YAAI,SAAS,QAAQ,SAAS,MAAM;AAClC,cAAI,QAAQ,eAAe,UAAU,KAAK,UAAU,KAAK;AACzD,eAAK,QAAQ;AACb,cAAI,SAAS,QAAQ,UAAU,cAAc;AAC3C,mBAAO,MAAM,IAAI,MAAM,MAAM;AAAA,UAC/B;AAAA,QACF,WAAW,SAAS,SAAS;AAC3B,iBAAO,MAAM,IAAI,MAAM,MAAM;AAAA,QAC/B;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,mBAAe,QAAQ,CAAC,mBAAmB,aAAa,UAAU;AAElE,mBAAe,YAAY;AAAA,MACzB,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,iBAAiB;AAAA,MACjB,gBAAgB;AAAA,IAClB;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACrDjB;AAAA;AAAA,QAAI,cAAc;AAElB,QAAM,iBAAN,cAA6B,YAAY;AAAA,MAIvC,IAAI,MAAM,QAAQ;AAChB,YAAI,QAAQ,KAAK,MAAM,YAAY;AACnC,YACE,WAAW,cACX,CAAC,MAAM,SAAS,GAAG,KACnB,UAAU,aACV,UAAU,SACV;AACA,eAAK,QAAQ,KAAK,QAAQ,MAAM,KAAK;AAAA,QACvC;AACA,eAAO,MAAM,IAAI,MAAM,MAAM;AAAA,MAC/B;AAAA,IACF;AAEA,mBAAe,QAAQ,CAAC,iBAAiB;AAEzC,WAAO,UAAU;AAAA;AAAA;;;ACtBjB;AAAA;AAAA,QAAI,cAAc;AAClB,QAAI,QAAQ;AAEZ,QAAM,gBAAN,cAA4B,YAAY;AAAA,MAItC,OAAO,MAAM,QAAQ,UAAU;AAC7B,YAAI,WAAW;AAAQ,iBAAO,MAAM,OAAO,MAAM,QAAQ,QAAQ;AAEjE,YAAI,SAAS,MAAM,MAAM,IAAI;AAC7B,YAAI,CAAC,OAAO,IAAI,IAAI,MAAM,UAAU,QAAQ,GAAG,CAAC;AAEhD,YAAI,oBAAoB,OAAO,MAAM,OAAO,GAAG,SAAS,MAAM;AAE9D,YAAI,mBAAmB;AACrB,iBAAO,OAAO,GAAG,KAAK,EAAE,EAAE,QAAQ,OAAO,EAAE;AAAA,QAC7C;AAEA;AAAC;AAAA,UACC,CAAC,KAAK,MAAM,KAAK;AAAA,UACjB,CAAC,GAAG,KAAK,aAAa,IAAI;AAAA,QAC5B,EAAE,QAAQ,CAAC,CAAC,MAAM,KAAK,MAAM;AAC3B,gBAAM,WAAW,MAAM,MAAM,KAAK;AAAA,QACpC,CAAC;AAED,eAAO;AAAA,MACT;AAAA,IACF;AAEA,kBAAc,QAAQ,CAAC,YAAY,aAAa;AAEhD,WAAO,UAAU;AAAA;AAAA;;;AChCjB;AAAA;AAAA,QAAI,cAAc;AAClB,QAAI;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AACJ,QAAI,YAAY;AAEhB,QAAM,kBAAN,cAA8B,YAAY;AAAA,MAIxC,SAAS,MAAM,QAAQ;AACrB,YAAI,WAAW,QAAQ;AACrB,iBAAO,gBAAgB,EAAE,MAAM,OAAO,CAAC;AAAA,QACzC;AACA,eAAO,MAAM,SAAS,MAAM,MAAM;AAAA,MACpC;AAAA,MAKA,UAAU,MAAM;AACd,eAAO,KAAK,QAAQ,wBAAwB,kBAAkB;AAAA,MAChE;AAAA,MAEA,OAAO,MAAM,QAAQ,UAAU,QAAQ;AACrC,YAAI,WAAW;AAAQ,iBAAO,MAAM,OAAO,MAAM,QAAQ,QAAQ;AAEjE,YAAI,EAAE,QAAQ,MAAM,MAAM,IAAI;AAC9B,YAAI,YAAY,KAAK,SAAS,MAAM;AACpC,YAAI,eAAe,KAAK,SAAS,SAAS;AAE1C,YAAI,kBAAkB,OAAO;AAAA,UAC3B,OAAK,EAAE,SAAS,mBAAmB,EAAE,SAAS;AAAA,QAChD;AAKA,YAAI,mBAAmB,WAAW;AAChC,iBAAO;AAAA,QACT;AAEA,YAAI,YAAY,IAAI,UAAU,EAAE,SAAS,CAAC,EAAE,CAAC;AAC7C,YAAI,SAAS,UAAU,WAAW,QAAQ,MAAM;AAChD,YAAI,MAAM,WAAW,IAAI;AACzB,cAAM,eAAe,MAAM,GAAG,KAAK;AAEnC,YAAI,WAAW,YAAY,IAAI,MAAM,IAAI;AAEzC,aAAK,WAAW,kBAAkB,WAAW,SAAS,CAAC,iBAAiB;AACtE,qBAAW;AAAA,QACb;AAEA,YAAI,cAAc,iBAAiB;AAAA,UACjC;AAAA,UACA,KAAK;AAAA,QACP,CAAC;AAKD,aAAK,YAAY;AAAA,UACf,MAAM,gBAAgB,EAAE,MAAM,OAAO,CAAC;AAAA,UACtC,OAAO;AAAA,QACT,CAAC;AAED,YAAI,WAAW,OAAO,MAAM,KAAK,OAAK,EAAE,SAAS,gBAAgB;AACjE,YAAI,gBAAgB;AAEpB,YAAI,YAAY,CAAC,UAAU,SAAS,UAAU,MAAM,GAAG;AACrD,0BAAgB,SAAS,MAAM,KAAK;AAAA,QACtC;AACA,YAAI,WAAW,aAAa;AAI1B,cAAI,UAAU,OAAO,MAAM,KAAK,OAAK,EAAE,SAAS,oBAAoB;AAEpE,cAAI,CAAC,WAAW,iBAAiB;AAC/B,mBAAO;AAAA,UACT,WAAW,CAAC,WAAW,CAAC,iBAAiB;AACvC,iBAAK;AAAA,cACH;AAAA,cACA;AAAA,YACF;AACA,mBAAO;AAAA,UACT;AAKA,cAAI,aAAa,OAAO,MAAM,KAAK,OAAK;AACtC,mBAAO,EAAE,SAAS;AAAA,UACpB,CAAC;AACD,cAAI,CAAC,cAAc,CAAC,iBAAiB;AACnC,iBAAK;AAAA,cACH;AAAA,cACA;AAAA,YACF;AAAA,UACF;AAKA,cAAI,gBAAgB,CAAC,iBAAiB;AACpC,+BAAmB,MAAM,QAAQ,KAAK,aAAa;AAAA,UACrD;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,oBAAgB,QAAQ;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC5HjB;AAAA;AAAA,QAAI,cAAc;AAElB,QAAM,kBAAN,cAA8B,YAAY;AAAA,MAIxC,MAAM,MAAM;AACV,eAAO,CAAC,KAAK,MAAM,SAAS,OAAO,KAAK,KAAK,UAAU;AAAA,MACzD;AAAA,MAKA,SAAS,MAAM,QAAQ;AACrB,eAAO,SAAS;AAAA,MAClB;AAAA,MAKA,YAAY;AACV,eAAO;AAAA,MACT;AAAA,IACF;AAEA,oBAAgB,QAAQ,CAAC,mBAAmB;AAE5C,WAAO,UAAU;AAAA;AAAA;;;AC3BjB;AAAA;AAAA,QAAI,cAAc;AAElB,QAAM,mBAAN,cAA+B,YAAY;AAAA,MAIzC,SAAS,MAAM,QAAQ;AACrB,YAAI,WAAW,SAAS;AACtB,iBAAO;AAAA,QACT,OAAO;AACL,iBAAO,SAAS;AAAA,QAClB;AAAA,MACF;AAAA,MAKA,YAAY;AACV,eAAO;AAAA,MACT;AAAA,IACF;AAEA,qBAAiB,QAAQ,CAAC,sBAAsB,cAAc;AAE9D,WAAO,UAAU;AAAA;AAAA;;;ACxBjB;AAAA;AAAA,QAAI,cAAc;AAElB,QAAM,qBAAN,cAAiC,YAAY;AAAA,MAI3C,SAAS,MAAM,QAAQ;AACrB,eAAO,SAAS;AAAA,MAClB;AAAA,MAKA,YAAY;AACV,eAAO;AAAA,MACT;AAAA,MAKA,IAAI,MAAM,QAAQ;AAChB,YAAI,KAAK,UAAU,QAAQ;AACzB,eAAK,QAAQ;AAAA,QACf,WAAW,KAAK,UAAU,UAAU,KAAK,UAAU,WAAW;AAC5D,eAAK,QAAQ;AAAA,QACf;AACA,eAAO,MAAM,IAAI,MAAM,MAAM;AAAA,MAC/B;AAAA,IACF;AAEA,uBAAmB,QAAQ,CAAC,uBAAuB,iBAAiB;AAEpE,WAAO,UAAU;AAAA;AAAA;;;AChCjB;AAAA;AAAA,QAAI,cAAc;AAClB,QAAI;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AAEJ,aAAS,YAAY,KAAK;AACxB,aAAO,IACJ,KAAK,EACL,MAAM,GAAG,EAAE,EACX,MAAM,eAAe;AAAA,IAC1B;AAEA,QAAM,oBAAN,cAAgC,YAAY;AAAA,MAI1C,OAAO,MAAM,QAAQ,UAAU,QAAQ;AACrC,YAAI,WAAW;AAAQ,iBAAO,MAAM,OAAO,MAAM,QAAQ,QAAQ;AAEjE,YAAI,aAAa;AACjB,YAAI,UAAU;AACd,YAAI,SAAS,KAAK;AAClB,YAAI,MAAM,WAAW,IAAI;AACzB,cAAM,eAAe,MAAM,GAAG,KAAK;AAInC,eAAO,UAAU,iBAAiB,OAAK,EAAE,OAAO,CAAC;AAGjD,eAAO,UAAU,gCAAgC,eAAa;AAC5D,cAAI,UAAU,SAAS,sBAAsB;AAC3C,sBAAU;AACV,gBAAI,EAAE,MAAM,MAAM,IAAI;AACtB,sBAAU,YAAY;AAAA,cACpB,MAAM,gBAAgB,EAAE,MAAM,OAAO,CAAC;AAAA,cACtC,OAAO,iBAAiB,EAAE,OAAO,KAAK,IAAI,IAAI,CAAC;AAAA,YACjD,CAAC;AAAA,UACH,OAAO;AACL,yBAAa;AAAA,UACf;AAAA,QACF,CAAC;AAED,YAAI,WAAW,YAAY,KAAK,KAAK;AAErC,YAAI,cAAc,CAAC,WAAW,IAAI,OAAO,SAAS,SAAS,GAAG;AAC5D,eAAK,YAAY;AAAA,YACf,MAAM;AAAA,YACN,OAAO,iBAAiB;AAAA,cACtB,OAAO,UAAU,SAAS;AAAA,cAC1B,KAAK,IAAI;AAAA,YACX,CAAC;AAAA,YACD,MAAM,CAAC;AAAA,UACT,CAAC;AAAA,QACH;AAGA,oBAAY;AAAA,UACV;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAED,YAAI,QAAQ,eAAe;AAAA,UACzB,MAAM;AAAA,UACN;AAAA,QACF,CAAC;AAED,wBAAgB,OAAO,MAAM,MAAM;AAEnC,eAAO;AAAA,MACT;AAAA,IACF;AAEA,sBAAkB,QAAQ,CAAC,qBAAqB;AAEhD,WAAO,UAAU;AAAA;AAAA;;;ACnFjB;AAAA;AAAA,QAAI,cAAc;AAElB,QAAM,uBAAN,cAAmC,YAAY;AAAA,MAC7C,IAAI,MAAM,QAAQ;AAChB,YAAI,WAAW,YAAY;AACzB,eAAK,QAAQ,KAAK,MAAM,QAAQ,uBAAuB,EAAE;AAAA,QAC3D;AACA,eAAO,MAAM,IAAI,MAAM,MAAM;AAAA,MAC/B;AAAA,IACF;AAEA,yBAAqB,QAAQ,CAAC,wBAAwB;AAEtD,WAAO,UAAU;AAAA;AAAA;;;ACbjB;AAAA;AAAA,QAAI,cAAc;AAElB,QAAM,wBAAN,cAAoC,YAAY;AAAA,MAI9C,IAAI,MAAM,QAAQ;AAChB,YAAI,KAAK,SAAS,8BAA8B,KAAK,UAAU,QAAQ;AACrE,eAAK,OAAO,SAAS;AACrB,eAAK,QAAQ;AACb,iBAAO;AAAA,QACT,OAAO;AACL,iBAAO,MAAM,IAAI,MAAM,MAAM;AAAA,QAC/B;AAAA,MACF;AAAA,IACF;AAEA,0BAAsB,QAAQ;AAAA,MAC5B;AAAA,MACA;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACtBjB;AAAA;AAAA;AACA,WAAO,UAAU;AAAA,MACf,MAAM;AAAA,MACN,OAAO;AAAA,MACP,UAAU;AAAA,MACV,MAAM;AAAA,MACN;AAAA,MACA;AAAA,IACF;AAEA,aAAS,UAAU,KAAK,KAAK,OAAO;AAClC,UAAI,aAAa,MAAM;AACvB,eAAS,QAAQ,OAAO,aAAa,cAAc,aAAa;AAAA,IAClE;AAEA,aAAS,WAAW,KAAK,KAAK,OAAO;AACnC,aAAO,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,CAAC;AAAA,IAC3C;AAEA,aAAS,cAAc,KAAK,KAAK,OAAO,cAAc,cAAc;AAClE,UAAI,CAAC,UAAU,KAAK,KAAK,OAAO,cAAc,YAAY,GAAG;AAC3D,cAAM,IAAI,MAAM,QAAQ,2BAA2B,MAAM,MAAM,MAAM,GAAG;AAAA,MAC1E;AACA,aAAO;AAAA,IACT;AAEA,aAAS,UAAU,KAAK,KAAK,OAAO,cAAc,cAAc;AAC9D,aAAO,EACF,QAAQ,OACR,QAAQ,OACP,gBAAiB,UAAU,OAC3B,gBAAiB,UAAU;AAAA,IAEnC;AAEA,aAAS,KAAK,KAAK,KAAK,SAAS,SAAS;AACxC,cAAQ,UAAU,MAAM,OAAO,MAAM,MAAM,OAAO,UAAU,MAAM;AAAA,IACpE;AAEA,aAAS,MAAM,KAAK,KAAK,cAAc,cAAc;AACnD,UAAI,cAAc,KAAK,KAAK,MAAM,KAAK,KAAK,cAAc,YAAY;AACtE,aAAO;AAAA,QACL,MAAM,UAAU,KAAK,MAAM,KAAK,GAAG;AAAA,QACnC,OAAO,WAAW,KAAK,MAAM,KAAK,GAAG;AAAA,QACrC,UAAU,SAAS,OAAO;AACxB,iBAAO,cAAc,KAAK,KAAK,OAAO,cAAc,YAAY;AAAA,QAClE;AAAA,QACA,MAAM,SAAS,OAAO;AACpB,iBAAO,UAAU,KAAK,KAAK,OAAO,cAAc,YAAY;AAAA,QAC9D;AAAA,QACA,UAAU;AAAA,QACV,MAAM;AAAA,MACR;AAAA,IACF;AAAA;AAAA;;;ACrDA;AAAA;AAAA,QAAI,SAAS;AACb,QAAI,QAAQ;AAEZ,QAAI,WAAW;AACf,QAAI,QAAQ;AACZ,QAAI,QAAQ;AAEZ,QAAI,eAAe;AAEnB,QAAM,WAAN,cAAuB,MAAM;AAAA,MAI3B,QAAQ,QAAQ,QAAQ;AACtB,YAAI,MAAM,OAAO,MAAM;AACvB,iBAAS,QAAQ,IAAI,OAAO;AAC1B,cAAI,KAAK,SAAS,cAAc,KAAK,UAAU,KAAK,MAAM;AACxD,iBAAK,QAAQ,KAAK,aAAa,KAAK,KAAK;AACzC,iBAAK,QAAQ,KAAK,UAAU,KAAK,KAAK;AACtC,gBAAI,WAAW,gBAAgB;AAC7B,kBAAI,UAAU,KAAK,UAAU,IAAI;AACjC,kBAAI,CAAC,SAAS;AACZ,uBAAO;AAAA,cACT;AAAA,YACF,OAAO;AACL,mBAAK,QAAQ,KAAK,iBAAiB,KAAK,KAAK;AAC7C,mBAAK,QAAQ,SAAS,KAAK;AAAA,YAC7B;AAAA,UACF;AAAA,QACF;AACA,eAAO,IAAI,SAAS;AAAA,MACtB;AAAA,MAKA,aAAa,WAAW,OAAO;AAC7B,YAAI,SAAS,MAAM,IAAI,OAAK;AAC1B,cAAI,MAAM,KAAK;AACb,mBAAO,EAAE,MAAM,SAAS,OAAO,EAAE;AAAA,UACnC;AACA,iBAAO,EAAE,MAAM,QAAQ,OAAO,EAAE;AAAA,QAClC,CAAC;AACD,eAAO,OAAO,OAAO,OAAO,MAAM,CAAC,CAAC;AAAA,MACtC;AAAA,MAKA,cAAc,KAAK,MAAM;AACvB,YAAI,MAAM,WAAW,GAAG;AACxB,YAAI,MAAO,MAAM,OAAQ;AACzB,eAAO,GAAG;AAAA,MACZ;AAAA,MAKA,UAAU,OAAO;AACf,YAAI,CAAC,MAAM;AAAI,iBAAO;AAEtB,YAAI,mBAAmB,KAAK,MAAM,GAAG,KAAK,GAAG;AAC3C,gBAAM,GAAG,QAAQ,KAAK,cAAc,MAAM,GAAG,OAAO,GAAG;AAAA,QACzD,WAAW,kBAAkB,KAAK,MAAM,GAAG,KAAK,GAAG;AACjD,gBAAM,GAAG,QAAQ,KAAK,cAAc,MAAM,GAAG,OAAO,IAAI,KAAK,EAAE;AAAA,QACjE,WAAW,mBAAmB,KAAK,MAAM,GAAG,KAAK,GAAG;AAClD,gBAAM,GAAG,QAAQ,KAAK,cAAc,MAAM,GAAG,OAAO,CAAC;AAAA,QACvD,WAAW,MAAM,GAAG,MAAM,SAAS,KAAK,GAAG;AACzC,cAAI,MAAM,WAAW,MAAM,GAAG,KAAK;AACnC,gBAAM,MAAM,KAAK,GAAG,KAAK,GAAG;AAC5B,gBAAM,GAAG,QAAQ,GAAG;AAAA,QACtB;AAEA,YAAI,MAAM,GAAG,UAAU,QAAQ;AAC7B,kBAAQ,KAAK,aAAa,OAAO,MAAM,KAAK,KAAK;AAAA,QACnD,WAAW,MAAM,GAAG,UAAU,SAAS;AACrC,kBAAQ,KAAK,aAAa,OAAO,MAAM,KAAK,OAAO;AAAA,QACrD,WAAW,MAAM,GAAG,UAAU,UAAU;AACtC,kBAAQ,KAAK,aAAa,OAAO,MAAM,KAAK,QAAQ;AAAA,QACtD,WAAW,MAAM,GAAG,UAAU,UAAU;AACtC,kBAAQ,KAAK,aAAa,OAAO,MAAM,KAAK,MAAM;AAAA,QACpD;AAEA,eAAO;AAAA,MACT;AAAA,MAKA,aAAa,QAAQ;AACnB,YAAI,OAAO,GAAG,UAAU,MAAM;AAC5B,iBAAO;AAAA,QACT;AACA,qBAAa,YAAY;AACzB,YAAI,CAAC,aAAa,KAAK,OAAO,GAAG,KAAK,GAAG;AACvC,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,UACL;AAAA,YACE,MAAM;AAAA,YACN,OAAO;AAAA,UACT;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,OAAO;AAAA,UACT;AAAA,QACF;AAEA,iBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,cAAI,OAAO,GAAG,SAAS,OAAO;AAC5B;AAAA,UACF;AACA,cAAI,OAAO,GAAG,SAAS,QAAQ;AAC7B,mBAAO,GAAG,QAAQ,KAAK,gBAAgB,OAAO,GAAG,KAAK;AAAA,UACxD;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,MAKA,SAAS,QAAQ;AACf,YAAI,QAAQ;AACZ,iBAAS,SAAS,QAAQ;AACxB,cAAI,UAAU,YAAY,MAAM,SAAS,SAAS;AAChD,oBAAQ;AAAA,UACV,WAAW,UAAU,QAAQ,MAAM,UAAU,MAAM;AACjD,oBAAQ;AAAA,UACV,WAAW,UAAU,WAAW,MAAM,SAAS,SAAS;AACtD,mBAAO;AAAA,UACT,WAAW,MAAM,SAAS,OAAO;AAC/B;AAAA,UACF,OAAO;AACL,oBAAQ;AAAA,UACV;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA,MAKA,iBAAiB,QAAQ;AACvB,YAAI,OAAO,SAAS,GAAG;AACrB,cAAI,OAAO,GAAG,UAAU,MAAM;AAC5B,iBAAK,aAAa,MAAM;AAAA,UAC1B,WAAW,OAAO,GAAG,MAAM,SAAS,KAAK,GAAG;AAC1C,iBAAK,SAAS,MAAM;AAAA,UACtB,WAAW,KAAK,SAAS,MAAM,GAAG;AAChC,iBAAK,UAAU,MAAM;AAAA,UACvB;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA,MAKA,aAAa,QAAQ;AACnB,eAAO,OAAO,GAAG,CAAC;AAElB,iBAAS,SAAS,QAAQ;AACxB,cAAI,MAAM,SAAS,OAAO;AACxB;AAAA,UACF;AACA,cAAI,MAAM,SAAS,QAAQ;AACzB,kBAAM,QAAQ,KAAK,gBAAgB,MAAM,KAAK;AAAA,UAChD;AAAA,QACF;AAAA,MACF;AAAA,MAKA,SAAS,QAAQ;AACf,YAAI,QAAQ,OAAO,GAAG;AACtB,gBAAQ,WAAW,KAAK;AACxB,gBAAQ,KAAK,IAAI,MAAM,KAAK,IAAI;AAChC,gBAAQ,KAAK,WAAW,OAAO,CAAC;AAChC,eAAO,GAAG,QAAQ,GAAG;AAAA,MACvB;AAAA,MAKA,UAAU,QAAQ;AAChB,YAAI,QAAQ,CAAC;AACb,YAAI,SAAS,CAAC;AACd,YAAI,GAAG,GAAG,GAAG,GAAG;AAEhB,aAAK,IAAI,GAAG,IAAI,OAAO,SAAS,GAAG,KAAK;AACtC,cAAI,OAAO;AACX,cAAI,OAAO,IAAI;AACf,cAAI,OAAO,IAAI;AACf,cAAI,EAAE,SAAS,WAAW,EAAE,UAAU,QAAQ,EAAE,SAAS,SAAS;AAChE,mBAAO,IAAI;AACX;AAAA,UACF,OAAO;AACL,kBAAM,KAAK,CAAC;AAAA,UACd;AAAA,QACF;AAEA,YAAI;AACJ,aAAK,IAAI,MAAM,IAAI,OAAO,QAAQ,KAAK;AACrC,cAAI,OAAO,GAAG,SAAS,OAAO;AAC5B,kBAAM,OAAO;AACb;AAAA,UACF,OAAO;AACL,mBAAO,KAAK,OAAO,EAAE;AAAA,UACvB;AAAA,QACF;AAEA,eAAO,OAAO,GAAG,GAAG,GAAG,QAAQ,KAAK,GAAG,KAAK;AAAA,MAC9C;AAAA,MAEA,gBAAgB,MAAM;AACpB,eAAO,SAAS,WAAW,KAAK,YAAY,MAAM;AAAA,MACpD;AAAA,MAKA,WAAW,OAAO,QAAQ;AACxB,eAAO,WAAW,MAAM,QAAQ,MAAM,CAAC;AAAA,MACzC;AAAA,MAKA,UAAU,MAAM;AACd,YAAI,EAAE,MAAM,IAAI;AAChB,YAAI,SAAS,OAAO,UAAU,KAAK,KAAK;AAExC,YAAI,KAAK,SAAS,mBAAmB;AACnC,iBAAO;AAAA,QACT;AACA,YAAI,MAAM,MAAM,MAAM,GAAG,MAAM,SAAS,KAAK,GAAG;AAC9C,iBAAO;AAAA,QACT;AACA,YACE,OAAO,SAAS,IAAI,KACpB,OAAO,SAAS,SAAS,KACzB,OAAO,SAAS,OAAO,GACvB;AACA,iBAAO;AAAA,QACT;AAEA,YAAI,SAAS,CAAC,CAAC,CAAC;AAChB,iBAAS,KAAK,OAAO;AACnB,iBAAO,OAAO,SAAS,GAAG,KAAK,CAAC;AAChC,cAAI,EAAE,SAAS,SAAS,EAAE,UAAU,KAAK;AACvC,mBAAO,KAAK,CAAC,CAAC;AAAA,UAChB;AAAA,QACF;AAEA,aAAK,aAAa,MAAM;AACxB,aAAK,WAAW,MAAM;AAEtB,aAAK,QAAQ,CAAC;AACd,iBAAS,SAAS,QAAQ;AACxB,eAAK,QAAQ,KAAK,MAAM,OAAO,KAAK;AAAA,QACtC;AAEA,aAAK,MAAM;AAAA,UACT,EAAE,MAAM,QAAQ,OAAO,SAAS;AAAA,UAChC,KAAK,SAAS,KAAK,KAAK;AAAA,QAC1B;AACA,aAAK,QAAQ;AAEb,eAAO;AAAA,MACT;AAAA,MAKA,aAAa,QAAQ;AACnB,YAAI,MAAM,KAAK,SAAS,OAAO,EAAE;AAEjC,YAAI,OAAO,GAAG,GAAG,UAAU,MAAM;AAC/B,iBAAO,OAAO,QAAQ;AAAA,YACpB,EAAE,MAAM,QAAQ,OAAO,SAAS,cAAc,OAAO;AAAA,YACrD;AAAA,UACF,CAAC;AAAA,QACH,OAAO;AACL,cAAI,QAAQ,CAAC;AACb,mBAAS,QAAQ,OAAO,GAAG,MAAM,CAAC,GAAG;AACnC,gBAAI,KAAK,SAAS,QAAQ;AACxB,oBAAM,KAAK,KAAK,MAAM,YAAY,CAAC;AAAA,YACrC;AAAA,UACF;AAEA,kBAAQ,MAAM,KAAK,GAAG;AACtB,cAAI,MAAM,SAAS,cAAc,UAAU;AAE3C,iBAAO,KAAK,CAAC,EAAE,MAAM,QAAQ,OAAO,IAAI,GAAG,GAAG;AAC9C,iBAAO,OAAO;AAAA,QAChB;AAAA,MACF;AAAA,MAKA,SAAS,QAAQ;AACf,iBAAS,KAAK,QAAQ;AACpB,cAAI,EAAE,SAAS,SAAS,EAAE,UAAU,KAAK;AACvC,mBAAO;AAAA,UACT;AAAA,QACF;AACA,eAAO,EAAE,MAAM,OAAO,OAAO,KAAK,OAAO,IAAI;AAAA,MAC/C;AAAA,MAKA,WAAW,QAAQ;AACjB,YAAI,SAAS,CAAC;AACd,iBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,cAAI;AACJ,cAAI,QAAQ,OAAO;AACnB,cAAI;AACJ,cAAI,MAAM,GAAG;AACX;AAAA,UACF;AAEA,cAAI,QAAQ,OAAO,UAAU,MAAM,EAAE;AACrC,cAAI,MAAM,MAAM,MAAM,GAAG,SAAS,QAAQ;AACxC,kBAAM,MAAM,GAAG;AAAA,UACjB,WAAW,MAAM,MAAM,MAAM,GAAG,SAAS,QAAQ;AAC/C,kBAAM,MAAM,GAAG;AAAA,UACjB;AAEA,cAAI;AACJ,cAAI,MAAM,MAAM,CAAC,OAAO,QAAQ,OAAO;AACrC,mBAAO,QAAQ;AAAA,UACjB,WAAW,MAAM,OAAO,SAAS,MAAM,CAAC,OAAO,QAAQ,SAAS;AAC9D,mBAAO,MAAM;AAAA,UACf,WAAW,KAAK;AACd,mBAAO,cAAc,QAAQ;AAAA,UAC/B,OAAO;AACL,mBAAO,cAAc;AAAA,UACvB;AAEA,cAAI,MAAM,MAAM,MAAM,SAAS;AAC/B,iBAAO,KAAK,CAAC,EAAE,MAAM,QAAQ,OAAO,KAAK,CAAC;AAC1C,cAAI,IAAI,SAAS,SAAS,IAAI,UAAU,KAAK;AAC3C,mBAAO,OAAO,GAAG,KAAK,GAAG;AAAA,UAC3B;AACA,iBAAO,KAAK,IAAI;AAAA,QAClB;AACA,eAAO;AAAA,MACT;AAAA,MAKA,IAAI,QAAQ;AACV,YAAI,WAAW,YAAY;AACzB,cAAI,OAAO,KAAK,SAAS,oBAAoB,WAAW;AACxD,cAAI,SAAS;AACb,cAAI,SAAS,MAAM;AAAA,YACjB,YAAY,gCAAgC;AAAA,YAC5C;AAAA,UACF;AAEA,iBAAO,IAAI,SAAS,KAAK,MAAM,SAAS,KAAK,MAAM,QAAQ,MAAM;AAAA,QACnE,OAAO;AACL,iBAAO,MAAM,IAAI,MAAM;AAAA,QACzB;AAAA,MACF;AAAA,MAKA,IAAI,MAAM,QAAQ;AAChB,YAAI,IAAI,KAAK;AACb,YAAI,EAAE,SAAS,MAAM,GAAG;AACtB,cAAI,WAAW,cAAc,WAAW,gBAAgB;AACtD,mBAAO,MAAM,IAAI,MAAM,MAAM;AAAA,UAC/B;AAAA,QACF,WACE,MAAM,gBACN,MAAM,sBACN,MAAM,WACN;AACA,cAAI,WAAW,cAAc,WAAW,gBAAgB;AACtD,mBAAO,MAAM,IAAI,MAAM,MAAM;AAAA,UAC/B;AAAA,QACF,OAAO;AACL,iBAAO,MAAM,IAAI,MAAM,MAAM;AAAA,QAC/B;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,aAAS,QAAQ;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,aAAS,aAAa;AAAA,MACpB,KAAK;AAAA,MACL,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAGA,aAAS,gBAAgB;AAAA,MACvB,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,SAAS;AAAA,MAET,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,aAAa;AAAA,MACb,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,eAAe;AAAA,MACf,YAAY;AAAA,MACZ,eAAe;AAAA,IACjB;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC5ajB;AAAA;AAAA,QAAI,WAAW;AACf,QAAI,QAAQ;AAEZ,aAAS,OAAO,MAAM;AACpB,aAAO,IAAI,OAAO,eAAe,oBAAoB,IAAI;AAAA,IAC3D;AAEA,QAAM,YAAN,cAAwB,MAAM;AAAA,MAC5B,SAAS;AACP,YAAI,CAAC,KAAK;AAAa,eAAK,cAAc,OAAO,KAAK,IAAI;AAC1D,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,YAAY;AACV,eACE,KAAK,SAAS,aACd,KAAK,SAAS,UACd,KAAK,SAAS;AAAA,MAElB;AAAA,MAEA,QAAQ,QAAQ,QAAQ;AACtB,YAAI,WAAW,WAAW,KAAK,UAAU,GAAG;AAC1C,iBAAO,OAAO,QAAQ,KAAK,OAAO,GAAG,oBAAoB;AAAA,QAC3D;AACA,YAAI,WAAW,cAAc,KAAK,UAAU,GAAG;AAC7C,iBAAO,OAAO,QAAQ,KAAK,OAAO,GAAG,4BAA4B;AAAA,QACnE;AACA,eAAO,MAAM,QAAQ,QAAQ,MAAM;AAAA,MACrC;AAAA,MAEA,IAAI,QAAQ;AACV,YAAI,WAAW,SAAS,KAAK;AAC7B,YAAI,KAAK,UAAU,GAAG;AACpB,cAAI,WAAW,SAAS;AACtB,uBAAW;AAAA,UACb,WAAW,WAAW,YAAY;AAChC,uBAAW;AAAA,UACb;AAAA,QACF;AACA,eAAO,IAAI,SAAS,KAAK,MAAM,UAAU,UAAU,OAAO,QAAQ,CAAC;AAAA,MACrE;AAAA,MAEA,IAAI,MAAM,QAAQ;AAChB,YAAI,KAAK,KAAK,SAAS,MAAM,KAAK,WAAW,YAAY;AACvD,iBAAO;AAAA,QACT;AACA,eAAO,MAAM,IAAI,MAAM,MAAM;AAAA,MAC/B;AAAA,IACF;AAEA,cAAU,QAAQ;AAAA,MAChB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC5DjB;AAAA;AAAA,QAAI,WAAW;AACf,QAAI,QAAQ;AAEZ,QAAM,YAAN,cAAwB,MAAM;AAAA,MAI5B,QAAQ,QAAQ,QAAQ;AACtB,YAAI,WAAW,YAAY;AACzB,iBAAO,OAAO,QAAQ,KAAK,OAAO,GAAG,6BAA6B;AAAA,QACpE;AACA,YAAI,WAAW,SAAS;AACtB,iBAAO,OAAO,QAAQ,KAAK,OAAO,GAAG,oBAAoB;AAAA,QAC3D;AACA,eAAO,MAAM,QAAQ,QAAQ,MAAM;AAAA,MACrC;AAAA,MAKA,IAAI,QAAQ;AACV,YAAI,WAAW,YAAY;AACzB,iBAAO,IAAI,SAAS,KAAK,MAAM,2BAA2B;AAAA,QAC5D;AACA,YAAI,WAAW,SAAS;AACtB,iBAAO,IAAI,SAAS,KAAK,MAAM,kBAAkB;AAAA,QACnD;AACA,eAAO,MAAM,IAAI,MAAM;AAAA,MACzB;AAAA,IACF;AAEA,cAAU,QAAQ,CAAC,WAAW;AAE9B,WAAO,UAAU;AAAA;AAAA;;;ACjCjB;AAAA;AAAA,QAAI,QAAQ;AAEZ,QAAM,WAAN,cAAuB,MAAM;AAAA,MAI3B,QAAQ,QAAQ,QAAQ;AACtB,YAAI,QAAQ,MAAM,QAAQ,QAAQ,MAAM;AACxC,YAAI,WAAW,YAAY;AACzB,kBAAQ,MAAM,QAAQ,iCAAiC,WAAW;AAAA,QACpE;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,aAAS,QAAQ,CAAC,WAAW;AAE7B,WAAO,UAAU;AAAA;AAAA;;;ACjBjB;AAAA;AAAA,QAAI,OAAO,kBAAmB;AAE9B,QAAI,QAAQ;AAEZ,QAAM,YAAN,cAAwB,MAAM;AAAA,MAC5B,QAAQ,QAAQ,QAAQ;AACtB,eAAO,KACJ,MAAM,MAAM,EACZ,IAAI,WAAS;AACZ,cAAI,MAAM,MAAM,GAAG,CAAC,KAAK,KAAK,SAAS,CAAC,MAAM,KAAK,OAAO,KAAK;AAC7D,mBAAO;AAAA,UACT;AAEA,cAAI,QAAQ,MAAM,YAAY,GAAG;AACjC,cAAI,QAAQ,MAAM,MAAM,QAAQ,CAAC;AACjC,cAAI,OAAO,MAAM,MAAM,KAAK,KAAK,SAAS,GAAG,KAAK;AAElD,cAAI,WAAW,YAAY;AACzB,gBAAI,QAAQ,KAAK,MAAM,YAAY;AACnC,gBAAI,OAAO;AACT,qBAAO,KAAK,MAAM,MAAM,GAAG,MAAM,EAAE,KAAK;AACxC,sBAAQ,KAAK,MAAM;AAAA,YACrB,OAAO;AACL,sBAAQ;AAAA,YACV;AAAA,UACF;AACA,iBAAO,SAAS,KAAK,OAAO,MAAM,OAAO,MAAM;AAAA,QACjD,CAAC,EACA,KAAK,GAAG;AAAA,MACb;AAAA,IACF;AAEA,cAAU,QAAQ,CAAC,YAAY;AAE/B,WAAO,UAAU;AAAA;AAAA;;;AClCjB;AAAA;AAAA,QAAI,WAAW;AACf,QAAI,WAAW;AACf,QAAI,QAAQ;AAEZ,QAAM,cAAN,cAA0B,MAAM;AAAA,MAC9B,YAAY,MAAM,UAAU;AAC1B,cAAM,MAAM,QAAQ;AACpB,YAAI,SAAS,gBAAgB;AAC3B,eAAK,OAAO;AAAA,QACd;AAAA,MACF;AAAA,MAKA,MAAM,MAAM;AACV,eAAO,KAAK,SAAS,aAAa,KAAK,UAAU,KAAK;AAAA,MACxD;AAAA,MAKA,SAAS,QAAQ;AACf,YAAI,MAAM;AACT,SAAC,MAAM,MAAM,IAAI,SAAS,MAAM;AAEjC,YAAI,SAAS,MAAM;AACjB,cAAI,KAAK,SAAS,QAAQ;AACxB,oBAAQ;AAAA,UACV,OAAO;AACL,oBAAQ;AAAA,UACV;AAAA,QACF,WAAW,SAAS,MAAM;AACxB,cAAI,KAAK,SAAS,QAAQ;AACxB,oBAAQ;AAAA,UACV,OAAO;AACL,oBAAQ;AAAA,UACV;AAAA,QACF,WAAW,SAAS,SAAS;AAC3B,kBAAQ,KAAK;AAAA,QACf;AAEA,eAAO,SAAS;AAAA,MAClB;AAAA,MAKA,QAAQ,QAAQ,QAAQ;AACtB,eAAO,KAAK,SAAS,MAAM;AAAA,MAC7B;AAAA,MAKA,IAAI,QAAQ;AACV,YAAI,WAAW,KAAK,SAAS,MAAM;AACnC,YAAI,CAAC;AAAU,iBAAO;AACtB,eAAO,IAAI,SAAS,KAAK,MAAM,QAAQ;AAAA,MACzC;AAAA,IACF;AAEA,gBAAY,QAAQ,CAAC,gBAAgB,aAAa;AAElD,WAAO,UAAU;AAAA;AAAA;;;AChEjB;AAAA;AAAA,QAAI,QAAQ;AAEZ,QAAM,cAAN,cAA0B,MAAM;AAAA,MAC9B,YAAY,MAAM,UAAU;AAC1B,cAAM,MAAM,QAAQ;AACpB,YAAI,SAAS,gBAAgB;AAC3B,eAAK,OAAO;AAAA,QACd;AAAA,MACF;AAAA,MAKA,MAAM,MAAM;AACV,eAAO,KAAK,SAAS,aAAa,KAAK,UAAU,KAAK;AAAA,MACxD;AAAA,IACF;AAEA,gBAAY,QAAQ,CAAC,gBAAgB,aAAa;AAElD,WAAO,UAAU;AAAA;AAAA;;;ACpBjB;AAAA;AAAA,QAAI,QAAQ;AAEZ,QAAM,cAAN,cAA0B,MAAM;AAAA,MAC9B,YAAY,MAAM,UAAU;AAC1B,cAAM,MAAM,QAAQ;AACpB,YAAI,SAAS,mBAAmB;AAC9B,eAAK,OAAO;AAAA,QACd;AAAA,MACF;AAAA,IACF;AAEA,gBAAY,QAAQ,CAAC,UAAU,iBAAiB;AAEhD,WAAO,UAAU;AAAA;AAAA;;;ACbjB;AAAA;AAAA,QAAI,WAAW;AACf,QAAI,QAAQ;AAEZ,QAAM,WAAN,cAAuB,SAAS;AAAA,MAC9B,YAAY,MAAM,UAAU,KAAK;AAC/B,cAAM,MAAM,UAAU,GAAG;AAEzB,YAAI,KAAK,UAAU;AACjB,eAAK,WAAW,MAAM,KAAK,KAAK,SAAS,IAAI,MAAM,UAAU,CAAC;AAAA,QAChE;AAAA,MACF;AAAA,MAKA,SAAS,QAAQ;AACf,YAAI,WAAW,YAAY;AACzB,iBAAO;AAAA,QACT;AACA,eAAO,IAAI;AAAA,MACb;AAAA,IACF;AAEA,aAAS,QAAQ,CAAC,WAAW;AAE7B,WAAO,UAAU;AAAA;AAAA;;;ACzBjB;AAAA;AAAA,QAAI,SAAS;AACb,QAAI,cAAc;AAClB,QAAI,aAAa;AACjB,QAAI,aAAa;AACjB,QAAI,YAAY;AAChB,QAAI,WAAW;AACf,QAAI,WAAW;AACf,QAAI,WAAW;AACf,QAAI,SAAS;AACb,QAAI,QAAQ;AACZ,QAAI,QAAQ;AACZ,QAAI,iBAAiB;AACrB,QAAI,kBAAkB;AACtB,QAAI,uBAAuB;AAC3B,QAAI,yBAAyB;AAC7B,QAAI,WAAW;AACf,QAAI,YAAY;AAChB,QAAI,aAAa;AACjB,QAAI,cAAc;AAClB,QAAI,gBAAgB;AACpB,QAAI,eAAe;AACnB,QAAI,eAAe;AACnB,QAAI,eAAe;AACnB,QAAI,eAAe;AACnB,QAAI,gBAAgB;AACpB,QAAI,gBAAgB;AACpB,QAAI,gBAAgB;AACpB,QAAI,iBAAiB;AACrB,QAAI,gBAAgB;AACpB,QAAI,iBAAiB;AACrB,QAAI,oBAAoB;AACxB,QAAI,iBAAiB;AACrB,QAAI,iBAAiB;AACrB,QAAI,iBAAiB;AACrB,QAAI,iBAAiB;AACrB,QAAI,kBAAkB;AACtB,QAAI,kBAAkB;AACtB,QAAI,mBAAmB;AACvB,QAAI,mBAAmB;AACvB,QAAI,mBAAmB;AACvB,QAAI,mBAAmB;AACvB,QAAI,oBAAoB;AACxB,QAAI,mBAAmB;AACvB,QAAI,oBAAoB;AACxB,QAAI,oBAAoB;AACxB,QAAI,qBAAqB;AACzB,QAAI,qBAAqB;AACzB,QAAI,qBAAqB;AACzB,QAAI,qBAAqB;AACzB,QAAI,qBAAqB;AACzB,QAAI,qBAAqB;AACzB,QAAI,oBAAoB;AACxB,QAAI,sBAAsB;AAC1B,QAAI,sBAAsB;AAC1B,QAAI,uBAAuB;AAC3B,QAAI,yBAAyB;AAC7B,QAAI,wBAAwB;AAC5B,QAAI,2BAA2B;AAC/B,QAAI,4BAA4B;AAChC,QAAI,eAAe;AACnB,QAAI,gBAAgB;AACpB,QAAI,gBAAgB;AACpB,QAAI,eAAe;AACnB,QAAI,gBAAgB;AACpB,QAAI,kBAAkB;AACtB,QAAI,kBAAkB;AACtB,QAAI,kBAAkB;AACtB,QAAI,eAAe;AAEnB,aAAS,KAAK,YAAY;AAC1B,aAAS,KAAK,cAAc;AAC5B,aAAS,KAAK,eAAe;AAC7B,aAAS,KAAK,oBAAoB;AAClC,aAAS,KAAK,sBAAsB;AACpC,gBAAY,KAAK,QAAQ;AACzB,gBAAY,KAAK,SAAS;AAC1B,gBAAY,KAAK,UAAU;AAC3B,gBAAY,KAAK,WAAW;AAC5B,gBAAY,KAAK,aAAa;AAC9B,gBAAY,KAAK,YAAY;AAC7B,gBAAY,KAAK,YAAY;AAC7B,gBAAY,KAAK,YAAY;AAC7B,gBAAY,KAAK,YAAY;AAC7B,gBAAY,KAAK,aAAa;AAC9B,gBAAY,KAAK,aAAa;AAC9B,gBAAY,KAAK,aAAa;AAC9B,gBAAY,KAAK,cAAc;AAC/B,gBAAY,KAAK,aAAa;AAC9B,gBAAY,KAAK,cAAc;AAC/B,gBAAY,KAAK,iBAAiB;AAClC,gBAAY,KAAK,cAAc;AAC/B,gBAAY,KAAK,cAAc;AAC/B,gBAAY,KAAK,cAAc;AAC/B,gBAAY,KAAK,cAAc;AAC/B,gBAAY,KAAK,eAAe;AAChC,gBAAY,KAAK,eAAe;AAChC,gBAAY,KAAK,gBAAgB;AACjC,gBAAY,KAAK,gBAAgB;AACjC,gBAAY,KAAK,gBAAgB;AACjC,gBAAY,KAAK,gBAAgB;AACjC,gBAAY,KAAK,iBAAiB;AAClC,gBAAY,KAAK,gBAAgB;AACjC,gBAAY,KAAK,iBAAiB;AAClC,gBAAY,KAAK,iBAAiB;AAClC,gBAAY,KAAK,kBAAkB;AACnC,gBAAY,KAAK,kBAAkB;AACnC,gBAAY,KAAK,kBAAkB;AACnC,gBAAY,KAAK,kBAAkB;AACnC,gBAAY,KAAK,kBAAkB;AACnC,gBAAY,KAAK,kBAAkB;AACnC,gBAAY,KAAK,iBAAiB;AAClC,gBAAY,KAAK,mBAAmB;AACpC,gBAAY,KAAK,mBAAmB;AACpC,gBAAY,KAAK,sBAAsB;AACvC,gBAAY,KAAK,qBAAqB;AACtC,gBAAY,KAAK,oBAAoB;AACrC,gBAAY,KAAK,wBAAwB;AACzC,gBAAY,KAAK,yBAAyB;AAC1C,UAAM,KAAK,YAAY;AACvB,UAAM,KAAK,aAAa;AACxB,UAAM,KAAK,aAAa;AACxB,UAAM,KAAK,YAAY;AACvB,UAAM,KAAK,aAAa;AACxB,UAAM,KAAK,eAAe;AAC1B,UAAM,KAAK,eAAe;AAC1B,UAAM,KAAK,eAAe;AAE1B,QAAI,aAAa,oBAAI,IAAI;AAEzB,QAAM,WAAN,MAAe;AAAA,MACb,YAAY,MAAM,UAAU,UAAU,CAAC,GAAG;AACxC,aAAK,OAAO;AACZ,aAAK,WAAW;AAChB,aAAK,UAAU;AACd,SAAC,KAAK,KAAK,KAAK,MAAM,IAAI,KAAK,WAAW,KAAK,OAAO,KAAK,IAAI,CAAC;AACjE,aAAK,aAAa,IAAI,WAAW,IAAI;AACrC,aAAK,YAAY,IAAI,UAAU,IAAI;AAAA,MACrC;AAAA,MAKA,UAAU;AACR,YAAI,KAAK,cAAc;AACrB,iBAAO,KAAK;AAAA,QACd;AAEA,YAAI,KAAK,SAAS,SAAS,QAAQ;AACjC,cAAI,QAAQ,IAAI,SAAS,KAAK,SAAS,MAAM,CAAC,CAAC;AAC/C,eAAK,eAAe,IAAI,SAAS,KAAK,MAAM,OAAO,KAAK,OAAO;AAAA,QACjE,OAAO;AACL,iBAAO;AAAA,QACT;AAEA,eAAO,KAAK;AAAA,MACd;AAAA,MAKA,OAAO,MAAM;AACX,YAAI,WAAW,EAAE,KAAK,CAAC,GAAG,QAAQ,CAAC,EAAE;AAErC,iBAAS,QAAQ,MAAM;AACrB,cAAI,OAAO,KAAK;AAChB,cAAI,MAAM,KAAK,SAAS,IAAI,OAAK;AAC/B,gBAAI,SAAS,EAAE,MAAM,GAAG;AACxB,mBAAO;AAAA,cACL,SAAS,GAAG,OAAO,MAAM,OAAO;AAAA,cAChC,MAAM,OAAO;AAAA,YACf;AAAA,UACF,CAAC;AAED,cAAI,QAAQ,IACT,OAAO,OAAK,EAAE,IAAI,EAClB,IAAI,OAAK,GAAG,KAAK,SAAS,OAAO,EAAE,OAAO,KAAK,EAAE,MAAM;AAC1D,kBAAQ,MAAM,KAAK,KAAK;AAExB,gBAAM,IACH,OAAO,OAAK,KAAK,SAAS,WAAW,EAAE,OAAO,CAAC,EAC/C,IAAI,OAAK;AACR,gBAAI,SAAS,KAAK,SAAS,OAAO,EAAE,OAAO;AAC3C,gBAAI,EAAE,MAAM;AACV,qBAAO,GAAG,UAAU,EAAE;AAAA,YACxB,OAAO;AACL,qBAAO;AAAA,YACT;AAAA,UACF,CAAC;AACH,gBAAM,KAAK,KAAK,MAAM,KAAK,GAAG,CAAC;AAE/B,cAAI,KAAK,QAAQ,YAAY,WAAW;AACtC,kBAAM,IAAI,OAAO,OAAK,CAAC,EAAE,SAAS,MAAM,CAAC;AAAA,UAC3C;AAEA,cAAI,MAAM,KAAK,SAAS,IAAI,OAAK,KAAK,SAAS,OAAO,CAAC,CAAC;AACxD,cAAI,KAAK,UAAU;AACjB,kBAAM,IAAI,OAAO,KAAK,QAAQ;AAAA,UAChC;AACA,gBAAM,IAAI,OAAO,KAAK;AACtB,gBAAM,MAAM,KAAK,GAAG;AAEpB,cAAI,IAAI,QAAQ;AACd,qBAAS,IAAI,QAAQ;AACrB,gBAAI,IAAI,SAAS,IAAI,QAAQ;AAC3B,uBAAS,OAAO,QAAQ,IAAI,OAAO,OAAK,CAAC,IAAI,SAAS,CAAC,CAAC;AAAA,YAC1D;AAAA,UACF,OAAO;AACL,qBAAS,OAAO,QAAQ;AAAA,UAC1B;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,MAKA,KAAK,UAAU;AACb,eAAO,SAAS,KAAK,CAAC,GAAG,MAAM;AAC7B,cAAI,UAAU,MAAM,WAAW,CAAC,EAAE;AAClC,cAAI,UAAU,MAAM,WAAW,CAAC,EAAE;AAElC,cAAI,YAAY,SAAS;AACvB,mBAAO,EAAE,SAAS,EAAE;AAAA,UACtB,OAAO;AACL,mBAAO,UAAU;AAAA,UACnB;AAAA,QACF,CAAC;AAAA,MACH;AAAA,MAKA,WAAW,UAAU;AACnB,YAAI,MAAM;AAAA,UACR,aAAa,CAAC;AAAA,UACd,aAAa,IAAI,SAAS,UAAU,IAAI;AAAA,QAC1C;AACA,iBAAS,QAAQ,SAAS,KAAK;AAC7B,cAAI,WAAW,SAAS,IAAI;AAC5B,cAAI,SAAS,gBAAgB,SAAS,aAAa;AACjD,gBAAI,QAAQ,IAAI,OAAO,MAAM,UAAU,IAAI;AAAA,UAC7C,WAAW,SAAS,eAAe;AACjC,gBAAI,QAAQ,IAAI,WAAW,MAAM,UAAU,IAAI;AAAA,UACjD,WAAW,KAAK,KAAK,MAAM,UAAU;AACnC,gBAAI,UAAU,KAAK,SAAS,KAAK,MAAM,UAAU,IAAI,CAAC;AAAA,UACxD,OAAO;AACL,gBAAI,QAAQ,KAAK,KAAK,MAAM;AAE5B,gBAAI,OAAO;AACT,kBAAI,QAAQ,MAAM,KAAK,MAAM,UAAU,IAAI;AAC3C,uBAAS,QAAQ,OAAO;AACtB,oBAAI,CAAC,IAAI,OAAO;AACd,sBAAI,QAAQ,EAAE,QAAQ,CAAC,EAAE;AAAA,gBAC3B;AACA,oBAAI,MAAM,OAAO,KAAK,KAAK;AAAA,cAC7B;AAAA,YACF,OAAO;AACL,kBAAI,SAAU,IAAI,SAAS,IAAI,MAAM,UAAW,CAAC;AACjD,kBAAI,QAAQ,YAAY,KAAK,MAAM,UAAU,IAAI;AACjD,kBAAI,MAAM,SAAS;AAAA,YACrB;AAAA,UACF;AAAA,QACF;AAEA,YAAI,SAAS,EAAE,WAAW,CAAC,EAAE;AAC7B,iBAAS,QAAQ,SAAS,QAAQ;AAChC,cAAI,WAAW,SAAS,OAAO;AAC/B,cAAI,KAAK,KAAK,MAAM,UAAU;AAC5B,gBAAI,WAAW,SAAS,KAAK,MAAM,QAAQ;AAC3C,qBAAS,UAAU,UAAU;AAC3B,qBAAO,UAAU,KAAK,SAAS,IAAI,MAAM,CAAC;AAAA,YAC5C;AAAA,UACF,WAAW,SAAS,gBAAgB,SAAS,aAAa;AACxD,qBAAS,UAAU,UAAU;AAC3B,kBAAI,WAAW,IAAI,SAAS,KAAK,MAAM,CAAC;AACxC,qBAAO,YAAY,EAAE,QAAQ,KAAK;AAAA,YACpC;AAAA,UACF,WAAW,SAAS,eAAe;AACjC,mBAAO,QAAQ,IAAI,WAAW,MAAM,UAAU,IAAI;AAAA,UACpD,OAAO;AACL,gBAAI,QAAQ,KAAK,KAAK,MAAM;AAC5B,gBAAI,OAAO;AACT,kBAAI,QAAQ,MAAM,KAAK,MAAM,CAAC,GAAG,IAAI;AACrC,uBAAS,UAAU,UAAU;AAC3B,oBAAI,MAAM,MAAM,IAAI,MAAM;AAC1B,oBAAI,KAAK;AACP,2BAAS,QAAQ,OAAO;AACtB,wBAAI,CAAC,OAAO,OAAO;AACjB,6BAAO,QAAQ,CAAC;AAAA,oBAClB;AACA,wBAAI,CAAC,OAAO,MAAM,QAAQ;AACxB,6BAAO,MAAM,SAAS,CAAC;AAAA,oBACzB;AACA,2BAAO,MAAM,OAAO,KAAK,GAAG;AAAA,kBAC9B;AAAA,gBACF;AAAA,cACF;AAAA,YACF,OAAO;AACL,uBAAS,KAAK,UAAU;AACtB,oBAAI,OAAO,KAAK,KAAK,IAAI,EAAE,IAAI,MAAM,CAAC;AACtC,oBAAI,SAAS,cAAc;AACzB,sBAAI,IAAI,IAAI,SAAS,IAAI,MAAM;AAC/B,sBAAI,GAAG;AACL,wBAAI,MAAM,mBAAmB,EAAE,SAAS,UAAU,GAAG;AACnD;AAAA,oBACF,WAAW,MAAM,cAAc,EAAE,SAAS,eAAe,GAAG;AAC1D;AAAA,oBACF;AAAA,kBACF;AAAA,gBACF;AACA,yBAAS,YAAY,MAAM;AACzB,sBAAI,CAAC,OAAO,WAAW;AACrB,2BAAO,YAAY,CAAC;AAAA,kBACtB;AACA,yBAAO,UAAU,SAAS;AAAA,gBAC5B;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,eAAO,CAAC,KAAK,MAAM;AAAA,MACrB;AAAA,MAKA,KAAK,MAAM;AACT,YAAI,CAAC,WAAW,IAAI,IAAI,GAAG;AACzB,qBAAW,IAAI,MAAM,YAAY,KAAK,IAAI,CAAC;AAAA,QAC7C;AAEA,eAAO,WAAW,IAAI,IAAI;AAAA,MAC5B;AAAA,MAKA,WAAW,MAAM;AACf,YAAI,QAAQ,KAAK,UAAU,OAAO,WAAW,IAAI,CAAC;AAClD,YAAI,UAAU,kBAAkB;AAC9B,kBAAQ;AAAA,QACV;AACA,eAAO;AAAA,MACT;AAAA,MAKA,UAAU,MAAM;AACd,eAAO,KAAK,KAAK,IAAI,EAAE,UAAU,IAAI;AAAA,MACvC;AAAA,MAKA,SAAS,MAAM,QAAQ;AACrB,eAAO,OAAO,WAAW,IAAI;AAC7B,eAAO,KAAK,KAAK,IAAI,EAAE,SAAS,MAAM,MAAM;AAAA,MAC9C;AAAA,MAKA,OAAO,MAAM,MAAM;AACjB,YAAI,OAAO,KAAK;AAEhB,YAAI,SAAS,KAAK,QAAQ,KAAK,KAAK;AACpC,YAAI,SAAS,KAAK,SAAS,KAAK,MAAM;AAEtC,YAAI,UAAU,QAAQ;AACpB,iBAAO,MAAM,KAAK,OAAO,OAAO,MAAM,CAAC;AAAA,QACzC,OAAO;AACL,iBAAO,UAAU,UAAU,CAAC;AAAA,QAC9B;AAAA,MACF;AAAA,MAKA,MAAM,MAAM;AACV,YAAI,OAAO,KAAK;AAChB,YAAI,QAAQ,KAAK,MAAM,IAAI;AAC3B,YAAI,EAAE,OAAO,IAAI,KAAK;AACtB,YAAI,aAAa,KAAK,WAAW,KAAK,IAAI;AAE1C,YAAI,UAAU,CAAC,MAAM,aAAa;AAChC,mBAAS;AACT,iBAAO,SAAS,KAAK,QAAQ,QAAQ;AACnC,gBAAI,QAAQ,KAAK,MAAM;AACvB,gBAAI,MAAM,SAAS,QAAQ;AACzB,kBAAI,SAAS,MAAM,MAAM,SAAS,YAAY;AAC5C,oBAAI,CAAC,SAAS,WAAW,MAAM,KAAK,GAAG;AACrC;AAAA,gBACF;AAAA,cACF;AAEA,kBAAI,KAAK,WAAW,MAAM,IAAI,MAAM,YAAY;AAC9C;AAAA,cACF,WAAW,SAAS,KAAK,MAAM,MAAM;AACnC,uBAAO;AAAA,cACT;AAEA,kBAAI,SAAS,KAAM,MAAM,SAAS,YAAY;AAC5C,oBAAI,CAAC,SAAS,WAAW,MAAM,KAAK,GAAG;AACrC;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAEA,qBAAS;AAAA,UACX;AACA,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,UACL,GAAG,UAAU;AACX,mBAAO,QAAQ,IAAI,QAAQ;AAAA,UAC7B;AAAA,UACA,KAAK,UAAU;AACb,mBAAO,QAAQ,GAAI,QAAQ;AAAA,UAC7B;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC3ajB,IAAAC,oBAAA;AAAA;AAAA,QAAI,SAAS,mBAAwB;AAErC,aAAS,aAAa,GAAG,GAAG;AAC1B,UAAI,EAAE,MAAM,GAAG;AACf,UAAI,EAAE,MAAM,GAAG;AACf,UAAI,EAAE,KAAK,EAAE,IAAI;AACf,eAAO;AAAA,MACT,WAAW,EAAE,KAAK,EAAE,IAAI;AACtB,eAAO;AAAA,MACT,OAAO;AACL,eAAO,KAAK,KAAK,WAAW,EAAE,EAAE,IAAI,WAAW,EAAE,EAAE,CAAC;AAAA,MACtD;AAAA,IACF;AAGA,aAAS,EAAE,MAAM,MAAM,UAAU;AAC/B,aAAO,OAAO,IAAI;AAElB,UAAI,CAAC,UAAU;AACb;AAAC,SAAC,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC;AAAA,MAC/B;AAEA,UAAI,QAAQ,KAAK,SAAS;AAC1B,UAAI,OAAO,CAAC;AAEZ,eAAS,WAAW,KAAK,OAAO;AAC9B,YAAI,WAAW,KAAK,MAAM;AAC1B,iBAAS,WAAW,UAAU;AAC5B,cAAI,UAAU,SAAS;AACvB,cAAI,QAAQ,MAAM,KAAK,GAAG;AACxB,iBAAK,KAAK,UAAU,MAAM,OAAO;AAAA,UACnC;AAAA,QACF;AAAA,MACF;AAEA,eAAS,KAAK,KAAK,YAAY,CAAC;AAAA,IAClC;AAGA,QAAI,SAAS,CAAC;AAEd,aAAS,OAAO,OAAO,MAAM;AAC3B,eAAS,QAAQ,OAAO;AACtB,eAAO,QAAQ,OAAO,OAAO,CAAC,GAAG,IAAI;AAAA,MACvC;AAAA,IACF;AAEA,aAAS,IAAI,OAAO,MAAM;AACxB,eAAS,QAAQ,OAAO;AACtB,eAAO,MAAM,WAAW,OAAO,MAAM,SAClC,OAAO,KAAK,QAAQ,EACpB,KAAK,YAAY;AAAA,MACtB;AAAA,IACF;AAEA,WAAO,UAAU;AAGjB,QAAI,qBAAqB;AAEzB;AAAA,MAAE;AAAA,MAAoB,cACpB;AAAA,QACE;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE,UAAU,CAAC,WAAW,QAAQ,KAAK;AAAA,UACnC,SAAS;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAGA,QAAI,kBAAkB;AAEtB;AAAA,MAAE;AAAA,MAAiB,cACjB,OAAO,CAAC,YAAY,GAAG;AAAA,QACrB,UAAU,CAAC,SAAS;AAAA,QACpB,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,kBAAkB;AAEtB;AAAA,MAAE;AAAA,MAAiB,cACjB;AAAA,QACE;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE,UAAU,CAAC,WAAW,MAAM;AAAA,UAC5B,SAAS;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAGA,QAAI,mBAAmB;AAEvB;AAAA,MAAE;AAAA,MAAkB,cAClB;AAAA,QACE;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE,UAAU,CAAC,WAAW,MAAM;AAAA,UAC5B;AAAA,UACA,SAAS;AAAA,QACX;AAAA,MACF;AAAA,IACF;AAGA,QAAI,oBAAoB;AAExB;AAAA,MAAE;AAAA,MAAmB,cACnB,OAAO,CAAC,aAAa,kBAAkB,GAAG;AAAA,QACxC,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,qBAAqB;AAEzB,MAAE,oBAAoB,cAAY;AAChC,aAAO,CAAC,eAAe,oBAAoB,GAAG;AAAA,QAC5C,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AACD,aAAO,OAAO,CAAC,iBAAiB,GAAG;AAAA,QACjC,UAAU,CAAC,QAAQ,KAAK;AAAA,QACxB;AAAA,QACA,SAAS;AAAA,MACX,CAAC;AAAA,IACH,CAAC;AAED;AAAA,MAAE;AAAA,MAAoB,EAAE,OAAO,aAAa;AAAA,MAAG,cAC7C,OAAO,CAAC,qBAAqB,GAAG;AAAA,QAC9B,UAAU,CAAC,QAAQ,KAAK;AAAA,QACxB,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,kBAAkB;AAEtB;AAAA,MAAE;AAAA,MAAiB,EAAE,OAAO,OAAO;AAAA,MAAG,cACpC;AAAA,QACE;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE,OAAO;AAAA,YACL;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF;AAAA,UACA,UAAU,CAAC,MAAM;AAAA,UACjB,SAAS;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,MAAE,iBAAiB,EAAE,OAAO,OAAO,GAAG,cAAY;AAChD,iBAAW,SAAS,IAAI,OAAK;AAC3B,YAAI,aAAa,KAAK,CAAC,GAAG;AACxB,iBAAO;AAAA,QACT,OAAO;AACL,iBAAO,GAAG;AAAA,QACZ;AAAA,MACF,CAAC;AACD,aAAO;AAAA,QACL;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE,SAAS;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AAGD,QAAI,kBAAkB;AAEtB;AAAA,MAAE;AAAA,MAAiB,cACjB,OAAO,CAAC,YAAY,GAAG;AAAA,QACrB,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,gBAAgB;AAEpB;AAAA,MAAE;AAAA,MAAe,cACf,OAAO,CAAC,QAAQ,GAAG;AAAA,QACjB,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,uBAAuB;AAE3B;AAAA,MAAE;AAAA,MAAsB,cACtB,OAAO,CAAC,iBAAiB,GAAG;AAAA,QAC1B,OAAO;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,iBAAiB;AAErB;AAAA,MAAE;AAAA,MAAgB,EAAE,OAAO,aAAa;AAAA,MAAG,cACzC,OAAO,CAAC,iBAAiB,GAAG;AAAA,QAC1B,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,wBAAwB;AAE5B;AAAA,MAAE;AAAA,MAAuB,cACvB,OAAO,CAAC,SAAS,GAAG;AAAA,QAClB,OAAO;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,qBAAqB;AAEzB,MAAE,oBAAoB,cAAY;AAChC;AAAA,QACE;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE,SAAS;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAEA,UAAI,OAAO,SAAS,OAAO,OAAK,CAAC,UAAU,KAAK,CAAC,CAAC;AAClD,aAAO,CAAC,gBAAgB,eAAe,cAAc,GAAG;AAAA,QACtD,SAAS;AAAA,QACT,UAAU;AAAA,MACZ,CAAC;AAAA,IACH,CAAC;AAGD,QAAI,mBAAmB;AAEvB;AAAA,MAAE;AAAA,MAAkB,cAClB,OAAO,CAAC,aAAa,GAAG;AAAA,QACtB,UAAU,CAAC,SAAS;AAAA,QACpB,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,gBAAgB;AAEpB,MAAE,eAAe,EAAE,OAAO,OAAO,GAAG,cAAY;AAC9C,iBAAW,SAAS,IAAI,OAAK;AAC3B,YAAI,aAAa,KAAK,CAAC,GAAG;AACxB,iBAAO;AAAA,QACT,OAAO;AACL,iBAAO,GAAG;AAAA,QACZ;AAAA,MACF,CAAC;AACD,aAAO,CAAC,gBAAgB,aAAa,GAAG;AAAA,QACtC,OAAO,CAAC,SAAS;AAAA,QACjB,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AACD,aAAO,CAAC,QAAQ,aAAa,eAAe,YAAY,GAAG;AAAA,QACzD,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AACD;AAAA,QACE;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE,SAAS;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AAED,MAAE,eAAe,EAAE,OAAO,OAAO,GAAG,cAAY;AAC9C,UAAI,CAAC,gBAAgB,aAAa,GAAG;AAAA,QACnC,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AACD,UAAI,CAAC,QAAQ,aAAa,eAAe,YAAY,GAAG;AAAA,QACtD,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AACD;AAAA,QACE;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE,SAAS;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AAGD,QAAI,aAAa;AAEjB;AAAA,MAAE;AAAA,MAAY,cACZ,OAAO,CAAC,MAAM,GAAG;AAAA,QACf,OAAO,CAAC,GAAG;AAAA,QACX,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,0BAA0B;AAE9B;AAAA,MAAE;AAAA,MAAyB,cACzB,OAAO,CAAC,qBAAqB,iBAAiB,GAAG;AAAA,QAC/C,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,2BAA2B;AAE/B;AAAA,MAAE;AAAA,MAA0B,cAC1B,OAAO,CAAC,iBAAiB,GAAG;AAAA,QAC1B,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,oBAAoB;AAExB;AAAA,MAAE;AAAA,MAAmB,cACnB;AAAA,QACE;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE,SAAS;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAGA,QAAI,oBAAoB;AAExB;AAAA,MAAE;AAAA,MAAmB,cACnB,OAAO,CAAC,cAAc,GAAG;AAAA,QACvB,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,oBAAoB;AAExB;AAAA,MAAE;AAAA,MAAmB,cACnB,OAAO,CAAC,cAAc,GAAG;AAAA,QACvB,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,kBAAkB;AAEtB;AAAA,MAAE;AAAA,MAAiB,cACjB,OAAO,CAAC,aAAa,GAAG;AAAA,QACtB,UAAU;AAAA,QACV,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,oBAAoB;AAExB,MAAE,mBAAmB,cAAY;AAC/B,aAAO,CAAC,eAAe,GAAG;AAAA,QACxB,UAAU;AAAA,QACV,SAAS;AAAA,QACT,UAAU,SAAS,OAAO,CAAC,aAAa,aAAa,gBAAgB,CAAC;AAAA,MACxE,CAAC;AAAA,IACH,CAAC;AAGD,QAAI,yBAAyB;AAE7B,MAAE,wBAAwB,cAAY;AACpC,aAAO,CAAC,oBAAoB,GAAG;AAAA,QAC7B,UAAU;AAAA,QACV,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAGD,QAAI,gBAAgB;AAEpB;AAAA,MAAE;AAAA,MAAe,cACf,OAAO,CAAC,SAAS,GAAG;AAAA,QAClB,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,mBAAmB;AAEvB;AAAA,MAAE;AAAA,MAAkB,cAClB,OAAO,CAAC,aAAa,GAAG;AAAA,QACtB,UAAU;AAAA,QACV,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAEA;AAAA,MAAE;AAAA,MAAkB,EAAE,OAAO,YAAY;AAAA,MAAG,cAC1C,OAAO,CAAC,YAAY,GAAG;AAAA,QACrB,UAAU;AAAA,QACV,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,2BAA2B;AAE/B;AAAA,MAAE;AAAA,MAA0B,cAC1B,OAAO,CAAC,wBAAwB,GAAG;AAAA,QACjC,UAAU;AAAA,QACV,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,iBAAiB;AAErB;AAAA,MAAE;AAAA,MAAgB,cAChB,OAAO,CAAC,WAAW,GAAG;AAAA,QACpB,UAAU;AAAA,QACV,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,gBAAgB;AAEpB;AAAA,MAAE;AAAA,MAAe,cACf,OAAO,CAAC,UAAU,GAAG;AAAA,QACnB,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,kBAAkB;AAEtB,QAAI,YAAY;AAAA,MACd;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA;AAAA,MAAE;AAAA,MAAiB,cACjB,OAAO,CAAC,eAAe,aAAa,GAAG;AAAA,QACrC,OAAO;AAAA,QACP,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAEA;AAAA,MAAE;AAAA,MAAiB,EAAE,OAAO,SAAS;AAAA,MAAG,cACtC,OAAO,CAAC,QAAQ,gBAAgB,GAAG;AAAA,QACjC,OAAO;AAAA,QACP,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAEA;AAAA,MAAE;AAAA,MAAiB,EAAE,OAAO,SAAS;AAAA,MAAG,cACtC,OAAO,CAAC,aAAa,GAAG;AAAA,QACtB,OAAO;AAAA,QACP,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAIA,QAAI,gBAAgB;AAEpB;AAAA,MAAE;AAAA,MAAe,cACf,OAAO,CAAC,SAAS,GAAG;AAAA,QAClB,OAAO;AAAA,QACP,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,qBAAqB;AAEzB;AAAA,MAAE;AAAA,MAAoB,cACpB,OAAO,CAAC,WAAW,UAAU,GAAG;AAAA,QAC9B,OAAO,CAAC,QAAQ;AAAA,QAChB,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,oBAAoB;AAExB;AAAA,MAAE;AAAA,MAAmB,cACnB,OAAO,CAAC,QAAQ,UAAU,GAAG;AAAA,QAC3B,OAAO,CAAC,QAAQ;AAAA,QAChB,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,eAAe;AAEnB;AAAA,MAAE;AAAA,MAAc,cACd,OAAO,CAAC,QAAQ,GAAG;AAAA,QACjB,OAAO,CAAC,UAAU;AAAA,QAClB,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,gBAAgB;AAEpB;AAAA,MAAE;AAAA,MAAe,cACf,OAAO,CAAC,cAAc,GAAG;AAAA,QACvB,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,mBAAmB;AAEvB;AAAA,MAAE;AAAA,MAAkB,cAClB;AAAA,QACE;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE,SAAS;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA;AAAA,MAAE;AAAA,MAAkB,EAAE,OAAO,YAAY;AAAA,MAAG,cAC1C,OAAO,CAAC,wBAAwB,0BAA0B,GAAG;AAAA,QAC3D,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,uBAAuB;AAE3B;AAAA,MAAE;AAAA,MAAsB,cACtB,OAAO,CAAC,kBAAkB,GAAG;AAAA,QAC3B,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,iBAAiB;AAErB,MAAE,gBAAgB,cAAY;AAC5B;AAAA,QACE;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE,SAAS;AAAA,UACT;AAAA,QACF;AAAA,MACF;AACA;AAAA,QACE;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE,SAAS;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AAGD,QAAI,iBAAiB;AAErB;AAAA,MAAE;AAAA,MAAgB,cAChB,OAAO,CAAC,WAAW,GAAG;AAAA,QACpB,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,sBAAsB;AAE1B;AAAA,MAAE;AAAA,MAAqB,cACrB,OAAO,CAAC,sBAAsB,GAAG;AAAA,QAC/B,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,kBAAkB;AAEtB;AAAA,MAAE;AAAA,MAAiB,cACjB,OAAO,CAAC,cAAc,iBAAiB,GAAG;AAAA,QACxC,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,eAAe;AAEnB;AAAA,MAAE;AAAA,MAAc,cACd,OAAO,CAAC,gBAAgB,iBAAiB,uBAAuB,GAAG;AAAA,QACjE,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,qBAAqB;AAEzB;AAAA,MAAE;AAAA,MAAoB,cACpB,OAAO,CAAC,eAAe,GAAG;AAAA,QACxB,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,yBAAyB;AAE7B;AAAA,MAAE;AAAA,MAAwB,cACxB,OAAO,CAAC,WAAW,GAAG;AAAA,QACpB,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,gBAAgB;AAEpB;AAAA,MAAE;AAAA,MAAe,EAAE,OAAO,iBAAiB;AAAA,MAAG,cAC5C,OAAO,CAAC,aAAa,GAAG;AAAA,QACtB,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,sBAAsB;AAE1B;AAAA,MAAE;AAAA,MAAqB,cACrB,OAAO,CAAC,iBAAiB,GAAG;AAAA,QAC1B,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,mBAAmB;AAEvB;AAAA,MAAE;AAAA,MAAkB,EAAE,OAAO,aAAa;AAAA,MAAG,cAC3C,OAAO,CAAC,WAAW,GAAG;AAAA,QACpB,OAAO,CAAC,iBAAiB;AAAA,QACzB,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAEA;AAAA,MAAE;AAAA,MAAkB,EAAE,OAAO,SAAS;AAAA,MAAG,cACvC,OAAO,CAAC,iBAAiB,GAAG;AAAA,QAC1B,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,qBAAqB;AAEzB;AAAA,MAAE;AAAA,MAAoB,cACpB;AAAA,QACE;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE,SAAS;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA;AAAA,MAAE;AAAA,MAAoB,EAAE,OAAO,QAAQ;AAAA,MAAG,cACxC;AAAA,QACE;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE,SAAS;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAGA,QAAI,mBAAmB;AAEvB;AAAA,MAAE;AAAA,MAAkB,EAAE,OAAO,OAAO;AAAA,MAAG,cACrC,OAAO,CAAC,YAAY,GAAG;AAAA,QACrB,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,mBAAmB;AAEvB;AAAA,MAAE;AAAA,MAAkB,cAClB;AAAA,QACE;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE,SAAS;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAGA,QAAI,gBAAgB;AAEpB;AAAA,MAAE;AAAA,MAAe,cACf,OAAO,CAAC,aAAa,aAAa,iBAAiB,GAAG;AAAA,QACpD,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,iBAAiB;AAErB;AAAA,MAAE;AAAA,MAAgB,cAChB,OAAO,CAAC,WAAW,GAAG;AAAA,QACpB,OAAO;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,oBAAoB;AAExB;AAAA,MAAE;AAAA,MAAmB,EAAE,OAAO,MAAM;AAAA,MAAG,cACrC,OAAO,CAAC,cAAc,GAAG;AAAA,QACvB,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,kBAAkB;AAEtB;AAAA,MAAE;AAAA,MAAiB,cACjB,OAAO,CAAC,YAAY,GAAG;AAAA,QACrB,OAAO;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,iBAAiB;AAErB;AAAA,MAAE;AAAA,MAAgB,cAChB,OAAO,CAAC,cAAc,aAAa,GAAG;AAAA,QACpC,UAAU;AAAA,QACV,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,qBAAqB;AAEzB;AAAA,MAAE;AAAA,MAAoB,cACpB;AAAA,QACE;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE,SAAS;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAGA,QAAI,aAAa;AAEjB,MAAE,YAAY,cAAY;AACxB,aAAO,CAAC,gBAAgB,aAAa,GAAG;AAAA,QACtC,OAAO,CAAC,SAAS;AAAA,QACjB,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AACD;AAAA,QACE;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,UACE,SAAS;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AAED;AAAA,MAAE;AAAA,MAAY,EAAE,OAAO,MAAM;AAAA,MAAG,cAC9B,OAAO,CAAC,qBAAqB,gBAAgB,GAAG;AAAA,QAC9C,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,oBAAoB;AAExB;AAAA,MAAE;AAAA,MAAmB,cACnB,OAAO,CAAC,cAAc,GAAG;AAAA,QACvB,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,gBAAgB;AAEpB;AAAA,MAAE;AAAA,MAAe,cACf,OAAO,CAAC,WAAW,GAAG;AAAA,QACpB,UAAU;AAAA,QACV,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,aAAa;AAEjB;AAAA,MAAE;AAAA,MAAY,cACZ,OAAO,CAAC,SAAS,GAAG;AAAA,QAClB,OAAO,CAAC,cAAc;AAAA,QACtB,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAEA;AAAA,MAAE;AAAA,MAAY,EAAE,OAAO,aAAa;AAAA,MAAG,cACrC,OAAO,CAAC,WAAW,GAAG;AAAA,QACpB,OAAO,CAAC,cAAc;AAAA,QACtB,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAEA;AAAA,MAAE;AAAA,MAAY,EAAE,OAAO,MAAM;AAAA,MAAG,cAC9B,OAAO,CAAC,kBAAkB,GAAG;AAAA,QAC3B,OAAO,CAAC,cAAc;AAAA,QACtB,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,mBAAmB;AAEvB;AAAA,MAAE;AAAA,MAAkB,EAAE,OAAO,OAAO;AAAA,MAAG,cACrC,OAAO,CAAC,qBAAqB,GAAG;AAAA,QAC9B,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,wBAAwB;AAE5B;AAAA,MAAE;AAAA,MAAuB,cACvB,OAAO,CAAC,kBAAkB,GAAG;AAAA,QAC3B,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,oBAAoB;AAExB;AAAA,MAAE;AAAA,MAAmB,cACnB,OAAO,CAAC,sBAAsB,cAAc,GAAG;AAAA,QAC7C,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;;;ACzkCA;AAAA;AAAA,QAAI,eAAe;AAEnB,aAAS,WAAW,KAAK;AACvB,aAAO,IAAI,MAAM,GAAG,CAAC,EAAE,YAAY,IAAI,IAAI,MAAM,CAAC;AAAA,IACpD;AAEA,QAAM,QAAQ;AAAA,MACZ,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,OAAO;AAAA,MACP,SAAS;AAAA,IACX;AAEA,aAAS,OAAO,MAAM,UAAU,MAAM;AACpC,UAAI,MAAM,KAAK;AACf,UAAI;AAAM,eAAO;AACjB,aAAO;AACP,aAAO,SAAS,IAAI,OAAK,EAAE,QAAQ,aAAa,IAAI,CAAC,EAAE,KAAK,IAAI;AAChE,aAAO;AACP,aAAO;AAAA,IACT;AAEA,WAAO,UAAU,SAAU,UAAU;AACnC,UAAI,SAAS,SAAS,SAAS,WAAW,GAAG;AAC3C,eAAO;AAAA,MACT;AAEA,UAAI,WAAW,CAAC;AAChB,eAAS,WAAW,SAAS,SAAS,UAAU;AAC9C,YAAI,QAAQ,QAAQ,MAAM,GAAG;AAC7B,YAAI,OAAO,MAAM;AACjB,YAAI,UAAU,MAAM;AAEpB,eAAO,MAAM,SAAS,WAAW,IAAI;AACrC,YAAI,SAAS,OAAO;AAClB,mBAAS,MAAM,KAAK,OAAO;AAAA,QAC7B,OAAO;AACL,mBAAS,QAAQ,CAAC,OAAO;AAAA,QAC3B;AAAA,MACF;AAEA,UAAI,MAAM;AACV,eAAS,WAAW,UAAU;AAC5B,YAAI,OAAO,SAAS;AACpB,eAAO,KAAK,KAAK,CAAC,GAAG,MAAM,WAAW,CAAC,IAAI,WAAW,CAAC,CAAC;AACxD,eAAO,KAAK,YAAY,KAAK,KAAK,IAAI;AAAA;AAAA,MACxC;AAEA,UAAI,WAAW,aAAa,SAAS,SAAS,SAAS,QAAQ;AAC/D,UAAI,QAAQ,KAAK,MAAM,WAAW,GAAG,IAAI;AACzC,aAAO;AAAA,6BAAgC;AAAA;AAEvC,UAAI,UAAU,CAAC;AACf,eAAS,QAAQ,SAAS,KAAK;AAC7B,YAAI,OAAO,SAAS,IAAI;AACxB,YAAI,KAAK,OAAO,OAAO,KAAK,UAAU;AACpC,kBAAQ,KAAK,OAAO,MAAM,KAAK,QAAQ,CAAC;AAAA,QAC1C;AAAA,MACF;AACA,UAAI,QAAQ,SAAS,GAAG;AACtB,eAAO;AAAA;AAAA,EAAgB,QAAQ,KAAK,EAAE,KAAK,EAAE;AAAA,MAC/C;AAEA,UAAI,YAAY,CAAC;AACjB,eAAS,YAAY,SAAS,IAAI,WAAW;AAC3C,YAAI,SAAS,UAAU;AACrB,oBAAU,KAAK,OAAO,SAAS,MAAM,SAAS,QAAQ,CAAC;AAAA,QACzD;AAAA,MACF;AACA,UAAI,UAAU,SAAS,GAAG;AACxB,eAAO;AAAA;AAAA,EAAiB,UAAU,KAAK,EAAE,KAAK,EAAE;AAAA,MAClD;AAEA,UAAI,SAAS,CAAC;AACd,UAAI,QAAQ,CAAC;AACb,UAAI,UAAU;AACd,eAAS,QAAQ,SAAS,KAAK;AAC7B,YAAI,OAAO,SAAS,IAAI;AACxB,YAAI,KAAK,OAAO,OAAO,KAAK,UAAU;AACpC,cAAI,OAAO,KAAK,QAAQ,OAAO,MAAM;AACrC,cAAI;AAAM,sBAAU;AACpB,gBAAM,KAAK,OAAO,MAAM,KAAK,UAAU,IAAI,CAAC;AAAA,QAC9C;AAEA,YAAI,CAAC,MAAM,QAAQ,KAAK,MAAM,GAAG;AAC/B;AAAA,QACF;AACA,iBAAS,SAAS,KAAK,QAAQ;AAC7B,cAAI,OAAO,MAAM,KAAK,SAAS,MAAM;AACrC,cAAI;AAAM,sBAAU;AACpB,cAAI,SAAS,OAAO,MAAM,MAAM,MAAM,UAAU,IAAI;AACpD,cAAI,CAAC,OAAO,SAAS,MAAM,GAAG;AAC5B,mBAAO,KAAK,MAAM;AAAA,UACpB;AAAA,QACF;AAAA,MACF;AAEA,UAAI,MAAM,SAAS,GAAG;AACpB,eAAO;AAAA;AAAA,EAAkB,MAAM,KAAK,EAAE,KAAK,EAAE;AAAA,MAC/C;AACA,UAAI,OAAO,SAAS,GAAG;AACrB,eAAO;AAAA;AAAA,EAAc,OAAO,KAAK,EAAE,KAAK,EAAE;AAAA,MAC5C;AACA,UAAI,SAAS;AACX,eAAO;AAAA,MACT;AAEA,UAAI,CAAC,QAAQ,UAAU,CAAC,UAAU,UAAU,CAAC,MAAM,UAAU,CAAC,OAAO,QAAQ;AAC3E,eACE;AAAA,MAEJ;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;;;AC1HA;AAAA;AAAA,QAAI,eAAe;AACnB,QAAI,EAAE,OAAO,IAAI;AACjB,QAAI,OAAO;AAEX,QAAI,WAAW;AACf,QAAI,WAAW;AACf,QAAI,eAAe;AACnB,QAAI,UAAU;AAEd,QAAI,mBAAmB,EAAE,UAAU,QAAQ,UAAU,aAAa;AAElE,QAAM,UACJ;AAcF,aAAS,cAAc,KAAK;AAC1B,aAAO,OAAO,UAAU,SAAS,MAAM,GAAG,MAAM;AAAA,IAClD;AAEA,QAAI,QAAQ,oBAAI,IAAI;AAEpB,aAAS,YAAY,QAAQ,UAAU;AACrC,UAAI,SAAS,SAAS,SAAS,WAAW,GAAG;AAC3C;AAAA,MACF;AACA,UAAI,SAAS,IAAI,UAAU,SAAS,GAAG;AACrC;AAAA,MACF;AACA,UAAI,OAAO,KAAK,SAAS,GAAG,EAAE,SAAS,GAAG;AACxC;AAAA,MACF;AAEA,aAAO;AAAA,QACL;AAAA,MASF;AAAA,IACF;AAEA,WAAO,UAAU;AAEjB,aAAS,UAAU,MAAM;AACvB,UAAI;AACJ,UAAI,KAAK,WAAW,KAAK,cAAc,KAAK,EAAE,GAAG;AAC/C,kBAAU,KAAK;AACf,eAAO;AAAA,MACT,WAAW,KAAK,WAAW,KAAM,KAAK,WAAW,KAAK,CAAC,KAAK,IAAK;AAC/D,eAAO;AAAA,MACT,WAAW,KAAK,UAAU,MAAM,MAAM,QAAQ,KAAK,EAAE,KAAK,CAAC,KAAK,KAAK;AACnE,kBAAU,KAAK;AACf,eAAO,KAAK;AAAA,MACd,WAAW,OAAO,KAAK,KAAK,SAAS,OAAO,UAAU;AACpD,kBAAU,KAAK,IAAI;AAAA,MACrB;AAEA,UAAI,CAAC,SAAS;AACZ,kBAAU,CAAC;AAAA,MACb;AAEA,UAAI,QAAQ,SAAS;AACnB,cAAM,IAAI;AAAA,UACR;AAAA,QACF;AAAA,MACF,WAAW,QAAQ,cAAc;AAC/B,cAAM,IAAI;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAEA,UAAI,QAAQ,sBAAsB;AAChC,eAAO,QAAQ;AAAA,MACjB,WAAW,QAAQ,UAAU;AAC3B,YAAI,OAAO,YAAY,eAAe,QAAQ,MAAM;AAClD,kBAAQ;AAAA,YACN,KAAK,IAAI,QAAQ,QAAQ,YAAY,OAAK,KAAK,OAAO,EAAE,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC;AAAA,UACxE;AAAA,QACF;AACA,eAAO,QAAQ;AAAA,MACjB;AAEA,UAAI,aAAa;AAAA,QACf,uBAAuB,QAAQ;AAAA,QAC/B,OAAO,QAAQ;AAAA,QACf,KAAK,QAAQ;AAAA,MACf;AAEA,eAAS,aAAa,MAAM;AAC1B,YAAI,IAAI;AACR,YAAI,WAAW,IAAI,SAAS,EAAE,UAAU,MAAM,MAAM,UAAU;AAC9D,YAAI,MAAM,SAAS,SAAS,KAAK,IAAI,IAAI,KAAK,UAAU,OAAO;AAE/D,YAAI,CAAC,MAAM,IAAI,GAAG,GAAG;AACnB,gBAAM,IAAI,KAAK,IAAI,SAAS,EAAE,UAAU,UAAU,OAAO,CAAC;AAAA,QAC5D;AAEA,eAAO,MAAM,IAAI,GAAG;AAAA,MACtB;AAEA,aAAO;AAAA,QACL,eAAe;AAAA,QAEf,QAAQ,QAAQ;AACd,cAAI,WAAW,aAAa;AAAA,YAC1B,MAAM,OAAO,KAAK;AAAA,YAClB,KAAK,QAAQ;AAAA,UACf,CAAC;AAED,iBAAO;AAAA,YACL,SAAS,MAAM;AACb,0BAAY,QAAQ,QAAQ;AAC5B,kBAAI,QAAQ,WAAW,OAAO;AAC5B,yBAAS,UAAU,OAAO,MAAM,MAAM;AAAA,cACxC;AACA,kBAAI,QAAQ,QAAQ,OAAO;AACzB,yBAAS,UAAU,IAAI,MAAM,MAAM;AAAA,cACrC;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,QAEA,KAAK,MAAM;AACT,iBAAO,QAAQ,CAAC;AAChB,eAAK,OAAO,KAAK,QAAQ,QAAQ,IAAI;AACrC,iBAAO,QAAQ,aAAa,IAAI,CAAC;AAAA,QACnC;AAAA,QAEA;AAAA,QACA,UAAU;AAAA,MACZ;AAAA,IACF;AAEA,WAAO,UAAU;AAKjB,WAAO,OAAO;AAKd,WAAO,WAAW,aAAa;AAK/B,WAAO,OAAO,MAAM,OAAO,EAAE,KAAK;AAAA;AAAA;;;ACnKlC,IAAO,6CAAQ;",
  "names": ["require_fullscreen", "require_border_image", "require_border_radius", "require_text_decoration", "require_prefixes"]
}
