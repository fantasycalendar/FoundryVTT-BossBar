{"version":3,"file":"index.js","sources":["src/constants.js","node_modules/svelte/internal/index.mjs","node_modules/svelte/store/index.mjs","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/util/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/index.js","node_modules/svelte/easing/index.mjs","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/math/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/animation/AnimationControl.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/animation/AnimationManager.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/constants.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/convertRelative.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/animation/AnimationAPI.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/animation/AnimationGroupControl.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/animation/AnimationGroupAPI.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/initial/Centered.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/initial/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/PositionChangeSet.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/PositionData.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/PositionStateAPI.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/StyleCache.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/transform/TransformData.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/validators/AdapterValidators.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/validators/BasicBounds.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/validators/TransformBounds.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/validators/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/transform/Transforms.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/update/UpdateElementData.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/animate/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/update/UpdateElementManager.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/Position.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/ApplicationState.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/GetSvelteData.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/loadSvelteConfig.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/SvelteReactive.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/SvelteApplication.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/TJSContainer.svelte","node_modules/svelte/transition/index.mjs","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/transition/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/action/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/helper/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/application/TJSHeaderButton.svelte","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/application/TJSApplicationHeader.svelte","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/application/ResizableHandle.svelte","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/application/TJSApplicationShell.svelte","node_modules/svelte/motion/index.mjs","src/applications/components/ProgressBar.svelte","src/applications/components/Image.svelte","src/applications/components/PipBar.svelte","src/applications/components/Text.svelte","src/applications/components/TilingBackground.svelte","src/applications/components/AttributeText.svelte","src/applications/boss-bar/BossBarShell.svelte","src/applications/boss-bar/boss-bar-app.js","src/hooks.js","src/api.js","src/applications/config/boxStore.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/gsap/index.js","src/applications/config/boxes/Box.svelte","src/applications/config/SideBar.svelte","src/applications/config/BoxLayer.svelte","src/applications/config/PositionBoxApplication.js","src/module.js"],"sourcesContent":["const CONSTANTS = {\r\n    MODULE_NAME: \"bossbar\",\r\n    FLAG_NAME: \"data\"\r\n};\r\n\r\nCONSTANTS.FLAGS = `flags.${CONSTANTS.MODULE_NAME}.${CONSTANTS.FLAG_NAME}`;\r\n\r\nconst base = CONSTANTS.MODULE_NAME + \".\"\r\nconst HOOKS = {\r\n    CLOSE: base + \"close\",\r\n    CLOSE_ALL: base + \"closeAll\",\r\n    SHOW: base + \"show\",\r\n    UPDATE: base + \"update\"\r\n}\r\n\r\nexport { CONSTANTS, HOOKS };","function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.49.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { group_outros, transition_out, check_outros } from 'svelte/internal';\n\n/**\n * Provides a solid string hashing algorithm.\n *\n * Sourced from: https://stackoverflow.com/a/52171480\n *\n * @param {string}   str - String to hash.\n *\n * @param {number}   seed - A seed value altering the hash.\n *\n * @returns {number} Hash code.\n */\nfunction hashCode(str, seed = 0)\n{\n   if (typeof str !== 'string') { return 0; }\n\n   let h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed;\n\n   for (let ch, i = 0; i < str.length; i++)\n   {\n      ch = str.charCodeAt(i);\n      h1 = Math.imul(h1 ^ ch, 2654435761);\n      h2 = Math.imul(h2 ^ ch, 1597334677);\n   }\n\n   h1 = Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^ Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n   h2 = Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^ Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n\n   return 4294967296 * (2097151 & h2) + (h1 >>> 0);\n}\n\nconst s_UUIDV4_REGEX = /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i;\n\n/**\n * Generates a UUID v4 compliant ID. Please use a complete UUID generation package for guaranteed compliance.\n *\n * This code is an evolution of the following Gist.\n * https://gist.github.com/jed/982883\n *\n * There is a public domain / free copy license attached to it that is not a standard OSS license...\n * https://gist.github.com/jed/982883#file-license-txt\n *\n * @returns {string} UUIDv4\n */\nfunction uuidv4()\n{\n   return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\n    (c ^ (globalThis.crypto || globalThis.msCrypto).getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16));\n}\n\n/**\n * Validates that the given string is formatted as a UUIDv4 string.\n *\n * @param {string}   uuid - UUID string to test.\n *\n * @returns {boolean} Is UUIDv4 string.\n */\nuuidv4.isValid = (uuid) => s_UUIDV4_REGEX.test(uuid);\n\n/**\n * Normalizes a string.\n *\n * @param {string}   query - A string to normalize for comparisons.\n *\n * @returns {string} Cleaned string.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n */\nfunction normalizeString(query)\n{\n   return query.trim().normalize('NFD').replace(/[\\x00-\\x1F]/gm, '');\n}\n\n/**\n * Recursive function that finds the closest parent stacking context.\n * See also https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n *\n * Original author: Kerry Liu / https://github.com/gwwar\n * @see: https://github.com/gwwar/z-context/blob/master/content-script.js\n * @see: https://github.com/gwwar/z-context/blob/master/LICENSE\n *\n * @param {Element} node -\n *\n * @returns {StackingContext} The closest parent stacking context\n */\nfunction getStackingContext(node)\n{\n   // the root element (HTML).\n   if (!node || node.nodeName === 'HTML')\n   {\n      return { node: document.documentElement, reason: 'root' };\n   }\n\n   // handle shadow root elements.\n   if (node.nodeName === '#document-fragment')\n   {\n      return getStackingContext(node.host);\n   }\n\n   const computedStyle = globalThis.getComputedStyle(node);\n\n   // position: fixed or sticky.\n   if (computedStyle.position === 'fixed' || computedStyle.position === 'sticky')\n   {\n      return { node: node, reason: `position: ${computedStyle.position}` };\n   }\n\n   // positioned (absolutely or relatively) with a z-index value other than \"auto\".\n   if (computedStyle.zIndex !== 'auto' && computedStyle.position !== 'static')\n   {\n      return { node: node, reason: `position: ${computedStyle.position}; z-index: ${computedStyle.zIndex}` };\n   }\n\n   // elements with an opacity value less than 1.\n   if (computedStyle.opacity !== '1')\n   {\n      return { node: node, reason: `opacity: ${computedStyle.opacity}` };\n   }\n\n   // elements with a transform value other than \"none\".\n   if (computedStyle.transform !== 'none')\n   {\n      return { node: node, reason: `transform: ${computedStyle.transform}` };\n   }\n\n   // elements with a mix-blend-mode value other than \"normal\".\n   if (computedStyle.mixBlendMode !== 'normal')\n   {\n      return { node: node, reason: `mixBlendMode: ${computedStyle.mixBlendMode}` };\n   }\n\n   // elements with a filter value other than \"none\".\n   if (computedStyle.filter !== 'none')\n   {\n      return { node: node, reason: `filter: ${computedStyle.filter}` };\n   }\n\n   // elements with a perspective value other than \"none\".\n   if (computedStyle.perspective !== 'none')\n   {\n      return { node: node, reason: `perspective: ${computedStyle.perspective}` };\n   }\n\n   // elements with a clip-path value other than \"none\".\n   if (computedStyle.clipPath !== 'none')\n   {\n      return { node: node, reason: `clip-path: ${computedStyle.clipPath} ` };\n   }\n\n   // elements with a mask value other than \"none\".\n   const mask = computedStyle.mask || computedStyle.webkitMask;\n   if (mask !== 'none' && mask !== undefined)\n   {\n      return { node: node, reason: `mask:  ${mask}` };\n   }\n\n   // elements with a mask-image value other than \"none\".\n   const maskImage = computedStyle.maskImage || computedStyle.webkitMaskImage;\n   if (maskImage !== 'none' && maskImage !== undefined)\n   {\n      return { node: node, reason: `mask-image: ${maskImage}` };\n   }\n\n   // elements with a mask-border value other than \"none\".\n   const maskBorder = computedStyle.maskBorder || computedStyle.webkitMaskBorder;\n   if (maskBorder !== 'none' && maskBorder !== undefined)\n   {\n      return { node: node, reason: `mask-border: ${maskBorder}` };\n   }\n\n   // elements with isolation set to \"isolate\".\n   if (computedStyle.isolation === 'isolate')\n   {\n      return { node: node, reason: `isolation: ${computedStyle.isolation}` };\n   }\n\n   // transform or opacity in will-change even if you don't specify values for these attributes directly.\n   if (computedStyle.willChange === 'transform' || computedStyle.willChange === 'opacity')\n   {\n      return { node: node, reason: `willChange: ${computedStyle.willChange}` };\n   }\n\n   // elements with -webkit-overflow-scrolling set to \"touch\".\n   if (computedStyle.webkitOverflowScrolling === 'touch')\n   {\n      return { node: node, reason: '-webkit-overflow-scrolling: touch' };\n   }\n\n   // an item with a z-index value other than \"auto\".\n   if (computedStyle.zIndex !== 'auto')\n   {\n      const parentStyle = globalThis.getComputedStyle(node.parentNode);\n      // with a flex|inline-flex parent.\n      if (parentStyle.display === 'flex' || parentStyle.display === 'inline-flex')\n      {\n         return {\n            node: node,\n            reason: `flex-item; z-index: ${computedStyle.zIndex}`,\n         };\n         // with a grid parent.\n      }\n      else if (parentStyle.grid !== 'none / none / none / row / auto / auto')\n      {\n         return {\n            node: node,\n            reason: `child of grid container; z-index: ${computedStyle.zIndex}`,\n         };\n      }\n   }\n\n   // contain with a value of layout, or paint, or a composite value that includes either of them\n   const contain = computedStyle.contain;\n   if (['layout', 'paint', 'strict', 'content'].indexOf(contain) > -1 ||\n    contain.indexOf('paint') > -1 ||\n    contain.indexOf('layout') > -1\n   )\n   {\n      return {\n         node: node,\n         reason: `contain: ${contain}`,\n      };\n   }\n\n   return getStackingContext(node.parentNode);\n}\n\n/**\n * @typedef {Object} StackingContext\n *\n * @property {Element} node          A DOM Element\n * @property {string}  reason        Reason for why a stacking context was created\n */\n\nconst s_REGEX = /(\\d+)\\s*px/;\n\n/**\n * Parses a pixel string / computed styles. Ex. `100px` returns `100`.\n *\n * @param {string}   value - Value to parse.\n *\n * @returns {number|undefined} The integer component of a pixel string.\n */\nfunction styleParsePixels(value)\n{\n   if (typeof value !== 'string') { return void 0; }\n\n   const isPixels = s_REGEX.test(value);\n   const number = parseInt(value);\n\n   return isPixels && Number.isFinite(number) ? number : void 0;\n}\n\n/**\n * Defines the application shell contract. If Svelte components export getter / setters for the following properties\n * then that component is considered an application shell.\n *\n * @type {string[]}\n */\nconst applicationShellContract = ['elementRoot'];\n\nObject.freeze(applicationShellContract);\n\n/**\n * Provides a method to determine if the passed in object / Svelte component follows the application shell contract.\n * This involves ensuring that the accessors defined in `applicationShellContract`.\n *\n * Note: A caveat is that when using Vite in a developer build components are wrapped in a proxy / ProxyComponent that\n * defines instance accessors versus on the prototype, so the check below ensures that all accessors in the contract are\n * either available on the prototype or directly on the instance.\n *\n * @param {*}  component - Object / component to test.\n *\n * @returns {boolean} Whether the component is a ApplicationShell or TJSApplicationShell.\n */\nfunction isApplicationShell(component)\n{\n   if (component === null || component === void 0) { return false; }\n\n   let compHasContract = true;\n   let protoHasContract = true;\n\n   // Check for accessors on the instance.\n   for (const accessor of applicationShellContract)\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(component, accessor);\n      if (descriptor === void 0 || descriptor.get === void 0 || descriptor.set === void 0) { compHasContract = false; }\n   }\n\n   // Get the prototype which is the parent SvelteComponent that has any getter / setters.\n   const prototype = Object.getPrototypeOf(component);\n\n   // Verify the application shell contract. If the accessors (getters / setters) are defined for\n   // `applicationShellContract`.\n   for (const accessor of applicationShellContract)\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(prototype, accessor);\n      if (descriptor === void 0 || descriptor.get === void 0 || descriptor.set === void 0) { protoHasContract = false; }\n   }\n\n   return compHasContract || protoHasContract;\n}\n\n/**\n * Provides basic duck typing to determine if the provided object is a HMR ProxyComponent instance or class.\n *\n * @param {*}  comp - Data to check as a HMR proxy component.\n *\n * @returns {boolean} Whether basic duck typing succeeds.\n */\nfunction isHMRProxy(comp)\n{\n   const instanceName = comp?.constructor?.name;\n   if (typeof instanceName === 'string' && (instanceName.startsWith('Proxy<') || instanceName === 'ProxyComponent'))\n   {\n      return true;\n   }\n\n   const prototypeName = comp?.prototype?.constructor?.name;\n   return typeof prototypeName === 'string' && (prototypeName.startsWith('Proxy<') ||\n    prototypeName === 'ProxyComponent');\n}\n\n/**\n * Provides basic duck typing to determine if the provided function is a constructor function for a Svelte component.\n *\n * @param {*}  comp - Data to check as a Svelte component.\n *\n * @returns {boolean} Whether basic duck typing succeeds.\n */\nfunction isSvelteComponent(comp)\n{\n   if (comp === null || comp === void 0 || typeof comp !== 'function') { return false; }\n\n   // When using Vite in a developer build the SvelteComponent is wrapped in a ProxyComponent class.\n   // This class doesn't define methods on the prototype, so we must check if the constructor name\n   // starts with `Proxy<` as it provides the wrapped component as `Proxy<_wrapped component name_>`.\n   const prototypeName = comp?.prototype?.constructor?.name;\n   if (typeof prototypeName === 'string' && (prototypeName.startsWith('Proxy<') || prototypeName === 'ProxyComponent'))\n   {\n      return true;\n   }\n\n   return typeof window !== void 0 ?\n    typeof comp.prototype.$destroy === 'function' && typeof comp.prototype.$on === 'function' : // client-side\n     typeof comp.render === 'function'; // server-side\n}\n\n/**\n * Runs outro transition then destroys Svelte component.\n *\n * Workaround for https://github.com/sveltejs/svelte/issues/4056\n *\n * @param {*}  instance - A Svelte component.\n */\nasync function outroAndDestroy(instance)\n{\n   return new Promise((resolve) =>\n   {\n      if (instance.$$.fragment && instance.$$.fragment.o)\n      {\n         group_outros();\n         transition_out(instance.$$.fragment, 0, 0, () =>\n         {\n            instance.$destroy();\n            resolve();\n         });\n         check_outros();\n      }\n      else\n      {\n         instance.$destroy();\n         resolve();\n      }\n   });\n}\n\n/**\n * Parses a TyphonJS Svelte config object ensuring that classes specified are Svelte components and props are set\n * correctly.\n *\n * @param {object}   config - Svelte config object.\n *\n * @param {*}        [thisArg] - `This` reference to set for invoking any props function.\n *\n * @returns {object} The processed Svelte config object.\n */\nfunction parseSvelteConfig(config, thisArg = void 0)\n{\n   if (typeof config !== 'object')\n   {\n      throw new TypeError(`parseSvelteConfig - 'config' is not an object:\\n${JSON.stringify(config)}.`);\n   }\n\n   if (!isSvelteComponent(config.class))\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'class' is not a Svelte component constructor for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   if (config.hydrate !== void 0 && typeof config.hydrate !== 'boolean')\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'hydrate' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   if (config.intro !== void 0 && typeof config.intro !== 'boolean')\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'intro' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   if (config.target !== void 0 && typeof config.target !== 'string' && !(config.target instanceof HTMLElement) &&\n    !(config.target instanceof ShadowRoot) && !(config.target instanceof DocumentFragment))\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'target' is not a string, HTMLElement, ShadowRoot, or DocumentFragment for config:\\n${\n        JSON.stringify(config)}.`);\n   }\n\n   if (config.anchor !== void 0 && typeof config.anchor !== 'string' && !(config.anchor instanceof HTMLElement) &&\n    !(config.anchor instanceof ShadowRoot) && !(config.anchor instanceof DocumentFragment))\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'anchor' is not a string, HTMLElement, ShadowRoot, or DocumentFragment for config:\\n${\n        JSON.stringify(config)}.`);\n   }\n\n   if (config.context !== void 0 && typeof config.context !== 'function' && !(config.context instanceof Map) &&\n    typeof config.context !== 'object')\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'context' is not a Map, function or object for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   // Validate extra TyphonJS options --------------------------------------------------------------------------------\n\n   // `selectorTarget` optionally stores a target element found in main element.\n   if (config.selectorTarget !== void 0 && typeof config.selectorTarget !== 'string')\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'selectorTarget' is not a string for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   // `options` stores `injectApp`, `injectEventbus`, and `selectorElement`.\n   if (config.options !== void 0 && typeof config.options !== 'object')\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'options' is not an object for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   // Validate TyphonJS standard options.\n   if (config.options !== void 0)\n   {\n      if (config.options.injectApp !== void 0 && typeof config.options.injectApp !== 'boolean')\n      {\n         throw new TypeError(\n          `parseSvelteConfig - 'options.injectApp' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n      }\n\n      if (config.options.injectEventbus !== void 0 && typeof config.options.injectEventbus !== 'boolean')\n      {\n         throw new TypeError(\n          `parseSvelteConfig - 'options.injectEventbus' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n      }\n\n      // `selectorElement` optionally stores a main element selector to be found in a HTMLElement target.\n      if (config.options.selectorElement !== void 0 && typeof config.options.selectorElement !== 'string')\n      {\n         throw new TypeError(\n          `parseSvelteConfig - 'selectorElement' is not a string for config:\\n${JSON.stringify(config)}.`);\n      }\n   }\n\n   const svelteConfig = { ...config };\n\n   // Delete extra Svelte options.\n   delete svelteConfig.options;\n\n   let externalContext = {};\n\n   // If a context callback function is provided then invoke it with `this` being the Foundry app.\n   // If an object is returned it adds the entries to external context.\n   if (typeof svelteConfig.context === 'function')\n   {\n      const contextFunc = svelteConfig.context;\n      delete svelteConfig.context;\n\n      const result = contextFunc.call(thisArg);\n      if (typeof result === 'object')\n      {\n         externalContext = { ...result };\n      }\n      else\n      {\n         throw new Error(`parseSvelteConfig - 'context' is a function that did not return an object for config:\\n${\n          JSON.stringify(config)}`);\n      }\n   }\n   else if (svelteConfig.context instanceof Map)\n   {\n      externalContext = Object.fromEntries(svelteConfig.context);\n      delete svelteConfig.context;\n   }\n   else if (typeof svelteConfig.context === 'object')\n   {\n      externalContext = svelteConfig.context;\n      delete svelteConfig.context;\n   }\n\n   // If a props is a function then invoke it with `this` being the Foundry app.\n   // If an object is returned set it as the props.\n   svelteConfig.props = s_PROCESS_PROPS(svelteConfig.props, thisArg, config);\n\n   // Process children components attaching to external context.\n   if (Array.isArray(svelteConfig.children))\n   {\n      const children = [];\n\n      for (let cntr = 0; cntr < svelteConfig.children.length; cntr++)\n      {\n         const child = svelteConfig.children[cntr];\n\n         if (!isSvelteComponent(child.class))\n         {\n            throw new Error(`parseSvelteConfig - 'class' is not a Svelte component for child[${cntr}] for config:\\n${\n             JSON.stringify(config)}`);\n         }\n\n         child.props = s_PROCESS_PROPS(child.props, thisArg, config);\n\n         children.push(child);\n      }\n\n      if (children.length > 0)\n      {\n         externalContext.children = children;\n      }\n\n      delete svelteConfig.children;\n   }\n   else if (typeof svelteConfig.children === 'object')\n   {\n      if (!isSvelteComponent(svelteConfig.children.class))\n      {\n         throw new Error(`parseSvelteConfig - 'class' is not a Svelte component for children object for config:\\n${\n          JSON.stringify(config)}`);\n      }\n\n      svelteConfig.children.props = s_PROCESS_PROPS(svelteConfig.children.props, thisArg, config);\n\n      externalContext.children = [svelteConfig.children];\n      delete svelteConfig.children;\n   }\n\n   if (!(svelteConfig.context instanceof Map))\n   {\n      svelteConfig.context = new Map();\n   }\n\n   svelteConfig.context.set('external', externalContext);\n\n   return svelteConfig;\n}\n\n/**\n * Processes Svelte props. Potentially props can be a function to invoke with `thisArg`.\n *\n * @param {object|Function}   props - Svelte props.\n *\n * @param {*}                 thisArg - `This` reference to set for invoking any props function.\n *\n * @param {object}            config - Svelte config\n *\n * @returns {object|void}     Svelte props.\n */\nfunction s_PROCESS_PROPS(props, thisArg, config)\n{\n   // If a props is a function then invoke it with `this` being the Foundry app.\n   // If an object is returned set it as the props.\n   if (typeof props === 'function')\n   {\n      const result = props.call(thisArg);\n      if (typeof result === 'object')\n      {\n         return result;\n      }\n      else\n      {\n         throw new Error(`parseSvelteConfig - 'props' is a function that did not return an object for config:\\n${\n          JSON.stringify(config)}`);\n      }\n   }\n   else if (typeof props === 'object')\n   {\n      return props;\n   }\n   else if (props !== void 0)\n   {\n      throw new Error(\n       `parseSvelteConfig - 'props' is not a function or an object for config:\\n${JSON.stringify(config)}`);\n   }\n\n   return {};\n}\n\n/**\n * Wraps a callback in a debounced timeout.\n *\n * Delay execution of the callback function until the function has not been called for the given delay in milliseconds.\n *\n * @param {Function} callback - A function to execute once the debounced threshold has been passed.\n *\n * @param {number}   delay - An amount of time in milliseconds to delay.\n *\n * @return {Function} A wrapped function that can be called to debounce execution.\n */\nfunction debounce(callback, delay)\n{\n   let timeoutId;\n\n   return function(...args)\n   {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => { callback.apply(this, args); }, delay);\n   }\n}\n\n/**\n * Provides a method to determine if the passed in Svelte component has a getter accessor.\n *\n * @param {*}        object - An object.\n *\n * @param {string}   accessor - Accessor to test.\n *\n * @returns {boolean} Whether the component has the getter for accessor.\n */\nfunction hasGetter(object, accessor)\n{\n   if (object === null || object === void 0) { return false; }\n\n   // Check for instance accessor.\n   const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n   if (iDescriptor !== void 0 && iDescriptor.get !== void 0) { return true; }\n\n   // Walk parent prototype chain. Check for descriptor at each prototype level.\n   for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o))\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n      if (descriptor !== void 0 && descriptor.get !== void 0) { return true; }\n   }\n\n   return false;\n}\n\n/**\n * Provides a method to determine if the passed in Svelte component has a getter & setter accessor.\n *\n * @param {*}        object - An object.\n *\n * @param {string}   accessor - Accessor to test.\n *\n * @returns {boolean} Whether the component has the getter and setter for accessor.\n */\nfunction hasAccessor(object, accessor)\n{\n   if (object === null || object === void 0) { return false; }\n\n   // Check for instance accessor.\n   const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n   if (iDescriptor !== void 0 && iDescriptor.get !== void 0 && iDescriptor.set !== void 0) { return true; }\n\n   // Walk parent prototype chain. Check for descriptor at each prototype level.\n   for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o))\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n      if (descriptor !== void 0 && descriptor.get !== void 0 && descriptor.set !== void 0) { return true; }\n   }\n\n   return false;\n}\n\n/**\n * Provides a method to determine if the passed in Svelte component has a setter accessor.\n *\n * @param {*}        object - An object.\n *\n * @param {string}   accessor - Accessor to test.\n *\n * @returns {boolean} Whether the component has the setter for accessor.\n */\nfunction hasSetter(object, accessor)\n{\n   if (object === null || object === void 0) { return false; }\n\n   // Check for instance accessor.\n   const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n   if (iDescriptor !== void 0 && iDescriptor.set !== void 0) { return true; }\n\n   // Walk parent prototype chain. Check for descriptor at each prototype level.\n   for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o))\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n      if (descriptor !== void 0 && descriptor.set !== void 0) { return true; }\n   }\n\n   return false;\n}\n\nfunction set(obj, key, val) {\n\tif (typeof val.value === 'object') val.value = klona(val.value);\n\tif (!val.enumerable || val.get || val.set || !val.configurable || !val.writable || key === '__proto__') {\n\t\tObject.defineProperty(obj, key, val);\n\t} else obj[key] = val.value;\n}\n\nfunction klona(x) {\n\tif (typeof x !== 'object') return x;\n\n\tvar i=0, k, list, tmp, str=Object.prototype.toString.call(x);\n\n\tif (str === '[object Object]') {\n\t\ttmp = Object.create(x.__proto__ || null);\n\t} else if (str === '[object Array]') {\n\t\ttmp = Array(x.length);\n\t} else if (str === '[object Set]') {\n\t\ttmp = new Set;\n\t\tx.forEach(function (val) {\n\t\t\ttmp.add(klona(val));\n\t\t});\n\t} else if (str === '[object Map]') {\n\t\ttmp = new Map;\n\t\tx.forEach(function (val, key) {\n\t\t\ttmp.set(klona(key), klona(val));\n\t\t});\n\t} else if (str === '[object Date]') {\n\t\ttmp = new Date(+x);\n\t} else if (str === '[object RegExp]') {\n\t\ttmp = new RegExp(x.source, x.flags);\n\t} else if (str === '[object DataView]') {\n\t\ttmp = new x.constructor( klona(x.buffer) );\n\t} else if (str === '[object ArrayBuffer]') {\n\t\ttmp = x.slice(0);\n\t} else if (str.slice(-6) === 'Array]') {\n\t\t// ArrayBuffer.isView(x)\n\t\t// ~> `new` bcuz `Buffer.slice` => ref\n\t\ttmp = new x.constructor(x);\n\t}\n\n\tif (tmp) {\n\t\tfor (list=Object.getOwnPropertySymbols(x); i < list.length; i++) {\n\t\t\tset(tmp, list[i], Object.getOwnPropertyDescriptor(x, list[i]));\n\t\t}\n\n\t\tfor (i=0, list=Object.getOwnPropertyNames(x); i < list.length; i++) {\n\t\t\tif (Object.hasOwnProperty.call(tmp, k=list[i]) && tmp[k] === x[k]) continue;\n\t\t\tset(tmp, k, Object.getOwnPropertyDescriptor(x, k));\n\t\t}\n\t}\n\n\treturn tmp || x;\n}\n\n/**\n * Provides common object manipulation utilities including depth traversal, obtaining accessors, safely setting values /\n * equality tests, and validation.\n */\n\nconst s_TAG_OBJECT = '[object Object]';\n\n/**\n * Recursively deep merges all source objects into the target object in place. Like `Object.assign` if you provide `{}`\n * as the target a copy is produced. If the target and source property are object literals they are merged.\n * Deleting keys is supported by specifying a property starting with `-=`.\n *\n * @param {object}      target - Target object.\n *\n * @param {...object}   sourceObj - One or more source objects.\n *\n * @returns {object}    Target object.\n */\nfunction deepMerge(target = {}, ...sourceObj)\n{\n   if (Object.prototype.toString.call(target) !== s_TAG_OBJECT)\n   {\n      throw new TypeError(`deepMerge error: 'target' is not an 'object'.`);\n   }\n\n   for (let cntr = 0; cntr < sourceObj.length; cntr++)\n   {\n      if (Object.prototype.toString.call(sourceObj[cntr]) !== s_TAG_OBJECT)\n      {\n         throw new TypeError(`deepMerge error: 'sourceObj[${cntr}]' is not an 'object'.`);\n      }\n   }\n\n   return _deepMerge(target, ...sourceObj);\n}\n\n/**\n * Tests for whether an object is iterable.\n *\n * @param {*} value - Any value.\n *\n * @returns {boolean} Whether object is iterable.\n */\nfunction isIterable(value)\n{\n   if (value === null || value === void 0 || typeof value !== 'object') { return false; }\n\n   return typeof value[Symbol.iterator] === 'function';\n}\n\n/**\n * Tests for whether an object is async iterable.\n *\n * @param {*} value - Any value.\n *\n * @returns {boolean} Whether value is async iterable.\n */\nfunction isIterableAsync(value)\n{\n   if (value === null || value === void 0 || typeof value !== 'object') { return false; }\n\n   return typeof value[Symbol.asyncIterator] === 'function';\n}\n\n/**\n * Tests for whether object is not null and a typeof object.\n *\n * @param {*} value - Any value.\n *\n * @returns {boolean} Is it an object.\n */\nfunction isObject(value)\n{\n   return value !== null && typeof value === 'object';\n}\n\n/**\n * Tests for whether the given value is a plain object.\n *\n * An object is plain if it is created by either: {}, new Object() or Object.create(null).\n *\n * @param {*} value - Any value\n *\n * @returns {boolean} Is it a plain object.\n */\nfunction isPlainObject(value)\n{\n   if (Object.prototype.toString.call(value) !== s_TAG_OBJECT) { return false; }\n\n   const prototype = Object.getPrototypeOf(value);\n   return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Provides a way to safely access an objects data / entries given an accessor string which describes the\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n * to walk.\n *\n * @param {object}   data - An object to access entry data.\n *\n * @param {string}   accessor - A string describing the entries to access.\n *\n * @param {*}        defaultValue - (Optional) A default value to return if an entry for accessor is not found.\n *\n * @returns {object} The data object.\n */\nfunction safeAccess(data, accessor, defaultValue = void 0)\n{\n   if (typeof data !== 'object') { return defaultValue; }\n   if (typeof accessor !== 'string') { return defaultValue; }\n\n   const access = accessor.split('.');\n\n   // Walk through the given object by the accessor indexes.\n   for (let cntr = 0; cntr < access.length; cntr++)\n   {\n      // If the next level of object access is undefined or null then return the empty string.\n      if (typeof data[access[cntr]] === 'undefined' || data[access[cntr]] === null) { return defaultValue; }\n\n      data = data[access[cntr]];\n   }\n\n   return data;\n}\n\n/**\n * Provides a way to safely set an objects data / entries given an accessor string which describes the\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n * to walk.\n *\n * @param {object}   data - An object to access entry data.\n *\n * @param {string}   accessor - A string describing the entries to access.\n *\n * @param {*}        value - A new value to set if an entry for accessor is found.\n *\n * @param {string}   [operation='set'] - Operation to perform including: 'add', 'div', 'mult', 'set',\n *                                       'set-undefined', 'sub'.\n *\n * @param {boolean}  [createMissing=true] - If true missing accessor entries will be created as objects\n *                                          automatically.\n *\n * @returns {boolean} True if successful.\n */\nfunction safeSet(data, accessor, value, operation = 'set', createMissing = true)\n{\n   if (typeof data !== 'object') { throw new TypeError(`safeSet Error: 'data' is not an 'object'.`); }\n   if (typeof accessor !== 'string') { throw new TypeError(`safeSet Error: 'accessor' is not a 'string'.`); }\n\n   const access = accessor.split('.');\n\n   // Walk through the given object by the accessor indexes.\n   for (let cntr = 0; cntr < access.length; cntr++)\n   {\n      // If data is an array perform validation that the accessor is a positive integer otherwise quit.\n      if (Array.isArray(data))\n      {\n         const number = (+access[cntr]);\n\n         if (!Number.isInteger(number) || number < 0) { return false; }\n      }\n\n      if (cntr === access.length - 1)\n      {\n         switch (operation)\n         {\n            case 'add':\n               data[access[cntr]] += value;\n               break;\n\n            case 'div':\n               data[access[cntr]] /= value;\n               break;\n\n            case 'mult':\n               data[access[cntr]] *= value;\n               break;\n\n            case 'set':\n               data[access[cntr]] = value;\n               break;\n\n            case 'set-undefined':\n               if (typeof data[access[cntr]] === 'undefined') { data[access[cntr]] = value; }\n               break;\n\n            case 'sub':\n               data[access[cntr]] -= value;\n               break;\n         }\n      }\n      else\n      {\n         // If createMissing is true and the next level of object access is undefined then create a new object entry.\n         if (createMissing && typeof data[access[cntr]] === 'undefined') { data[access[cntr]] = {}; }\n\n         // Abort if the next level is null or not an object and containing a value.\n         if (data[access[cntr]] === null || typeof data[access[cntr]] !== 'object') { return false; }\n\n         data = data[access[cntr]];\n      }\n   }\n\n   return true;\n}\n\n/**\n * Internal implementation for `deepMerge`.\n *\n * @param {object}      target - Target object.\n *\n * @param {...object}   sourceObj - One or more source objects.\n *\n * @returns {object}    Target object.\n */\nfunction _deepMerge(target = {}, ...sourceObj)\n{\n   // Iterate and merge all source objects into target.\n   for (let cntr = 0; cntr < sourceObj.length; cntr++)\n   {\n      const obj = sourceObj[cntr];\n\n      for (const prop in obj)\n      {\n         if (Object.prototype.hasOwnProperty.call(obj, prop))\n         {\n            // Handle the special property starting with '-=' to delete keys.\n            if (prop.startsWith('-='))\n            {\n               delete target[prop.slice(2)];\n               continue;\n            }\n\n            // If target already has prop and both target[prop] and obj[prop] are object literals then merge them\n            // otherwise assign obj[prop] to target[prop].\n            target[prop] = Object.prototype.hasOwnProperty.call(target, prop) && target[prop]?.constructor === Object &&\n            obj[prop]?.constructor === Object ? _deepMerge({}, target[prop], obj[prop]) : obj[prop];\n         }\n      }\n   }\n\n   return target;\n}\n\n/**\n * Attempts to create a Foundry UUID from standard drop data. This may not work for all systems.\n *\n * @param {object}   data - Drop transfer data.\n *\n * @param {ParseDataTransferOptions}   opts - Optional parameters.\n *\n * @returns {string|undefined} Foundry UUID for drop data.\n */\nfunction getUUIDFromDataTransfer(data, { actor = true, compendium = true, world = true, types = void 0 } = {})\n{\n   if (typeof data !== 'object') { return void 0; }\n   if (Array.isArray(types) && !types.includes(data.type)) { return void 0; }\n\n   let uuid = void 0;\n\n   // TODO: v10 will change the `data.data._id` relationship possibly.\n   if (actor && world && data.actorId && data.type)\n   {\n      uuid = `Actor.${data.actorId}.${data.type}.${data.data._id}`;\n   }\n   else if (data.id)\n   {\n      if (compendium && typeof data.pack === 'string')\n      {\n         uuid = `Compendium.${data.pack}.${data.id}`;\n      }\n      else if (world)\n      {\n         uuid = `${data.type}.${data.id}`;\n      }\n   }\n\n   return uuid;\n}\n\nexport { debounce, deepMerge, getStackingContext, getUUIDFromDataTransfer, hasAccessor, hasGetter, hasSetter, hashCode, isApplicationShell, isHMRProxy, isIterable, isIterableAsync, isObject, isPlainObject, isSvelteComponent, klona, normalizeString, outroAndDestroy, parseSvelteConfig, safeAccess, safeSet, styleParsePixels, uuidv4 };\n//# sourceMappingURL=index.js.map\n","import { writable as writable$2, derived, get } from 'svelte/store';\nimport { noop, run_all, is_function } from 'svelte/internal';\nimport { uuidv4, isPlainObject, getUUIDFromDataTransfer, isObject, isIterable } from '@typhonjs-fvtt/runtime/svelte/util';\n\n/**\n * Provides the storage and sequencing of managed filters. Each filter added may be a bespoke function or a\n * {@link FilterData} object containing an `id`, `filter`, and `weight` attributes; `filter` is the only required\n * attribute.\n *\n * The `id` attribute can be anything that creates a unique ID for the filter; recommended strings or numbers. This\n * allows filters to be removed by ID easily.\n *\n * The `weight` attribute is a number between 0 and 1 inclusive that allows filters to be added in a\n * predictable order which is especially handy if they are manipulated at runtime. A lower weighted filter always runs\n * before a higher weighted filter. For speed and efficiency always set the heavier / more inclusive filter with a\n * lower weight; an example of this is a keyword / name that will filter out many entries making any further filtering\n * faster. If no weight is specified the default of '1' is assigned and it is appended to the end of the filters list.\n *\n * This class forms the public API which is accessible from the `.filters` getter in the main DynArrayReducer instance.\n * ```\n * const dynArray = new DynArrayReducer([...]);\n * dynArray.filters.add(...);\n * dynArray.filters.clear();\n * dynArray.filters.length;\n * dynArray.filters.remove(...);\n * dynArray.filters.removeBy(...);\n * dynArray.filters.removeById(...);\n * ```\n *\n * @template T\n */\nclass AdapterFilters\n{\n   #filtersAdapter;\n   #indexUpdate;\n   #mapUnsubscribe = new Map();\n\n   /**\n    * @param {Function} indexUpdate - update function for the indexer.\n    *\n    * @returns {[AdapterFilters<T>, {filters: FilterData<T>[]}]} Returns this and internal storage for filter adapters.\n    */\n   constructor(indexUpdate)\n   {\n      this.#indexUpdate = indexUpdate;\n\n      this.#filtersAdapter = { filters: [] };\n\n      Object.seal(this);\n\n      return [this, this.#filtersAdapter];\n   }\n\n   /**\n    * @returns {number} Returns the length of the\n    */\n   get length() { return this.#filtersAdapter.filters.length; }\n\n   /**\n    * Provides an iterator for filters.\n    *\n    * @returns {Generator<number|undefined, FilterData<T>, *>} Generator / iterator of filters.\n    * @yields {FilterData<T>}\n    */\n   *[Symbol.iterator]()\n   {\n      if (this.#filtersAdapter.filters.length === 0) { return; }\n\n      for (const entry of this.#filtersAdapter.filters)\n      {\n         yield { ...entry };\n      }\n   }\n\n   /**\n    * @param {...(FilterFn<T>|FilterData<T>)}   filters -\n    */\n   add(...filters)\n   {\n      /**\n       * Tracks the number of filters added that have subscriber functionality.\n       *\n       * @type {number}\n       */\n      let subscribeCount = 0;\n\n      for (const filter of filters)\n      {\n         const filterType = typeof filter;\n\n         if (filterType !== 'function' && filterType !== 'object' || filter === null)\n         {\n            throw new TypeError(`DynArrayReducer error: 'filter' is not a function or object.`);\n         }\n\n         let data = void 0;\n         let subscribeFn = void 0;\n\n         switch (filterType)\n         {\n            case 'function':\n               data = {\n                  id: void 0,\n                  filter,\n                  weight: 1\n               };\n\n               subscribeFn = filter.subscribe;\n               break;\n\n            case 'object':\n               if (typeof filter.filter !== 'function')\n               {\n                  throw new TypeError(`DynArrayReducer error: 'filter' attribute is not a function.`);\n               }\n\n               if (filter.weight !== void 0 && typeof filter.weight !== 'number' ||\n                (filter.weight < 0 || filter.weight > 1))\n               {\n                  throw new TypeError(\n                   `DynArrayReducer error: 'weight' attribute is not a number between '0 - 1' inclusive.`);\n               }\n\n               data = {\n                  id: filter.id !== void 0 ? filter.id : void 0,\n                  filter: filter.filter,\n                  weight: filter.weight || 1\n               };\n\n               subscribeFn = filter.filter.subscribe ?? filter.subscribe;\n               break;\n         }\n\n         // Find the index to insert where data.weight is less than existing values weight.\n         const index = this.#filtersAdapter.filters.findIndex((value) =>\n         {\n            return data.weight < value.weight;\n         });\n\n         // If an index was found insert at that location.\n         if (index >= 0)\n         {\n            this.#filtersAdapter.filters.splice(index, 0, data);\n         }\n         else // push to end of filters.\n         {\n            this.#filtersAdapter.filters.push(data);\n         }\n\n         if (typeof subscribeFn === 'function')\n         {\n            const unsubscribe = subscribeFn(this.#indexUpdate);\n\n            // Ensure that unsubscribe is a function.\n            if (typeof unsubscribe !== 'function')\n            {\n               throw new TypeError(\n                'DynArrayReducer error: Filter has subscribe function, but no unsubscribe function is returned.');\n            }\n\n            // Ensure that the same filter is not subscribed to multiple times.\n            if (this.#mapUnsubscribe.has(data.filter))\n            {\n               throw new Error(\n                'DynArrayReducer error: Filter added already has an unsubscribe function registered.');\n            }\n\n            this.#mapUnsubscribe.set(data.filter, unsubscribe);\n            subscribeCount++;\n         }\n      }\n\n      // Filters with subscriber functionality are assumed to immediately invoke the `subscribe` callback. If the\n      // subscriber count is less than the amount of filters added then automatically trigger an index update manually.\n      if (subscribeCount < filters.length) { this.#indexUpdate(); }\n   }\n\n   clear()\n   {\n      this.#filtersAdapter.filters.length = 0;\n\n      // Unsubscribe from all filters with subscription support.\n      for (const unsubscribe of this.#mapUnsubscribe.values())\n      {\n         unsubscribe();\n      }\n\n      this.#mapUnsubscribe.clear();\n\n      this.#indexUpdate();\n   }\n\n   /**\n    * @param {...(FilterFn<T>|FilterData<T>)}   filters -\n    */\n   remove(...filters)\n   {\n      const length = this.#filtersAdapter.filters.length;\n\n      if (length === 0) { return; }\n\n      for (const data of filters)\n      {\n         // Handle the case that the filter may either be a function or a filter entry / object.\n         const actualFilter = typeof data === 'function' ? data : data !== null && typeof data === 'object' ?\n          data.filter : void 0;\n\n         if (!actualFilter) { continue; }\n\n         for (let cntr = this.#filtersAdapter.filters.length; --cntr >= 0;)\n         {\n            if (this.#filtersAdapter.filters[cntr].filter === actualFilter)\n            {\n               this.#filtersAdapter.filters.splice(cntr, 1);\n\n               // Invoke any unsubscribe function for given filter then remove from tracking.\n               let unsubscribe = void 0;\n               if (typeof (unsubscribe = this.#mapUnsubscribe.get(actualFilter)) === 'function')\n               {\n                  unsubscribe();\n                  this.#mapUnsubscribe.delete(actualFilter);\n               }\n            }\n         }\n      }\n\n      // Update the index a filter was removed.\n      if (length !== this.#filtersAdapter.filters.length) { this.#indexUpdate(); }\n   }\n\n   /**\n    * Remove filters by the provided callback. The callback takes 3 parameters: `id`, `filter`, and `weight`.\n    * Any truthy value returned will remove that filter.\n    *\n    * @param {function(*, FilterFn<T>, number): boolean} callback - Callback function to evaluate each filter entry.\n    */\n   removeBy(callback)\n   {\n      const length = this.#filtersAdapter.filters.length;\n\n      if (length === 0) { return; }\n\n      if (typeof callback !== 'function')\n      {\n         throw new TypeError(`DynArrayReducer error: 'callback' is not a function.`);\n      }\n\n      this.#filtersAdapter.filters = this.#filtersAdapter.filters.filter((data) =>\n      {\n         const remove = callback.call(callback, { ...data });\n\n         if (remove)\n         {\n            let unsubscribe;\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.filter)) === 'function')\n            {\n               unsubscribe();\n               this.#mapUnsubscribe.delete(data.filter);\n            }\n         }\n\n         // Reverse remove boolean to properly filter / remove this filter.\n         return !remove;\n      });\n\n      if (length !== this.#filtersAdapter.filters.length) { this.#indexUpdate(); }\n   }\n\n   removeById(...ids)\n   {\n      const length = this.#filtersAdapter.filters.length;\n\n      if (length === 0) { return; }\n\n      this.#filtersAdapter.filters = this.#filtersAdapter.filters.filter((data) =>\n      {\n         let remove = false;\n\n         for (const id of ids) { remove |= data.id === id; }\n\n         // If not keeping invoke any unsubscribe function for given filter then remove from tracking.\n         if (remove)\n         {\n            let unsubscribe;\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.filter)) === 'function')\n            {\n               unsubscribe();\n               this.#mapUnsubscribe.delete(data.filter);\n            }\n         }\n\n         return !remove; // Swap here to actually remove the item via array filter method.\n      });\n\n      if (length !== this.#filtersAdapter.filters.length) { this.#indexUpdate(); }\n   }\n}\n\n/**\n * @template T\n */\nclass AdapterSort\n{\n   #sortAdapter;\n   #indexUpdate;\n   #unsubscribe;\n\n   /**\n    * @param {Function} indexUpdate - Function to update indexer.\n    *\n    * @returns {[AdapterSort<T>, {compareFn: CompareFn<T>}]} This and the internal sort adapter data.\n    */\n   constructor(indexUpdate)\n   {\n      this.#indexUpdate = indexUpdate;\n\n      this.#sortAdapter = { compareFn: null };\n\n      Object.seal(this);\n\n      return [this, this.#sortAdapter];\n   }\n\n   /**\n    * @param {CompareFn<T>|SortData<T>}  data -\n    *\n    * A callback function that compares two values. Return > 0 to sort b before a;\n    * < 0 to sort a before b; or 0 to keep original order of a & b.\n    *\n    * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#parameters\n    */\n   set(data)\n   {\n      if (typeof this.#unsubscribe === 'function')\n      {\n         this.#unsubscribe();\n         this.#unsubscribe = void 0;\n      }\n\n      let compareFn = void 0;\n      let subscribeFn = void 0;\n\n      switch (typeof data)\n      {\n         case 'function':\n            compareFn = data;\n            subscribeFn = data.subscribe;\n            break;\n\n         case 'object':\n            // Early out if data is null / noop.\n            if (data === null) { break; }\n\n            if (typeof data.compare !== 'function')\n            {\n               throw new TypeError(`DynArrayReducer error: 'compare' attribute is not a function.`);\n            }\n\n            compareFn = data.compare;\n            subscribeFn = data.compare.subscribe ?? data.subscribe;\n            break;\n      }\n\n      if (typeof compareFn === 'function')\n      {\n         this.#sortAdapter.compareFn = compareFn;\n      }\n      else\n      {\n         const oldCompareFn = this.#sortAdapter.compareFn;\n         this.#sortAdapter.compareFn = null;\n\n         // Update index if the old compare function exists.\n         if (typeof oldCompareFn === 'function') { this.#indexUpdate(); }\n         return;\n      }\n\n      if (typeof subscribeFn === 'function')\n      {\n         this.#unsubscribe = subscribeFn(this.#indexUpdate);\n\n         // Ensure that unsubscribe is a function.\n         if (typeof this.#unsubscribe !== 'function')\n         {\n            throw new Error(\n             `DynArrayReducer error: sort has 'subscribe' function, but no 'unsubscribe' function is returned.`);\n         }\n      }\n      else\n      {\n         // A sort function with subscriber functionality are assumed to immediately invoke the `subscribe` callback.\n         // Only manually update the index if there is no subscriber functionality.\n         this.#indexUpdate();\n      }\n   }\n\n   reset()\n   {\n      const oldCompareFn = this.#sortAdapter.compareFn;\n\n      this.#sortAdapter.compareFn = null;\n\n      if (typeof this.#unsubscribe === 'function')\n      {\n         this.#unsubscribe();\n         this.#unsubscribe = void 0;\n      }\n\n      // Only update index if an old compare function is set.\n      if (typeof oldCompareFn === 'function') { this.#indexUpdate(); }\n   }\n}\n\nclass Indexer\n{\n   constructor(host, hostItems, hostUpdate)\n   {\n      this.hostItems = hostItems;\n      this.hostUpdate = hostUpdate;\n\n      const indexAdapter = { index: null, hash: null };\n\n      const publicAPI = {\n         update: this.update.bind(this),\n\n         /**\n          * Provides an iterator over the index array.\n          *\n          * @returns {Generator<any, void, *>} Iterator.\n          * @yields\n          */\n         [Symbol.iterator]: function *()\n         {\n            if (!indexAdapter.index) { return; }\n\n            const reversed = host.reversed;\n            const length = indexAdapter.index.length;\n\n            if (reversed)\n            {\n               for (let cntr = length; --cntr >= 0;) { yield indexAdapter.index[cntr]; }\n            }\n            else\n            {\n               for (let cntr = 0; cntr < length; cntr++) { yield indexAdapter.index[cntr]; }\n            }\n         }\n      };\n\n      // Define a getter on the public API to get the length / count of index array.\n      Object.defineProperties(publicAPI, {\n         hash: { get: () => indexAdapter.hash },\n         isActive: { get: () => this.isActive() },\n         length: { get: () => Array.isArray(indexAdapter.index) ? indexAdapter.index.length : 0 }\n      });\n\n      Object.freeze(publicAPI);\n\n      indexAdapter.publicAPI = publicAPI;\n\n      this.indexAdapter = indexAdapter;\n\n      return [this, indexAdapter];\n   }\n\n   /**\n    * Calculates a new hash value for the new index array if any. If the new index array is null then the hash value\n    * is set to null. Set calculated new hash value to the index adapter hash value.\n    *\n    * After hash generation compare old and new hash values and perform an update if they are different. If they are\n    * equal check for array equality between the old and new index array and perform an update if they are not equal.\n    *\n    * @param {number[]}    oldIndex - Old index array.\n    *\n    * @param {number|null} oldHash - Old index hash value.\n    *\n    * @param {boolean}     [force=false] - When true forces an update to subscribers.\n    */\n   calcHashUpdate(oldIndex, oldHash, force = false)\n   {\n      // Use force if a boolean otherwise default to false.\n      const actualForce = typeof force === 'boolean' ? force : /* c8 ignore next */ false;\n\n      let newHash = null;\n      const newIndex = this.indexAdapter.index;\n\n      if (newIndex)\n      {\n         for (let cntr = newIndex.length; --cntr >= 0;)\n         {\n            newHash ^= newIndex[cntr] + 0x9e3779b9 + (newHash << 6) + (newHash >> 2);\n         }\n      }\n\n      this.indexAdapter.hash = newHash;\n\n      if (actualForce || (oldHash === newHash ? !s_ARRAY_EQUALS(oldIndex, newIndex) : true)) { this.hostUpdate(); }\n   }\n\n   initAdapters(filtersAdapter, sortAdapter)\n   {\n      this.filtersAdapter = filtersAdapter;\n      this.sortAdapter = sortAdapter;\n\n      this.sortFn = (a, b) =>\n      {\n         return this.sortAdapter.compareFn(this.hostItems[a], this.hostItems[b]);\n      };\n   }\n\n   isActive()\n   {\n      return this.filtersAdapter.filters.length > 0 || this.sortAdapter.compareFn !== null;\n   }\n\n   /**\n    * Provides the custom filter / reduce step that is ~25-40% faster than implementing with `Array.reduce`.\n    *\n    * Note: Other loop unrolling techniques like Duff's Device gave a slight faster lower bound on large data sets,\n    * but the maintenance factor is not worth the extra complication.\n    *\n    * @returns {number[]} New filtered index array.\n    */\n   reduceImpl()\n   {\n      const data = [];\n\n      const filters = this.filtersAdapter.filters;\n\n      let include = true;\n\n      for (let cntr = 0, length = this.hostItems.length; cntr < length; cntr++)\n      {\n         include = true;\n\n         for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++)\n         {\n            if (!filters[filCntr].filter(this.hostItems[cntr]))\n            {\n               include = false;\n               break;\n            }\n         }\n\n         if (include) { data.push(cntr); }\n      }\n\n      return data;\n   }\n\n   /**\n    * Update the reducer indexes. If there are changes subscribers are notified. If data order is changed externally\n    * pass in true to force an update to subscribers.\n    *\n    * @param {boolean}  [force=false] - When true forces an update to subscribers.\n    */\n   update(force = false)\n   {\n      const oldIndex = this.indexAdapter.index;\n      const oldHash = this.indexAdapter.hash;\n\n      // Clear index if there are no filters and no sort function or the index length doesn't match the item length.\n      if ((this.filtersAdapter.filters.length === 0 && !this.sortAdapter.compareFn) ||\n       (this.indexAdapter.index && this.hostItems.length !== this.indexAdapter.index.length))\n      {\n         this.indexAdapter.index = null;\n      }\n\n      // If there are filters build new index.\n      if (this.filtersAdapter.filters.length > 0) { this.indexAdapter.index = this.reduceImpl(); }\n\n      if (this.sortAdapter.compareFn)\n      {\n         // If there is no index then create one with keys matching host item length.\n         if (!this.indexAdapter.index) { this.indexAdapter.index = [...Array(this.hostItems.length).keys()]; }\n\n         this.indexAdapter.index.sort(this.sortFn);\n      }\n\n      this.calcHashUpdate(oldIndex, oldHash, force);\n   }\n}\n\n/**\n * Checks for array equality between two arrays of numbers.\n *\n * @param {number[]} a - Array A\n *\n * @param {number[]} b - Array B\n *\n * @returns {boolean} Arrays equal\n */\nfunction s_ARRAY_EQUALS(a, b)\n{\n   if (a === b) { return true; }\n   if (a === null || b === null) { return false; }\n\n   /* c8 ignore next */\n   if (a.length !== b.length) { return false; }\n\n   for (let cntr = a.length; --cntr >= 0;)\n   {\n      /* c8 ignore next */\n      if (a[cntr] !== b[cntr]) { return false; }\n   }\n\n   return true;\n}\n\n/**\n * Provides a managed array with non-destructive reducing / filtering / sorting capabilities with subscription /\n * Svelte store support.\n *\n * @template T\n */\nclass DynArrayReducer\n{\n   #items;\n\n   #index;\n   #indexAdapter;\n\n   /**\n    * @type {AdapterFilters<T>}\n    */\n   #filters;\n\n   /**\n    * @type {{filters: FilterFn<T>[]}}\n    */\n   #filtersAdapter;\n\n   /**\n    * @type {boolean}\n    */\n   #reversed = false;\n\n   /**\n    * @type {AdapterSort<T>}\n    */\n   #sort;\n\n   /**\n    * @type {{compareFn: CompareFn<T>}}\n    */\n   #sortAdapter;\n\n   #subscriptions = [];\n\n   /**\n    * Initializes DynArrayReducer. Any iterable is supported for initial data. Take note that if `data` is an array it\n    * will be used as the host array and not copied. All non-array iterables otherwise create a new array / copy.\n    *\n    * @param {Iterable<T>|DynData<T>}   [data=[]] - Data iterable to store if array or copy otherwise.\n    */\n   constructor(data = [])\n   {\n      let dataIterable = void 0;\n      let filters = void 0;\n      let sort = void 0;\n\n      // Potentially working with DynData.\n      if (!DynArrayReducer.#isIterable(data) && data !== null && typeof data === 'object')\n      {\n         if (!DynArrayReducer.#isIterable(data.data))\n         {\n            throw new TypeError(`DynArrayReducer error (DynData): 'data' attribute is not iterable.`);\n         }\n\n         dataIterable = data.data;\n\n         if (data.filters !== void 0)\n         {\n            if (DynArrayReducer.#isIterable(data.filters))\n            {\n               filters = data.filters;\n            }\n            else\n            {\n               throw new TypeError(`DynArrayReducer error (DynData): 'filters' attribute is not iterable.`);\n            }\n         }\n\n         if (data.sort !== void 0)\n         {\n            if (typeof data.sort === 'function')\n            {\n               sort = data.sort;\n            }\n            else\n            {\n               throw new TypeError(`DynArrayReducer error (DynData): 'sort' attribute is not a function.`);\n            }\n         }\n      }\n      else\n      {\n         if (!DynArrayReducer.#isIterable(data)) { throw new TypeError(`DynArrayReducer error: 'data' is not iterable.`); }\n\n         dataIterable = data;\n      }\n\n      // In the case of the main data being an array directly use the array otherwise create a copy.\n      this.#items = Array.isArray(dataIterable) ? dataIterable : [...dataIterable];\n\n      [this.#index, this.#indexAdapter] = new Indexer(this, this.#items, this.#notify.bind(this));\n\n      [this.#filters, this.#filtersAdapter] = new AdapterFilters(this.#indexAdapter.publicAPI.update);\n      [this.#sort, this.#sortAdapter] = new AdapterSort(this.#indexAdapter.publicAPI.update);\n\n      this.#index.initAdapters(this.#filtersAdapter, this.#sortAdapter);\n\n      // Add any filters and sort function defined by DynData.\n      if (filters) { this.filters.add(...filters); }\n      if (sort) { this.sort.set(sort); }\n   }\n\n   /**\n    * Provides a utility method to determine if the given data is iterable / implements iterator protocol.\n    *\n    * @param {*}  data - Data to verify as iterable.\n    *\n    * @returns {boolean} Is data iterable.\n    */\n   static #isIterable(data)\n   {\n      return data !== null && data !== void 0 && typeof data === 'object' && typeof data[Symbol.iterator] === 'function';\n   }\n\n   /**\n    * Returns the internal data of this instance. Be careful!\n    *\n    * Note: if an array is set as initial data then that array is used as the internal data. If any changes are\n    * performed to the data externally do invoke {@link index.update} with `true` to recalculate the index and notify\n    * all subscribers.\n    *\n    * @returns {T[]} The internal data.\n    */\n   get data() { return this.#items; }\n\n   /**\n    * @returns {AdapterFilters<T>} The filters adapter.\n    */\n   get filters() { return this.#filters; }\n\n   /**\n    * Returns the Indexer public API.\n    *\n    * @returns {IndexerAPI & Iterable<number>} Indexer API - is also iterable.\n    */\n   get index() { return this.#indexAdapter.publicAPI; }\n\n   /**\n    * Gets the main data / items length.\n    *\n    * @returns {number} Main data / items length.\n    */\n   get length() { return this.#items.length; }\n\n   /**\n    * Gets current reversed state.\n    *\n    * @returns {boolean} Reversed state.\n    */\n   get reversed() { return this.#reversed; }\n\n   /**\n    * @returns {AdapterSort<T>} The sort adapter.\n    */\n   get sort() { return this.#sort; }\n\n   /**\n    * Sets reversed state and notifies subscribers.\n    *\n    * @param {boolean} reversed - New reversed state.\n    */\n   set reversed(reversed)\n   {\n      if (typeof reversed !== 'boolean')\n      {\n         throw new TypeError(`DynArrayReducer.reversed error: 'reversed' is not a boolean.`);\n      }\n\n      this.#reversed = reversed;\n\n      // Recalculate index and force an update to any subscribers.\n      this.index.update(true);\n   }\n\n   /**\n    * Removes internal data and pushes new data. This does not destroy any initial array set to internal data unless\n    * `replace` is set to true.\n    *\n    * @param {T[] | Iterable<T>} data - New data to set to internal data.\n    *\n    * @param {boolean} [replace=false] - New data to set to internal data.\n    */\n   setData(data, replace = false)\n   {\n      if (!DynArrayReducer.#isIterable(data))\n      {\n         throw new TypeError(`DynArrayReducer.setData error: 'data' is not iterable.`);\n      }\n\n      if (typeof replace !== 'boolean')\n      {\n         throw new TypeError(`DynArrayReducer.setData error: 'replace' is not a boolean.`);\n      }\n\n      // Replace internal data with new array or create an array from an iterable.\n      if (replace)\n      {\n         this.#items = Array.isArray(data) ? data : [...data];\n      }\n      else\n      {\n         // Remove all entries in internal data. This will not replace any initially set array.\n         this.#items.length = 0;\n\n         // Add all new data.\n         this.#items.push(...data);\n      }\n\n      // Recalculate index and force an update to any subscribers.\n      this.index.update(true);\n   }\n\n   /**\n    *\n    * @param {function(DynArrayReducer<T>): void} handler - Callback function that is invoked on update / changes.\n    *                                                       Receives `this` reference.\n    *\n    * @returns {(function(): void)} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\n\n      handler(this);                     // call handler with current value\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n\n   /**\n    *\n    */\n   #notify()\n   {\n      // Subscriptions are stored locally as on the browser Babel is still used for private class fields / Babel\n      // support until 2023. IE not doing this will require several extra method calls otherwise.\n      const subscriptions = this.#subscriptions;\n      for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](this); }\n   }\n\n   /**\n    * Provides an iterator for data stored in DynArrayReducer.\n    *\n    * @returns {Generator<*, T, *>} Generator / iterator of all data.\n    * @yields {T}\n    */\n   *[Symbol.iterator]()\n   {\n      const items = this.#items;\n\n      if (items.length === 0) { return; }\n\n      if (this.#index.isActive())\n      {\n         for (const entry of this.index) { yield items[entry]; }\n      }\n      else\n      {\n         if (this.reversed)\n         {\n            for (let cntr = items.length; --cntr >= 0;) { yield items[cntr]; }\n         }\n         else\n         {\n            for (let cntr = 0; cntr < items.length; cntr++) { yield items[cntr]; }\n         }\n      }\n   }\n}\n\n/**\n * Provides a basic test for a given variable to test if it has the shape of a readable store by having a `subscribe`\n * function.\n *\n * Note: functions are also objects, so test that the variable might be a function w/ a `subscribe` function.\n *\n * @param {*}  store - variable to test that might be a store.\n *\n * @returns {boolean} Whether the variable tested has the shape of a store.\n */\nfunction isReadableStore(store)\n{\n   if (store === null || store === void 0) { return false; }\n\n   switch (typeof store)\n   {\n      case 'function':\n      case 'object':\n         return typeof store.subscribe === 'function';\n   }\n\n   return false;\n}\n\n/**\n * Provides a basic test for a given variable to test if it has the shape of a writable store by having a `subscribe`\n * function and an `update` function.\n *\n * Note: functions are also objects, so test that the variable might be a function w/ a `subscribe` function.\n *\n * @param {*}  store - variable to test that might be a store.\n *\n * @returns {boolean} Whether the variable tested has the shape of a store.\n */\nfunction isUpdatableStore(store)\n{\n   if (store === null || store === void 0) { return false; }\n\n   switch (typeof store)\n   {\n      case 'function':\n      case 'object':\n         return typeof store.subscribe === 'function' && typeof store.update === 'function';\n   }\n\n   return false;\n}\n\n/**\n * Provides a basic test for a given variable to test if it has the shape of a writable store by having a `subscribe`\n * `set`, and `update` functions.\n *\n * Note: functions are also objects, so test that the variable might be a function w/ `subscribe` & `set` functions.\n *\n * @param {*}  store - variable to test that might be a store.\n *\n * @returns {boolean} Whether the variable tested has the shape of a store.\n */\nfunction isWritableStore(store)\n{\n   if (store === null || store === void 0) { return false; }\n\n   switch (typeof store)\n   {\n      case 'function':\n      case 'object':\n         return typeof store.subscribe === 'function' && typeof store.set === 'function';\n   }\n\n   return false;\n}\n\n/**\n * Subscribes to the given store with the update function provided and ignores the first automatic\n * update. All future updates are dispatched to the update function.\n *\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\n *  Store to subscribe to...\n *\n * @param {import('svelte/store').Updater} update - function to receive future updates.\n *\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\n */\nfunction subscribeIgnoreFirst(store, update)\n{\n   let firedFirst = false;\n\n   return store.subscribe((value) => {\n      if (!firedFirst)\n      {\n         firedFirst = true;\n      }\n      else {\n         update(value);\n      }\n   })\n}\n\n/**\n * Subscribes to the given store with two update functions provided. The first function is invoked on the initial\n * subscription. All future updates are dispatched to the update function.\n *\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\n *  Store to subscribe to...\n *\n * @param {import('svelte/store').Updater} first - Function to receive first update.\n *\n * @param {import('svelte/store').Updater} update - Function to receive future updates.\n *\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\n */\nfunction subscribeFirstRest(store, first, update)\n{\n   let firedFirst = false;\n\n   return store.subscribe((value) => {\n      if (!firedFirst)\n      {\n         firedFirst = true;\n         first(value);\n      }\n      else {\n         update(value);\n      }\n   })\n}\n\n// src/generator.ts\nfunction isSimpleDeriver(deriver) {\n  return deriver.length < 2;\n}\nfunction generator(storage) {\n  function readable(key, value, start) {\n    return {\n      subscribe: writable(key, value, start).subscribe\n    };\n  }\n  function writable(key, value, start = noop) {\n    function wrap_start(ogSet) {\n      return start(function wrap_set(new_value) {\n        if (storage) {\n          storage.setItem(key, JSON.stringify(new_value));\n        }\n        return ogSet(new_value);\n      });\n    }\n    if (storage) {\n      const storageValue = storage.getItem(key);\n      try {\n        if (storageValue) {\n          value = JSON.parse(storageValue);\n        }\n      } catch (err) {\n      }\n      storage.setItem(key, JSON.stringify(value));\n    }\n    const ogStore = writable$2(value, start ? wrap_start : void 0);\n    function set(new_value) {\n      if (storage) {\n        storage.setItem(key, JSON.stringify(new_value));\n      }\n      ogStore.set(new_value);\n    }\n    function update(fn) {\n      set(fn(get(ogStore)));\n    }\n    function subscribe(run, invalidate = noop) {\n      return ogStore.subscribe(run, invalidate);\n    }\n    return {set, update, subscribe};\n  }\n  function derived(key, stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single ? [stores] : stores;\n    if (storage && storage.getItem(key)) {\n      try {\n        initial_value = JSON.parse(storage.getItem(key));\n      } catch (err) {\n      }\n    }\n    return readable(key, initial_value, (set) => {\n      let inited = false;\n      const values = [];\n      let pending = 0;\n      let cleanup = noop;\n      const sync = () => {\n        if (pending) {\n          return;\n        }\n        cleanup();\n        const input = single ? values[0] : values;\n        if (isSimpleDeriver(fn)) {\n          set(fn(input));\n        } else {\n          const result = fn(input, set);\n          cleanup = is_function(result) ? result : noop;\n        }\n      };\n      const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n        values[i] = value;\n        pending &= ~(1 << i);\n        if (inited) {\n          sync();\n        }\n      }, () => {\n        pending |= 1 << i;\n      }));\n      inited = true;\n      sync();\n      return function stop() {\n        run_all(unsubscribers);\n        cleanup();\n      };\n    });\n  }\n  return {\n    readable,\n    writable,\n    derived,\n    get: get\n  };\n}\n\n// src/local.ts\nvar storage$1 = typeof window !== \"undefined\" ? window.localStorage : void 0;\nvar g$1 = generator(storage$1);\nvar writable$1 = g$1.writable;\n\n/**\n * @typedef {import('svelte/store').Writable} LSStore - The backing Svelte store; a writable w/ get method attached.\n */\n\nclass LocalStorage\n{\n   /**\n    * @type {Map<string, LSStore>}\n    */\n   #stores = new Map();\n\n   /**\n    * Creates a new LSStore for the given key.\n    *\n    * @param {string}   key - Key to lookup in stores map.\n    *\n    * @param {boolean}  [defaultValue] - A default value to set for the store.\n    *\n    * @returns {LSStore} The new LSStore.\n    */\n   static #createStore(key, defaultValue = void 0)\n   {\n      try\n      {\n         const value = localStorage.getItem(key);\n         if (value !== null) { defaultValue = value === 'undefined' ? void 0 : JSON.parse(value); }\n      }\n      catch (err) { /**/ }\n\n      return writable$1(key, defaultValue);\n   }\n\n   /**\n    * Gets a store from the LSStore Map or creates a new store for the key and a given default value.\n    *\n    * @param {string}               key - Key to lookup in stores map.\n    *\n    * @param {boolean}              [defaultValue] - A default value to set for the store.\n    *\n    * @returns {LSStore} The store for the given key.\n    */\n   #getStore(key, defaultValue = void 0)\n   {\n      let store = this.#stores.get(key);\n      if (store === void 0)\n      {\n         store = LocalStorage.#createStore(key, defaultValue);\n         this.#stores.set(key, store);\n      }\n\n      return store;\n   }\n\n   /**\n    * Get value from the localStorage.\n    *\n    * @param {string}   key - Key to lookup in localStorage.\n    *\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {*} Value from session storage or if not defined any default value provided.\n    */\n   getItem(key, defaultValue)\n   {\n      let value = defaultValue;\n\n      const storageValue = localStorage.getItem(key);\n\n      if (storageValue !== null)\n      {\n         try\n         {\n            value = storageValue === 'undefined' ? void 0 : JSON.parse(storageValue);\n         } catch (err)\n         {\n            value = defaultValue;\n         }\n      }\n      else if (defaultValue !== void 0)\n      {\n         try\n         {\n            const newValue = JSON.stringify(defaultValue);\n\n            // If there is no existing storage value and defaultValue is defined the storage value needs to be set.\n            localStorage.setItem(key, newValue === 'undefined' ? void 0 : newValue);\n         }\n         catch (err) { /* */ }\n      }\n\n      return value;\n   }\n\n   /**\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\n    * is not already set.\n    *\n    * @param {string}   key - Key to lookup in localStorage.\n    *\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {LSStore} The Svelte store for this key.\n    */\n   getStore(key, defaultValue)\n   {\n      return this.#getStore(key, defaultValue);\n   }\n\n   /**\n    * Sets the value for the given key in localStorage.\n    *\n    * @param {string}   key - Key to lookup in localStorage.\n    *\n    * @param {*}        value - A value to set for this key.\n    */\n   setItem(key, value)\n   {\n      const store = this.#getStore(key);\n      store.set(value);\n   }\n\n   /**\n    * Convenience method to swap a boolean value stored in session storage.\n    *\n    * @param {string}   key - Key to lookup in localStorage.\n    *\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {boolean} The boolean swap for the given key.\n    */\n   swapItemBoolean(key, defaultValue)\n   {\n      const store = this.#getStore(key, defaultValue);\n\n      let currentValue = false;\n\n      try\n      {\n         currentValue = !!JSON.parse(localStorage.getItem(key));\n      }\n      catch (err) { /**/ }\n\n      const newValue = typeof currentValue === 'boolean' ? !currentValue : false;\n\n      store.set(newValue);\n      return newValue;\n   }\n}\n\n// src/session.ts\nvar storage = typeof window !== \"undefined\" ? window.sessionStorage : void 0;\nvar g = generator(storage);\nvar writable = g.writable;\n\n/**\n * @typedef {import('svelte/store').Writable} SSStore - The backing Svelte store; a writable w/ get method attached.\n */\n\nclass SessionStorage\n{\n   /**\n    * @type {Map<string, SSStore>}\n    */\n   #stores = new Map();\n\n   /**\n    * Creates a new SSStore for the given key.\n    *\n    * @param {string}   key - Key to lookup in stores map.\n    *\n    * @param {boolean}  [defaultValue] - A default value to set for the store.\n    *\n    * @returns {LSStore} The new LSStore.\n    */\n   static #createStore(key, defaultValue = void 0)\n   {\n      try\n      {\n         const value = sessionStorage.getItem(key);\n         if (value !== null) { defaultValue = value === 'undefined' ? void 0 : JSON.parse(value); }\n      }\n      catch (err) { /**/ }\n\n      return writable(key, defaultValue);\n   }\n\n   /**\n    * Gets a store from the SSStore Map or creates a new store for the key and a given default value.\n    *\n    * @param {string}               key - Key to lookup in stores map.\n    *\n    * @param {boolean}              [defaultValue] - A default value to set for the store.\n    *\n    * @returns {LSStore} The store for the given key.\n    */\n   #getStore(key, defaultValue = void 0)\n   {\n      let store = this.#stores.get(key);\n      if (store === void 0)\n      {\n         store = SessionStorage.#createStore(key, defaultValue);\n         this.#stores.set(key, store);\n      }\n\n      return store;\n   }\n\n   /**\n    * Get value from the sessionStorage.\n    *\n    * @param {string}   key - Key to lookup in sessionStorage.\n    *\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {*} Value from session storage or if not defined any default value provided.\n    */\n   getItem(key, defaultValue)\n   {\n      let value = defaultValue;\n\n      const storageValue = sessionStorage.getItem(key);\n\n      if (storageValue !== null)\n      {\n         try\n         {\n            value = storageValue === 'undefined' ? void 0 : JSON.parse(storageValue);\n         } catch (err)\n         {\n            value = defaultValue;\n         }\n      }\n      else if (defaultValue !== void 0)\n      {\n         try\n         {\n            const newValue = JSON.stringify(defaultValue);\n\n            // If there is no existing storage value and defaultValue is defined the storage value needs to be set.\n            sessionStorage.setItem(key, newValue === 'undefined' ? void 0 : newValue);\n         }\n         catch (err) { /* */ }\n      }\n\n      return value;\n   }\n\n   /**\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\n    * is not already set.\n    *\n    * @param {string}   key - Key to lookup in sessionStorage.\n    *\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {LSStore} The Svelte store for this key.\n    */\n   getStore(key, defaultValue)\n   {\n      return this.#getStore(key, defaultValue);\n   }\n\n   /**\n    * Sets the value for the given key in sessionStorage.\n    *\n    * @param {string}   key - Key to lookup in sessionStorage.\n    *\n    * @param {*}        value - A value to set for this key.\n    */\n   setItem(key, value)\n   {\n      const store = this.#getStore(key);\n      store.set(value);\n   }\n\n   /**\n    * Convenience method to swap a boolean value stored in session storage.\n    *\n    * @param {string}   key - Key to lookup in sessionStorage.\n    *\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {boolean} The boolean swap for the given key.\n    */\n   swapItemBoolean(key, defaultValue)\n   {\n      const store = this.#getStore(key, defaultValue);\n\n      let currentValue = false;\n\n      try\n      {\n         currentValue = !!JSON.parse(sessionStorage.getItem(key));\n      }\n      catch (err) { /**/ }\n\n      const newValue = typeof currentValue === 'boolean' ? !currentValue : false;\n\n      store.set(newValue);\n      return newValue;\n   }\n}\n\n/**\n * @external Store\n * @see [Svelte stores](https://svelte.dev/docs#component-format-script-4-prefix-stores-with-$-to-access-their-values-store-contract)\n */\n\n/**\n * Create a store similar to [Svelte's `derived`](https://svelte.dev/docs#run-time-svelte-store-writable),\n * but which has its own `set` and `update` methods and can send values back to the origin stores.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#default-export-writablederived)\n * \n * @param {Store|Store[]} origins One or more stores to derive from. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 1st parameter.\n * @param {!Function} derive The callback to determine the derived value. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 2nd parameter.\n * @param {!Function|{withOld: !Function}} reflect Called when the\n * derived store gets a new value via its `set` or `update` methods, and determines new values for\n * the origin stores. [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#new-parameter-reflect)\n * @param [initial] The new store's initial value. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 3rd parameter.\n * \n * @returns {Store} A writable store.\n */\nfunction writableDerived(origins, derive, reflect, initial) {\n\tvar childDerivedSetter, originValues, blockNextDerive = false;\n\tvar reflectOldValues = \"withOld\" in reflect;\n\tvar wrappedDerive = (got, set) => {\n\t\tchildDerivedSetter = set;\n\t\tif (reflectOldValues) {\n\t\t\toriginValues = got;\n\t\t}\n\t\tif (!blockNextDerive) {\n\t\t\tlet returned = derive(got, set);\n\t\t\tif (derive.length < 2) {\n\t\t\t\tset(returned);\n\t\t\t} else {\n\t\t\t\treturn returned;\n\t\t\t}\n\t\t}\n\t\tblockNextDerive = false;\n\t};\n\tvar childDerived = derived(origins, wrappedDerive, initial);\n\t\n\tvar singleOrigin = !Array.isArray(origins);\n\tvar sendUpstream = (setWith) => {\n\t\tif (singleOrigin) {\n\t\t\tblockNextDerive = true;\n\t\t\torigins.set(setWith);\n\t\t} else {\n\t\t\tsetWith.forEach( (value, i) => {\n\t\t\t\tblockNextDerive = true;\n\t\t\t\torigins[i].set(value);\n\t\t\t} );\n\t\t}\n\t\tblockNextDerive = false;\n\t};\n\tif (reflectOldValues) {\n\t\treflect = reflect.withOld;\n\t}\n\tvar reflectIsAsync = reflect.length >= (reflectOldValues ? 3 : 2);\n\tvar cleanup = null;\n\tfunction doReflect(reflecting) {\n\t\tif (cleanup) {\n\t\t\tcleanup();\n\t\t\tcleanup = null;\n\t\t}\n\n\t\tif (reflectOldValues) {\n\t\t\tvar returned = reflect(reflecting, originValues, sendUpstream);\n\t\t} else {\n\t\t\tvar returned = reflect(reflecting, sendUpstream);\n\t\t}\n\t\tif (reflectIsAsync) {\n\t\t\tif (typeof returned == \"function\") {\n\t\t\t\tcleanup = returned;\n\t\t\t}\n\t\t} else {\n\t\t\tsendUpstream(returned);\n\t\t}\n\t}\n\t\n\tvar tryingSet = false;\n\tfunction update(fn) {\n\t\tvar isUpdated, mutatedBySubscriptions, oldValue, newValue;\n\t\tif (tryingSet) {\n\t\t\tnewValue = fn( get(childDerived) );\n\t\t\tchildDerivedSetter(newValue);\n\t\t\treturn;\n\t\t}\n\t\tvar unsubscribe = childDerived.subscribe( (value) => {\n\t\t\tif (!tryingSet) {\n\t\t\t\toldValue = value;\n\t\t\t} else if (!isUpdated) {\n\t\t\t\tisUpdated = true;\n\t\t\t} else {\n\t\t\t\tmutatedBySubscriptions = true;\n\t\t\t}\n\t\t} );\n\t\tnewValue = fn(oldValue);\n\t\ttryingSet = true;\n\t\tchildDerivedSetter(newValue);\n\t\tunsubscribe();\n\t\ttryingSet = false;\n\t\tif (mutatedBySubscriptions) {\n\t\t\tnewValue = get(childDerived);\n\t\t}\n\t\tif (isUpdated) {\n\t\t\tdoReflect(newValue);\n\t\t}\n\t}\n\treturn {\n\t\tsubscribe: childDerived.subscribe,\n\t\tset(value) { update( () => value ); },\n\t\tupdate,\n\t};\n}\n\n/**\n * Create a store for a property value in an object contained in another store.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#named-export-propertystore)\n * \n * @param {Store} origin The store containing the object to get/set from.\n * @param {string|number|symbol|Array<string|number|symbol>} propName The property to get/set, or a path of\n * properties in nested objects.\n *\n * @returns {Store} A writable store.\n */\nfunction propertyStore(origin, propName) {\n\tif (!Array.isArray(propName)) {\n\t\treturn writableDerived(\n\t\t\torigin,\n\t\t\t(object) => object[propName],\n\t\t\t{ withOld(reflecting, object) {\n\t\t\t\tobject[propName] = reflecting;\n\t\t\t\treturn object;\n\t\t\t} }\n\t\t);\n\t} else {\n\t\tlet props = propName.concat();\n\t\treturn writableDerived(\n\t\t\torigin,\n\t\t\t(value) => {\n\t\t\t\tfor (let i = 0; i < props.length; ++i) {\n\t\t\t\t\tvalue = value[ props[i] ];\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\t{ withOld(reflecting, object) {\n\t\t\t\tlet target = object;\n\t\t\t\tfor (let i = 0; i < props.length - 1; ++i) {\n\t\t\t\t\ttarget = target[ props[i] ];\n\t\t\t\t}\n\t\t\t\ttarget[ props[props.length - 1] ] = reflecting;\n\t\t\t\treturn object;\n\t\t\t} }\n\t\t);\n\t}\n}\n\n/**\n * Provides a wrapper implementing the Svelte store / subscriber protocol around any Document / ClientMixinDocument.\n * This makes documents reactive in a Svelte component, but otherwise provides subscriber functionality external to\n * Svelte.\n *\n * @template {foundry.abstract.Document} T\n */\nclass TJSDocument\n{\n   #document;\n   #uuidv4;\n\n   /**\n    * @type {TJSDocumentOptions}\n    */\n   #options = { delete: void 0 };\n\n   #subscriptions = [];\n   #updateOptions;\n\n   /**\n    * @param {T|TJSDocumentOptions} [document] - Document to wrap or TJSDocumentOptions.\n    *\n    * @param {TJSDocumentOptions}   [options] - TJSDocument options.\n    */\n   constructor(document, options = {})\n   {\n      this.#uuidv4 = `tjs-document-${uuidv4()}`;\n\n      if (isPlainObject(document)) // Handle case when only options are passed into ctor.\n      {\n         this.setOptions(document);\n      }\n      else\n      {\n         this.setOptions(options);\n         this.set(document);\n      }\n   }\n\n   /**\n    * Returns the options passed on last update.\n    *\n    * @returns {object} Last update options.\n    */\n   get updateOptions() { return this.#updateOptions ?? {}; }\n\n   /**\n    * Returns the UUID assigned to this store.\n    *\n    * @returns {*} UUID\n    */\n   get uuidv4() { return this.#uuidv4; }\n\n   /**\n    * Handles cleanup when the document is deleted. Invoking any optional delete function set in the constructor.\n    *\n    * @returns {Promise<void>}\n    */\n   async #deleted()\n   {\n      const doc = this.#document;\n\n      // Check to see if the document is still in the associated collection to determine if actually deleted.\n      if (doc instanceof foundry.abstract.Document && !doc?.collection?.has(doc.id))\n      {\n         delete doc?.apps[this.#uuidv4];\n         this.#document = void 0;\n\n         this.#notify(false, { action: 'delete', data: void 0 });\n\n         if (typeof this.#options.delete === 'function') { await this.#options.delete(); }\n\n         this.#updateOptions = void 0;\n      }\n   }\n\n   /**\n    * Completely removes all internal subscribers, any optional delete callback, and unregisters from the\n    * ClientDocumentMixin `apps` tracking object.\n    */\n   destroy()\n   {\n      const doc = this.#document;\n\n      if (doc instanceof foundry.abstract.Document)\n      {\n         delete doc?.apps[this.#uuidv4];\n         this.#document = void 0;\n      }\n\n      this.#options.delete = void 0;\n      this.#subscriptions.length = 0;\n   }\n\n   /**\n    * @param {boolean}  [force] - unused - signature from Foundry render function.\n    *\n    * @param {object}   [options] - Options from render call; will have document update context.\n    */\n   #notify(force = false, options = {}) // eslint-disable-line no-unused-vars\n   {\n      this.#updateOptions = options;\n\n      // Subscriptions are stored locally as on the browser Babel is still used for private class fields / Babel\n      // support until 2023. IE not doing this will require several extra method calls otherwise.\n      const subscriptions = this.#subscriptions;\n      const document = this.#document;\n\n      for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](document, options); }\n   }\n\n   /**\n    * @returns {T | undefined} Current document\n    */\n   get() { return this.#document; }\n\n   /**\n    * @param {T | undefined}  document - New document to set.\n    *\n    * @param {object}         [options] - New document update options to set.\n    */\n   set(document, options = {})\n   {\n      if (this.#document)\n      {\n         delete this.#document.apps[this.#uuidv4];\n      }\n\n      if (document !== void 0 && !(document instanceof foundry.abstract.Document))\n      {\n         throw new TypeError(`TJSDocument set error: 'document' is not a valid Document or undefined.`);\n      }\n\n      if (options === null || typeof options !== 'object')\n      {\n         throw new TypeError(`TJSDocument set error: 'options' is not an object.`);\n      }\n\n      if (document instanceof foundry.abstract.Document)\n      {\n         document.apps[this.#uuidv4] = {\n            close: this.#deleted.bind(this),\n            render: this.#notify.bind(this)\n         };\n      }\n\n      this.#document = document;\n      this.#updateOptions = options;\n      this.#notify();\n   }\n\n   /**\n    * Potentially sets new document from data transfer object.\n    *\n    * @param {object}   data - Document transfer data.\n    *\n    * @param {ParseDataTransferOptions & TJSDocumentOptions}   [options] - Optional parameters.\n    *\n    * @returns {Promise<boolean>} Returns true if new document set from data transfer blob.\n    */\n   async setFromDataTransfer(data, options)\n   {\n      return this.setFromUUID(getUUIDFromDataTransfer(data, options), options);\n   }\n\n   /**\n    * Sets the document by Foundry UUID performing a lookup and setting the document if found.\n    *\n    * @param {string}   uuid - A Foundry UUID to lookup.\n    *\n    * @param {TJSDocumentOptions}   [options] - New document update options to set.\n    *\n    * @returns {Promise<boolean>} True if successfully set document from UUID.\n    */\n   async setFromUUID(uuid, options = {})\n   {\n      if (typeof uuid !== 'string' || uuid.length === 0) { return false; }\n\n      try\n      {\n         const doc = await globalThis.fromUuid(uuid);\n\n         if (doc)\n         {\n            this.set(doc, options);\n            return true;\n         }\n      }\n      catch (err) { /**/ }\n\n      return false;\n   }\n\n   /**\n    * Sets options for this document wrapper / store.\n    *\n    * @param {TJSDocumentOptions}   options - Options for TJSDocument.\n    */\n   setOptions(options)\n   {\n      if (!isObject(options))\n      {\n         throw new TypeError(`TJSDocument error: 'options' is not a plain object.`);\n      }\n\n      if (options.delete !== void 0 && typeof options.delete !== 'function')\n      {\n         throw new TypeError(`TJSDocument error: 'delete' attribute in options is not a function.`);\n      }\n\n      if (options.delete === void 0 || typeof options.delete === 'function')\n      {\n         this.#options.delete = options.delete;\n      }\n   }\n\n   /**\n    * @param {function(T, object): void} handler - Callback function that is invoked on update / changes.\n    *\n    * @returns {(function(): void)} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler);           // Add handler to the array of subscribers.\n\n      const updateOptions = { action: 'subscribe', data: void 0 };\n\n      handler(this.#document, updateOptions);      // Call handler with current value and update options.\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n}\n\n/**\n * @typedef {object} TJSDocumentOptions\n *\n * @property {Function} [delete] - Optional delete function to invoke when document is deleted.\n */\n\n/**\n * Provides a wrapper implementing the Svelte store / subscriber protocol around any DocumentCollection. This makes\n * document collections reactive in a Svelte component, but otherwise provides subscriber functionality external to\n * Svelte.\n *\n * @template {DocumentCollection} T\n */\nclass TJSDocumentCollection\n{\n   #collection;\n   #collectionCallback;\n   #uuid;\n\n   /**\n    * @type {TJSDocumentCollectionOptions}\n    */\n   #options = { delete: void 0 };\n\n   #subscriptions = [];\n   #updateOptions;\n\n   /**\n    * @param {T|TJSDocumentCollectionOptions}   [collection] - Collection to wrap or TJSDocumentCollectionOptions.\n    *\n    * @param {TJSDocumentCollectionOptions}     [options] - TJSDocumentCollection options.\n    */\n   constructor(collection, options = {})\n   {\n      this.#uuid = `tjs-collection-${uuidv4()}`;\n\n      if (isPlainObject(collection)) // Handle case when only options are passed into ctor.\n      {\n         this.setOptions(collection);\n      }\n      else\n      {\n         this.setOptions(options);\n         this.set(collection);\n      }\n   }\n\n   /**\n    * Returns the options passed on last update.\n    *\n    * @returns {object} Last update options.\n    */\n   get updateOptions() { return this.#updateOptions ?? {}; }\n\n   /**\n    * Returns the UUID assigned to this store.\n    *\n    * @returns {*} UUID\n    */\n   get uuid() { return this.#uuid; }\n\n   /**\n    * Handles cleanup when the collection is deleted. Invoking any optional delete function set in the constructor.\n    *\n    * @returns {Promise<void>}\n    */\n   async #deleted()\n   {\n      const collection = this.#collection;\n\n      if (collection instanceof DocumentCollection)\n      {\n         const index = collection?.apps?.findIndex((sub) => sub === this.#collectionCallback);\n         if (index >= 0) { collection?.apps?.splice(index, 1); }\n\n         this.#collection = void 0;\n      }\n\n      this.#notify(false, { action: 'delete', documentType: collection.documentName, documents: [], data: [] });\n\n      if (typeof this.#options.delete === 'function') { await this.#options.delete(); }\n\n      this.#updateOptions = void 0;\n   }\n\n   /**\n    * Completely removes all internal subscribers, any optional delete callback, and unregisters from the\n    * DocumentCollection `apps` tracking array.\n    */\n   destroy()\n   {\n      const collection = this.#collection;\n\n      if (collection instanceof DocumentCollection)\n      {\n         const index = collection?.apps?.findIndex((sub) => sub === this.#collectionCallback);\n         if (index >= 0) { collection?.apps?.splice(index, 1); }\n\n         this.#collection = void 0;\n      }\n\n      this.#options.delete = void 0;\n      this.#subscriptions.length = 0;\n   }\n\n   /**\n    * @param {boolean}  [force] - unused - signature from Foundry render function.\n    *\n    * @param {object}   [options] - Options from render call; will have collection update context.\n    */\n   #notify(force = false, options = {}) // eslint-disable-line no-unused-vars\n   {\n      this.#updateOptions = options;\n\n      // Subscriptions are stored locally as on the browser Babel is still used for private class fields / Babel\n      // support until 2023. IE not doing this will require several extra method calls otherwise.\n      const subscriptions = this.#subscriptions;\n      const collection = this.#collection;\n\n      for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](collection, options); }\n   }\n\n   /**\n    * @returns {T | undefined} Current collection\n    */\n   get() { return this.#collection; }\n\n   /**\n    * @param {T | undefined}  collection - New collection to set.\n    *\n    * @param {object}         [options] - New collection update options to set.\n    */\n   set(collection, options = {})\n   {\n      if (this.#collection)\n      {\n         const index = this.#collection.apps.findIndex((sub) => sub === this.#collectionCallback);\n         if (index >= 0) { this.#collection.apps.splice(index, 1); }\n\n         this.#collectionCallback = void 0;\n      }\n\n      if (collection !== void 0 && !(collection instanceof DocumentCollection))\n      {\n         throw new TypeError(\n          `TJSDocumentCollection set error: 'collection' is not a valid DocumentCollection or undefined.`);\n      }\n\n      if (!isObject(options))\n      {\n         throw new TypeError(`TJSDocument set error: 'options' is not an object.`);\n      }\n\n      if (collection instanceof DocumentCollection)\n      {\n         this.#collectionCallback = {\n            close: this.#deleted.bind(this),\n            render: this.#notify.bind(this)\n         };\n\n         collection?.apps?.push(this.#collectionCallback);\n      }\n\n      this.#collection = collection;\n      this.#updateOptions = options;\n      this.#notify();\n   }\n\n   /**\n    * Sets options for this collection wrapper / store.\n    *\n    * @param {TJSDocumentCollectionOptions}   options - Options for TJSDocumentCollection.\n    */\n   setOptions(options)\n   {\n      if (!isObject(options))\n      {\n         throw new TypeError(`TJSDocumentCollection error: 'options' is not an object.`);\n      }\n\n      if (options.delete !== void 0 && typeof options.delete !== 'function')\n      {\n         throw new TypeError(`TJSDocumentCollection error: 'delete' attribute in options is not a function.`);\n      }\n\n      if (options.delete === void 0 || typeof options.delete === 'function')\n      {\n         this.#options.delete = options.delete;\n      }\n   }\n\n   /**\n    * @param {function(T, object): void} handler - Callback function that is invoked on update / changes.\n    *\n    * @returns {(function(): void)} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler);              // Add handler to the array of subscribers.\n\n      const collection = this.#collection;\n\n      const documentType = collection?.documentName ?? void 0;\n\n      const updateOptions = { action: 'subscribe', documentType, documents: [], data: [] };\n\n      handler(collection, updateOptions);  // Call handler with current value and update options.\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n}\n\n/**\n * @typedef TJSDocumentCollectionOptions\n *\n * @property {Function} [delete] - Optional delete function to invoke when document is deleted.\n */\n\nconst storeState = writable$2(void 0);\n\n/**\n * @type {GameState} Provides a Svelte store wrapping the Foundry runtime / global game state.\n */\nconst gameState = {\n   subscribe: storeState.subscribe,\n   get: () => game\n};\n\nObject.freeze(gameState);\n\nHooks.once('ready', () => storeState.set(game));\n\n/**\n * @typedef {import('svelte/store').Readable} GameState - Provides a Svelte store wrapping the Foundry `game` global variable. It is initialized\n * on the `ready` hook. You may use this store to access the global game state from a Svelte template. It is a read only\n * store and will receive no reactive updates during runtime.\n *\n * @property {import('svelte/store').Readable.subscribe} subscribe - Provides the Svelte store subscribe function.\n *\n * @property {Function} get - Provides a mechanism to directly access the Foundry game state without subscribing.\n */\n\n/**\n * Registers game settings and creates a backing Svelte store for each setting. It is possible to add multiple\n * `onChange` callbacks on registration.\n */\nclass TJSGameSettings\n{\n   /**\n    * @type {Map<string, GSWritableStore>}\n    */\n   #stores = new Map();\n\n   /**\n    * Creates a new GSWritableStore for the given key.\n    *\n    * @param {string}   initialValue - An initial value to set to new stores.\n    *\n    * @returns {GSWritableStore} The new GSWritableStore.\n    */\n   static #createStore(initialValue)\n   {\n      return writable$2(initialValue);\n   }\n\n   /**\n    * Gets a store from the GSWritableStore Map or creates a new store for the key.\n    *\n    * @param {string}   key - Key to lookup in stores map.\n    *\n    * @param {string}   [initialValue] - An initial value to set to new stores.\n    *\n    * @returns {GSWritableStore} The store for the given key.\n    */\n   #getStore(key, initialValue)\n   {\n      let store = this.#stores.get(key);\n      if (store === void 0)\n      {\n         store = TJSGameSettings.#createStore(initialValue);\n         this.#stores.set(key, store);\n      }\n\n      return store;\n   }\n\n   /**\n    * Returns a readable Game Settings store for the associated key.\n    *\n    * @param {string}   key - Game setting key.\n    *\n    * @returns {GSReadableStore|undefined} The associated store for the given game setting key.\n    */\n   getReadableStore(key)\n   {\n      if (!this.#stores.has(key))\n      {\n         console.warn(`TJSGameSettings - getReadableStore: '${key}' is not a registered setting.`);\n         return;\n      }\n\n      const store = this.#getStore(key);\n\n      return { subscribe: store.subscribe, get: store.get };\n   }\n\n   /**\n    * Returns a writable Game Settings store for the associated key.\n    *\n    * @param {string}   key - Game setting key.\n    *\n    * @returns {GSWritableStore|undefined} The associated store for the given game setting key.\n    */\n   getStore(key)\n   {\n      return this.getWritableStore(key);\n   }\n\n   /**\n    * Returns a writable Game Settings store for the associated key.\n    *\n    * @param {string}   key - Game setting key.\n    *\n    * @returns {GSWritableStore|undefined} The associated store for the given game setting key.\n    */\n   getWritableStore(key)\n   {\n      if (!this.#stores.has(key))\n      {\n         console.warn(`TJSGameSettings - getWritableStore: '${key}' is not a registered setting.`);\n         return;\n      }\n\n      return this.#getStore(key);\n   }\n\n   /**\n    * @param {GameSetting} setting - A GameSetting instance to set to Foundry game settings.\n    */\n   register(setting)\n   {\n      if (typeof setting !== 'object')\n      {\n         throw new TypeError(`TJSGameSettings - register: setting is not an object.`);\n      }\n\n      if (typeof setting.options !== 'object')\n      {\n         throw new TypeError(`TJSGameSettings - register: 'options' attribute is not an object.`);\n      }\n\n      if (setting.store !== void 0 && !isWritableStore(setting.store))\n      {\n         throw new TypeError(\n          `TJSGameSettings - register: 'setting.store' attribute is not a writable store.`);\n      }\n\n      // TODO: Remove deprecation warning and fully remove support for `moduleId` in a future TRL release.\n      if (typeof setting.moduleId === 'string')\n      {\n         console.warn(\n          `TJSGameSettings - register deprecation warning: 'moduleId' should be replaced with 'namespace'.`);\n         console.warn(`'moduleId' will cease to work in a future update of TRL / TJSGameSettings.`);\n      }\n\n      // TODO: Remove nullish coalescing operator in a future TRL release.\n      const namespace = setting.namespace ?? setting.moduleId;\n      const key = setting.key;\n\n      if (typeof namespace !== 'string')\n      {\n         throw new TypeError(`TJSGameSettings - register: 'namespace' attribute is not a string.`);\n      }\n\n      if (typeof key !== 'string')\n      {\n         throw new TypeError(`TJSGameSettings - register: 'key' attribute is not a string.`);\n      }\n\n      const store = setting.store;\n\n      /**\n       * @type {GameSettingOptions}\n       */\n      const options = setting.options;\n\n      const onchangeFunctions = [];\n\n      // When true prevents local store subscription from a loop when values are object data.\n      let gateSet = false;\n\n      // Provides an `onChange` callback to update the associated store.\n      onchangeFunctions.push((value) =>\n      {\n         const callbackStore = this.#getStore(key);\n         if (callbackStore && !gateSet)\n         {\n            gateSet = true;\n            callbackStore.set(value);\n            gateSet = false;\n         }\n      });\n\n      // Handle loading any existing `onChange` callbacks.\n      if (isIterable(options?.onChange))\n      {\n         for (const entry of options.onChange)\n         {\n            if (typeof entry === 'function') { onchangeFunctions.push(entry); }\n         }\n      }\n      else if (typeof options.onChange === 'function')\n      {\n         onchangeFunctions.push(options.onChange);\n      }\n\n      // Provides the final onChange callback that iterates over all the stored onChange callbacks.\n      const onChange = (value) =>\n      {\n         for (const entry of onchangeFunctions) { entry(value); }\n      };\n\n      game.settings.register(namespace, key, { ...options, onChange });\n\n      // Set new store value with existing setting or default value.\n      const targetStore = store ? store : this.#getStore(key, game.settings.get(namespace, key));\n\n      // If a store instance is passed into register then initialize it with game settings data.\n      if (store)\n      {\n         this.#stores.set(key, targetStore);\n         store.set(game.settings.get(namespace, key));\n      }\n\n      // Subscribe to self to set associated game setting on updates after verifying that the new value does not match\n      // existing game setting.\n      subscribeIgnoreFirst(targetStore, async (value) =>\n      {\n         if (!gateSet && game.settings.get(namespace, key) !== value)\n         {\n            gateSet = true;\n            await game.settings.set(namespace, key, value);\n         }\n\n         gateSet = false;\n      });\n   }\n\n   /**\n    * Registers multiple settings.\n    *\n    * @param {Iterable<GameSetting>} settings - An iterable list of game setting configurations to register.\n    */\n   registerAll(settings)\n   {\n      if (!isIterable(settings)) { throw new TypeError(`TJSGameSettings - registerAll: settings is not iterable.`); }\n\n      for (const entry of settings)\n      {\n         if (typeof entry !== 'object')\n         {\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings is not an object.`);\n         }\n\n         // TODO: Uncomment when deprecation for 'moduleId' is removed in future TRL release.\n         // if (typeof entry.namespace !== 'string')\n         // {\n         //    throw new TypeError(`TJSGameSettings - registerAll: entry in settings missing 'namespace' attribute.`);\n         // }\n\n         if (typeof entry.key !== 'string')\n         {\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings missing 'key' attribute.`);\n         }\n\n         if (typeof entry.options !== 'object')\n         {\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings missing 'options' attribute.`);\n         }\n\n         this.register(entry);\n      }\n   }\n}\n\nexport { DynArrayReducer, LocalStorage, SessionStorage, TJSDocument, TJSDocumentCollection, TJSGameSettings, gameState, isReadableStore, isUpdatableStore, isWritableStore, propertyStore, subscribeFirstRest, subscribeIgnoreFirst, writableDerived };\n//# sourceMappingURL=index.js.map\n","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","/**\n * Performs linear interpolation between a start & end value by given amount between 0 - 1 inclusive.\n *\n * @param {number}   start - Start value.\n *\n * @param {number}   end - End value.\n *\n * @param {number}   amount - Current amount between 0 - 1 inclusive.\n *\n * @returns {number} Linear interpolated value between start & end.\n */\nfunction lerp$5(start, end, amount)\n{\n   return (1 - amount) * start + amount * end;\n}\n\n/**\n * Converts the given number from degrees to radians.\n *\n * @param {number}   deg - Degree number to convert\n *\n * @returns {number} Degree as radians.\n */\nfunction degToRad(deg)\n{\n   return deg * (Math.PI / 180.0);\n}\n\n/**\n * Converts the given number from radians to degrees.\n *\n * @param {number}   rad - Radian number to convert.\n *\n * @returns {number} Degree as radians.\n */\nfunction radToDeg(rad)\n{\n   return rad * (180.0 / Math.PI);\n}\n\n/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nvar EPSILON = 0.000001;\nvar ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nvar RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nfunction setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nfunction toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nfunction equals$9(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};\n\nvar common = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   EPSILON: EPSILON,\n   get ARRAY_TYPE () { return ARRAY_TYPE; },\n   RANDOM: RANDOM,\n   setMatrixArrayType: setMatrixArrayType,\n   toRadian: toRadian,\n   equals: equals$9\n});\n\n/**\n * 2x2 Matrix\n * @module mat2\n */\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\n\nfunction create$8() {\n  var out = new ARRAY_TYPE(4);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\n\nfunction clone$8(a) {\n  var out = new ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nfunction copy$8(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\n\nfunction identity$5(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\n\nfunction fromValues$8(m00, m01, m10, m11) {\n  var out = new ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\n\nfunction set$8(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nfunction transpose$2(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nfunction invert$5(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nfunction adjoint$2(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\n * Calculates the determinant of a mat2\n *\n * @param {ReadonlyMat2} a the source matrix\n * @returns {Number} determinant of a\n */\n\nfunction determinant$3(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nfunction multiply$8(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\n\nfunction rotate$4(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\n\nfunction scale$8(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\n\nfunction fromRotation$4(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat2} out\n */\n\nfunction fromScaling$3(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\n * Returns a string representation of a mat2\n *\n * @param {ReadonlyMat2} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nfunction str$8(a) {\n  return \"mat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {ReadonlyMat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nfunction frob$3(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {ReadonlyMat2} L the lower triangular matrix\n * @param {ReadonlyMat2} D the diagonal matrix\n * @param {ReadonlyMat2} U the upper triangular matrix\n * @param {ReadonlyMat2} a the input matrix to factorize\n */\n\nfunction LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nfunction add$8(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nfunction subtract$6(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat2} a The first matrix.\n * @param {ReadonlyMat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction exactEquals$8(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat2} a The first matrix.\n * @param {ReadonlyMat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction equals$8(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\n\nfunction multiplyScalar$3(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\n\nfunction multiplyScalarAndAdd$3(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\n\nvar mul$8 = multiply$8;\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\n\nvar sub$6 = subtract$6;\n\nvar mat2 = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   create: create$8,\n   clone: clone$8,\n   copy: copy$8,\n   identity: identity$5,\n   fromValues: fromValues$8,\n   set: set$8,\n   transpose: transpose$2,\n   invert: invert$5,\n   adjoint: adjoint$2,\n   determinant: determinant$3,\n   multiply: multiply$8,\n   rotate: rotate$4,\n   scale: scale$8,\n   fromRotation: fromRotation$4,\n   fromScaling: fromScaling$3,\n   str: str$8,\n   frob: frob$3,\n   LDU: LDU,\n   add: add$8,\n   subtract: subtract$6,\n   exactEquals: exactEquals$8,\n   equals: equals$8,\n   multiplyScalar: multiplyScalar$3,\n   multiplyScalarAndAdd: multiplyScalarAndAdd$3,\n   mul: mul$8,\n   sub: sub$6\n});\n\n/**\n * 2x3 Matrix\n * @module mat2d\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, b,\n *  c, d,\n *  tx, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, b, 0,\n *  c, d, 0,\n *  tx, ty, 1]\n * </pre>\n * The last column is ignored so the array is shorter and operations are faster.\n */\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\n\nfunction create$7() {\n  var out = new ARRAY_TYPE(6);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {ReadonlyMat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\n\nfunction clone$7(a) {\n  var out = new ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {mat2d} out\n */\n\nfunction copy$7(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\n\nfunction identity$4(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\n\nfunction fromValues$7(a, b, c, d, tx, ty) {\n  var out = new ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\n\nfunction set$7(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {mat2d} out\n */\n\nfunction invert$4(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {Number} determinant of a\n */\n\nfunction determinant$2(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nfunction multiply$7(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\n\nfunction rotate$3(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to translate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\n\nfunction scale$7(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to translate\n * @param {ReadonlyVec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\n\nfunction translate$3(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\n\nfunction fromRotation$3(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat2d} out\n */\n\nfunction fromScaling$2(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat2d} out\n */\n\nfunction fromTranslation$3(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\n * Returns a string representation of a mat2d\n *\n * @param {ReadonlyMat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nfunction str$7(a) {\n  return \"mat2d(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {ReadonlyMat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nfunction frob$2(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n}\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nfunction add$7(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nfunction subtract$5(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\n\nfunction multiplyScalar$2(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\n\nfunction multiplyScalarAndAdd$2(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat2d} a The first matrix.\n * @param {ReadonlyMat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction exactEquals$7(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat2d} a The first matrix.\n * @param {ReadonlyMat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction equals$7(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\n\nvar mul$7 = multiply$7;\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\n\nvar sub$5 = subtract$5;\n\nvar mat2d = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   create: create$7,\n   clone: clone$7,\n   copy: copy$7,\n   identity: identity$4,\n   fromValues: fromValues$7,\n   set: set$7,\n   invert: invert$4,\n   determinant: determinant$2,\n   multiply: multiply$7,\n   rotate: rotate$3,\n   scale: scale$7,\n   translate: translate$3,\n   fromRotation: fromRotation$3,\n   fromScaling: fromScaling$2,\n   fromTranslation: fromTranslation$3,\n   str: str$7,\n   frob: frob$2,\n   add: add$7,\n   subtract: subtract$5,\n   multiplyScalar: multiplyScalar$2,\n   multiplyScalarAndAdd: multiplyScalarAndAdd$2,\n   exactEquals: exactEquals$7,\n   equals: equals$7,\n   mul: mul$7,\n   sub: sub$5\n});\n\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nfunction create$6() {\n  var out = new ARRAY_TYPE(9);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nfunction fromMat4$1(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nfunction clone$6(a) {\n  var out = new ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nfunction copy$6(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nfunction fromValues$6(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nfunction set$6(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nfunction identity$3(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nfunction transpose$1(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nfunction invert$3(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nfunction adjoint$1(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nfunction determinant$1(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nfunction multiply$6(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nfunction translate$2(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nfunction rotate$2(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nfunction scale$6(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nfunction fromTranslation$2(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nfunction fromRotation$2(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nfunction fromScaling$1(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nfunction fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nfunction fromQuat$1(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nfunction normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nfunction projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nfunction str$6(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nfunction frob$1(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nfunction add$6(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nfunction subtract$4(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nfunction multiplyScalar$1(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nfunction multiplyScalarAndAdd$1(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction exactEquals$6(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction equals$6(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nvar mul$6 = multiply$6;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nvar sub$4 = subtract$4;\n\nvar mat3 = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   create: create$6,\n   fromMat4: fromMat4$1,\n   clone: clone$6,\n   copy: copy$6,\n   fromValues: fromValues$6,\n   set: set$6,\n   identity: identity$3,\n   transpose: transpose$1,\n   invert: invert$3,\n   adjoint: adjoint$1,\n   determinant: determinant$1,\n   multiply: multiply$6,\n   translate: translate$2,\n   rotate: rotate$2,\n   scale: scale$6,\n   fromTranslation: fromTranslation$2,\n   fromRotation: fromRotation$2,\n   fromScaling: fromScaling$1,\n   fromMat2d: fromMat2d,\n   fromQuat: fromQuat$1,\n   normalFromMat4: normalFromMat4,\n   projection: projection,\n   str: str$6,\n   frob: frob$1,\n   add: add$6,\n   subtract: subtract$4,\n   multiplyScalar: multiplyScalar$1,\n   multiplyScalarAndAdd: multiplyScalarAndAdd$1,\n   exactEquals: exactEquals$6,\n   equals: equals$6,\n   mul: mul$6,\n   sub: sub$4\n});\n\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nfunction create$5() {\n  var out = new ARRAY_TYPE(16);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nfunction clone$5(a) {\n  var out = new ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction copy$5(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nfunction fromValues$5(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nfunction set$5(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nfunction identity$2(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction invert$2(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nfunction multiply$5(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nfunction translate$1(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nfunction scale$5(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nfunction rotate$1(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction rotateX$3(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction rotateY$3(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction rotateZ$3(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nfunction fromTranslation$1(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nfunction fromRotation$1(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nfunction fromRotationTranslation$1(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nfunction fromQuat2(out, a) {\n  var translation = new ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation$1(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nfunction getTranslation$1(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nfunction getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nfunction getRotation(out, mat) {\n  var scaling = new ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nfunction fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nfunction frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nfunction perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nvar perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nfunction perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nfunction perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nfunction orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nvar ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nfunction orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nfunction lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < EPSILON && Math.abs(eyey - centery) < EPSILON && Math.abs(eyez - centerz) < EPSILON) {\n    return identity$2(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nfunction targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nfunction str$5(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nfunction add$5(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nfunction subtract$3(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction exactEquals$5(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction equals$5(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nvar mul$5 = multiply$5;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nvar sub$3 = subtract$3;\n\nvar mat4 = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   create: create$5,\n   clone: clone$5,\n   copy: copy$5,\n   fromValues: fromValues$5,\n   set: set$5,\n   identity: identity$2,\n   transpose: transpose,\n   invert: invert$2,\n   adjoint: adjoint,\n   determinant: determinant,\n   multiply: multiply$5,\n   translate: translate$1,\n   scale: scale$5,\n   rotate: rotate$1,\n   rotateX: rotateX$3,\n   rotateY: rotateY$3,\n   rotateZ: rotateZ$3,\n   fromTranslation: fromTranslation$1,\n   fromScaling: fromScaling,\n   fromRotation: fromRotation$1,\n   fromXRotation: fromXRotation,\n   fromYRotation: fromYRotation,\n   fromZRotation: fromZRotation,\n   fromRotationTranslation: fromRotationTranslation$1,\n   fromQuat2: fromQuat2,\n   getTranslation: getTranslation$1,\n   getScaling: getScaling,\n   getRotation: getRotation,\n   fromRotationTranslationScale: fromRotationTranslationScale,\n   fromRotationTranslationScaleOrigin: fromRotationTranslationScaleOrigin,\n   fromQuat: fromQuat,\n   frustum: frustum,\n   perspectiveNO: perspectiveNO,\n   perspective: perspective,\n   perspectiveZO: perspectiveZO,\n   perspectiveFromFieldOfView: perspectiveFromFieldOfView,\n   orthoNO: orthoNO,\n   ortho: ortho,\n   orthoZO: orthoZO,\n   lookAt: lookAt,\n   targetTo: targetTo,\n   str: str$5,\n   frob: frob,\n   add: add$5,\n   subtract: subtract$3,\n   multiplyScalar: multiplyScalar,\n   multiplyScalarAndAdd: multiplyScalarAndAdd,\n   exactEquals: exactEquals$5,\n   equals: equals$5,\n   mul: mul$5,\n   sub: sub$3\n});\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nfunction create$4() {\n  var out = new ARRAY_TYPE(3);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nfunction clone$4(a) {\n  var out = new ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nfunction length$4(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nfunction fromValues$4(x, y, z) {\n  var out = new ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nfunction copy$4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nfunction set$4(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction add$4(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction subtract$2(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction multiply$4(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction divide$2(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nfunction ceil$2(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nfunction floor$2(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction min$2(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction max$2(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nfunction round$2(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nfunction scale$4(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nfunction scaleAndAdd$2(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nfunction distance$2(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nfunction squaredDistance$2(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nfunction squaredLength$4(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nfunction negate$2(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nfunction inverse$2(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nfunction normalize$4(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nfunction dot$4(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction cross$2(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nfunction lerp$4(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nfunction hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nfunction bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nfunction random$3(out, scale) {\n  scale = scale || 1.0;\n  var r = RANDOM() * 2.0 * Math.PI;\n  var z = RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nfunction transformMat4$2(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nfunction transformMat3$1(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nfunction transformQuat$1(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nfunction rotateX$2(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nfunction rotateY$2(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nfunction rotateZ$2(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nfunction angle$1(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot$4(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nfunction zero$2(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nfunction str$4(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction exactEquals$4(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction equals$4(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nvar sub$2 = subtract$2;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nvar mul$4 = multiply$4;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nvar div$2 = divide$2;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nvar dist$2 = distance$2;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nvar sqrDist$2 = squaredDistance$2;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nvar len$4 = length$4;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nvar sqrLen$4 = squaredLength$4;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nvar forEach$2 = function () {\n  var vec = create$4();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();\n\nvar vec3 = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   create: create$4,\n   clone: clone$4,\n   length: length$4,\n   fromValues: fromValues$4,\n   copy: copy$4,\n   set: set$4,\n   add: add$4,\n   subtract: subtract$2,\n   multiply: multiply$4,\n   divide: divide$2,\n   ceil: ceil$2,\n   floor: floor$2,\n   min: min$2,\n   max: max$2,\n   round: round$2,\n   scale: scale$4,\n   scaleAndAdd: scaleAndAdd$2,\n   distance: distance$2,\n   squaredDistance: squaredDistance$2,\n   squaredLength: squaredLength$4,\n   negate: negate$2,\n   inverse: inverse$2,\n   normalize: normalize$4,\n   dot: dot$4,\n   cross: cross$2,\n   lerp: lerp$4,\n   hermite: hermite,\n   bezier: bezier,\n   random: random$3,\n   transformMat4: transformMat4$2,\n   transformMat3: transformMat3$1,\n   transformQuat: transformQuat$1,\n   rotateX: rotateX$2,\n   rotateY: rotateY$2,\n   rotateZ: rotateZ$2,\n   angle: angle$1,\n   zero: zero$2,\n   str: str$4,\n   exactEquals: exactEquals$4,\n   equals: equals$4,\n   sub: sub$2,\n   mul: mul$4,\n   div: div$2,\n   dist: dist$2,\n   sqrDist: sqrDist$2,\n   len: len$4,\n   sqrLen: sqrLen$4,\n   forEach: forEach$2\n});\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nfunction create$3() {\n  var out = new ARRAY_TYPE(4);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nfunction clone$3(a) {\n  var out = new ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nfunction fromValues$3(x, y, z, w) {\n  var out = new ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nfunction copy$3(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nfunction set$3(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction add$3(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction subtract$1(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction multiply$3(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction divide$1(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nfunction ceil$1(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nfunction floor$1(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction min$1(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction max$1(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nfunction round$1(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nfunction scale$3(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nfunction scaleAndAdd$1(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nfunction distance$1(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nfunction squaredDistance$1(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nfunction length$3(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nfunction squaredLength$3(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nfunction negate$1(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nfunction inverse$1(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nfunction normalize$3(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nfunction dot$3(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nfunction cross$1(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nfunction lerp$3(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nfunction random$2(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = RANDOM() * 2 - 1;\n    v2 = RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = RANDOM() * 2 - 1;\n    v4 = RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nfunction transformMat4$1(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nfunction transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nfunction zero$1(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nfunction str$3(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction exactEquals$3(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction equals$3(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nvar sub$1 = subtract$1;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nvar mul$3 = multiply$3;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nvar div$1 = divide$1;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nvar dist$1 = distance$1;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nvar sqrDist$1 = squaredDistance$1;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nvar len$3 = length$3;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nvar sqrLen$3 = squaredLength$3;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nvar forEach$1 = function () {\n  var vec = create$3();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();\n\nvar vec4 = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   create: create$3,\n   clone: clone$3,\n   fromValues: fromValues$3,\n   copy: copy$3,\n   set: set$3,\n   add: add$3,\n   subtract: subtract$1,\n   multiply: multiply$3,\n   divide: divide$1,\n   ceil: ceil$1,\n   floor: floor$1,\n   min: min$1,\n   max: max$1,\n   round: round$1,\n   scale: scale$3,\n   scaleAndAdd: scaleAndAdd$1,\n   distance: distance$1,\n   squaredDistance: squaredDistance$1,\n   length: length$3,\n   squaredLength: squaredLength$3,\n   negate: negate$1,\n   inverse: inverse$1,\n   normalize: normalize$3,\n   dot: dot$3,\n   cross: cross$1,\n   lerp: lerp$3,\n   random: random$2,\n   transformMat4: transformMat4$1,\n   transformQuat: transformQuat,\n   zero: zero$1,\n   str: str$3,\n   exactEquals: exactEquals$3,\n   equals: equals$3,\n   sub: sub$1,\n   mul: mul$3,\n   div: div$1,\n   dist: dist$1,\n   sqrDist: sqrDist$1,\n   len: len$3,\n   sqrLen: sqrLen$3,\n   forEach: forEach$1\n});\n\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\n\nfunction create$2() {\n  var out = new ARRAY_TYPE(4);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nfunction identity$1(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\n\nfunction setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\n\nfunction getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\n\nfunction getAngle(a, b) {\n  var dotproduct = dot$2(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\n\nfunction multiply$2(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nfunction rotateX$1(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nfunction rotateY$1(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nfunction rotateZ$1(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\n\nfunction calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nfunction exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nfunction ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\n\nfunction pow(out, a, b) {\n  ln(out, a);\n  scale$2(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nfunction slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nfunction random$1(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = RANDOM();\n  var u2 = RANDOM();\n  var u3 = RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\n\nfunction invert$1(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\n\nfunction conjugate$1(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\n\nfunction fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\n\nfunction fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\n * Returns a string representation of a quatenion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nfunction str$2(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\n\nvar clone$2 = clone$3;\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\n\nvar fromValues$2 = fromValues$3;\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\n\nvar copy$2 = copy$3;\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\n\nvar set$2 = set$3;\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\n\nvar add$2 = add$3;\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\n\nvar mul$2 = multiply$2;\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\n\nvar scale$2 = scale$3;\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nvar dot$2 = dot$3;\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\n\nvar lerp$2 = lerp$3;\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nvar length$2 = length$3;\n/**\n * Alias for {@link quat.length}\n * @function\n */\n\nvar len$2 = length$2;\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nvar squaredLength$2 = squaredLength$3;\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\n\nvar sqrLen$2 = squaredLength$2;\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\n\nvar normalize$2 = normalize$3;\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nvar exactEquals$2 = exactEquals$3;\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat} a The first vector.\n * @param {ReadonlyQuat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nvar equals$2 = equals$3;\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\n\nvar rotationTo = function () {\n  var tmpvec3 = create$4();\n  var xUnitVec3 = fromValues$4(1, 0, 0);\n  var yUnitVec3 = fromValues$4(0, 1, 0);\n  return function (out, a, b) {\n    var dot = dot$4(a, b);\n\n    if (dot < -0.999999) {\n      cross$2(tmpvec3, xUnitVec3, a);\n      if (len$4(tmpvec3) < 0.000001) cross$2(tmpvec3, yUnitVec3, a);\n      normalize$4(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      cross$2(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize$2(out, out);\n    }\n  };\n}();\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nvar sqlerp = function () {\n  var temp1 = create$2();\n  var temp2 = create$2();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\n\nvar setAxes = function () {\n  var matr = create$6();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize$2(out, fromMat3(out, matr));\n  };\n}();\n\nvar quat = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   create: create$2,\n   identity: identity$1,\n   setAxisAngle: setAxisAngle,\n   getAxisAngle: getAxisAngle,\n   getAngle: getAngle,\n   multiply: multiply$2,\n   rotateX: rotateX$1,\n   rotateY: rotateY$1,\n   rotateZ: rotateZ$1,\n   calculateW: calculateW,\n   exp: exp,\n   ln: ln,\n   pow: pow,\n   slerp: slerp,\n   random: random$1,\n   invert: invert$1,\n   conjugate: conjugate$1,\n   fromMat3: fromMat3,\n   fromEuler: fromEuler,\n   str: str$2,\n   clone: clone$2,\n   fromValues: fromValues$2,\n   copy: copy$2,\n   set: set$2,\n   add: add$2,\n   mul: mul$2,\n   scale: scale$2,\n   dot: dot$2,\n   lerp: lerp$2,\n   length: length$2,\n   len: len$2,\n   squaredLength: squaredLength$2,\n   sqrLen: sqrLen$2,\n   normalize: normalize$2,\n   exactEquals: exactEquals$2,\n   equals: equals$2,\n   rotationTo: rotationTo,\n   sqlerp: sqlerp,\n   setAxes: setAxes\n});\n\n/**\n * Dual Quaternion<br>\n * Format: [real, dual]<br>\n * Quaternion format: XYZW<br>\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\n * @module quat2\n */\n\n/**\n * Creates a new identity dual quat\n *\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\n */\n\nfunction create$1() {\n  var dq = new ARRAY_TYPE(8);\n\n  if (ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat2} a dual quaternion to clone\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nfunction clone$1(a) {\n  var dq = new ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\n * Creates a new dual quat initialized with the given values\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nfunction fromValues$1(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\n * Creates a new dual quat from the given values (quat and translation)\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component (translation)\n * @param {Number} y2 Y component (translation)\n * @param {Number} z2 Z component (translation)\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nfunction fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\n * Creates a dual quat from a quaternion and a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q a normalized quaternion\n * @param {ReadonlyVec3} t tranlation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nfunction fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Creates a dual quat from a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyVec3} t translation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nfunction fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\n * Creates a dual quat from a quaternion\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q the quaternion\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nfunction fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\n * Creates a new dual quat from a matrix (4x4)\n *\n * @param {quat2} out the dual quaternion\n * @param {ReadonlyMat4} a the matrix\n * @returns {quat2} dual quat receiving operation result\n * @function\n */\n\nfunction fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = create$2();\n  getRotation(outer, a);\n  var t = new ARRAY_TYPE(3);\n  getTranslation$1(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\n * Copy the values from one dual quat to another\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the source dual quaternion\n * @returns {quat2} out\n * @function\n */\n\nfunction copy$1(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\n * Set a dual quat to the identity dual quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @returns {quat2} out\n */\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\n * Set the components of a dual quat to the given values\n *\n * @param {quat2} out the receiving quaternion\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} out\n * @function\n */\n\nfunction set$1(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\n * Gets the real part of a dual quat\n * @param  {quat} out real part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} real part\n */\n\nvar getReal = copy$2;\n/**\n * Gets the dual part of a dual quat\n * @param  {quat} out dual part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} dual part\n */\n\nfunction getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\n * Set the real component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the real part\n * @returns {quat2} out\n * @function\n */\n\nvar setReal = copy$2;\n/**\n * Set the dual component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the dual part\n * @returns {quat2} out\n * @function\n */\n\nfunction setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\n * Gets the translation of a normalized dual quat\n * @param  {vec3} out translation\n * @param  {ReadonlyQuat2} a Dual Quaternion to be decomposed\n * @return {vec3} translation\n */\n\nfunction getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\n * Translates a dual quat by the given vector\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {quat2} out\n */\n\nfunction translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\n * Rotates a dual quat around the X axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nfunction rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  rotateX$1(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around the Y axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nfunction rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  rotateY$1(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around the Z axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nfunction rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  rotateZ$1(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat by a given quaternion (a * q)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @returns {quat2} out\n */\n\nfunction rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\n * Rotates a dual quat by a given quaternion (q * a)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @returns {quat2} out\n */\n\nfunction rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around a given axis. Does the normalisation automatically\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @param {Number} rad how far the rotation should be\n * @returns {quat2} out\n */\n\nfunction rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < EPSILON) {\n    return copy$1(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Adds two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n * @function\n */\n\nfunction add$1(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\n * Multiplies two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n */\n\nfunction multiply$1(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\n * Alias for {@link quat2.multiply}\n * @function\n */\n\nvar mul$1 = multiply$1;\n/**\n * Scales a dual quat by a scalar number\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the dual quat to scale\n * @param {Number} b amount to scale the dual quat by\n * @returns {quat2} out\n * @function\n */\n\nfunction scale$1(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\n *\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nvar dot$1 = dot$2;\n/**\n * Performs a linear interpolation between two dual quats's\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat2} out\n */\n\nfunction lerp$1(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot$1(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quat to calculate inverse of\n * @returns {quat2} out\n */\n\nfunction invert(out, a) {\n  var sqlen = squaredLength$1(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\n * Calculates the conjugate of a dual quat\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat2} a quat to calculate conjugate of\n * @returns {quat2} out\n */\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\n * Calculates the length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate length of\n * @returns {Number} length of a\n * @function\n */\n\nvar length$1 = length$2;\n/**\n * Alias for {@link quat2.length}\n * @function\n */\n\nvar len$1 = length$1;\n/**\n * Calculates the squared length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nvar squaredLength$1 = squaredLength$2;\n/**\n * Alias for {@link quat2.squaredLength}\n * @function\n */\n\nvar sqrLen$1 = squaredLength$1;\n/**\n * Normalize a dual quat\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quaternion to normalize\n * @returns {quat2} out\n * @function\n */\n\nfunction normalize$1(out, a) {\n  var magnitude = squaredLength$1(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\n * Returns a string representation of a dual quatenion\n *\n * @param {ReadonlyQuat2} a dual quaternion to represent as a string\n * @returns {String} string representation of the dual quat\n */\n\nfunction str$1(a) {\n  return \"quat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \")\";\n}\n/**\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat2} a the first dual quaternion.\n * @param {ReadonlyQuat2} b the second dual quaternion.\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\n */\n\nfunction exactEquals$1(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat2} a the first dual quat.\n * @param {ReadonlyQuat2} b the second dual quat.\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\n */\n\nfunction equals$1(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}\n\nvar quat2 = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   create: create$1,\n   clone: clone$1,\n   fromValues: fromValues$1,\n   fromRotationTranslationValues: fromRotationTranslationValues,\n   fromRotationTranslation: fromRotationTranslation,\n   fromTranslation: fromTranslation,\n   fromRotation: fromRotation,\n   fromMat4: fromMat4,\n   copy: copy$1,\n   identity: identity,\n   set: set$1,\n   getReal: getReal,\n   getDual: getDual,\n   setReal: setReal,\n   setDual: setDual,\n   getTranslation: getTranslation,\n   translate: translate,\n   rotateX: rotateX,\n   rotateY: rotateY,\n   rotateZ: rotateZ,\n   rotateByQuatAppend: rotateByQuatAppend,\n   rotateByQuatPrepend: rotateByQuatPrepend,\n   rotateAroundAxis: rotateAroundAxis,\n   add: add$1,\n   multiply: multiply$1,\n   mul: mul$1,\n   scale: scale$1,\n   dot: dot$1,\n   lerp: lerp$1,\n   invert: invert,\n   conjugate: conjugate,\n   length: length$1,\n   len: len$1,\n   squaredLength: squaredLength$1,\n   sqrLen: sqrLen$1,\n   normalize: normalize$1,\n   str: str$1,\n   exactEquals: exactEquals$1,\n   equals: equals$1\n});\n\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nfunction create() {\n  var out = new ARRAY_TYPE(2);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nfunction clone(a) {\n  var out = new ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nfunction fromValues(x, y) {\n  var out = new ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nfunction set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nfunction distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nfunction length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nfunction squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nfunction normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nfunction cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nfunction transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nfunction transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nfunction transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nfunction rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nfunction angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nfunction str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nvar len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nvar sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nvar mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nvar div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nvar dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nvar sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nvar sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();\n\nvar vec2 = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   create: create,\n   clone: clone,\n   fromValues: fromValues,\n   copy: copy,\n   set: set,\n   add: add,\n   subtract: subtract,\n   multiply: multiply,\n   divide: divide,\n   ceil: ceil,\n   floor: floor,\n   min: min,\n   max: max,\n   round: round,\n   scale: scale,\n   scaleAndAdd: scaleAndAdd,\n   distance: distance,\n   squaredDistance: squaredDistance,\n   length: length,\n   squaredLength: squaredLength,\n   negate: negate,\n   inverse: inverse,\n   normalize: normalize,\n   dot: dot,\n   cross: cross,\n   lerp: lerp,\n   random: random,\n   transformMat2: transformMat2,\n   transformMat2d: transformMat2d,\n   transformMat3: transformMat3,\n   transformMat4: transformMat4,\n   rotate: rotate,\n   angle: angle,\n   zero: zero,\n   str: str,\n   exactEquals: exactEquals,\n   equals: equals,\n   len: len,\n   sub: sub,\n   mul: mul,\n   div: div,\n   dist: dist,\n   sqrDist: sqrDist,\n   sqrLen: sqrLen,\n   forEach: forEach\n});\n\n/**\n * Provides a way to calculate velocity via effectively creating a \"complementary filter\".\n *\n * `velQuick` and `velSmooth` separately accumulate over time. `velInstant` and `velUsed` do not accumulate and are\n * discarded each update. `velQuick` is responsive, but noisy. `velSmooth` is laggy but eventually more accurate. By\n * tracking them separately the used result can be responsive in the short term and accurate in the long term.\n *\n * TODO: This class will be moved to a final location in the @typhonjs-svelte/lib/math package.\n */\nclass TJSVelocityTrack\n{\n   /** @type {number} */\n   #lastSampleTime;\n\n   /**\n    * Tracks the last sample point.\n    *\n    * @type {{x: number, y: number, z: number}}\n    */\n   #lastSamplePoint = { x: 0, y: 0, z: 0 };\n\n   /**\n    * Defines the settle time in milliseconds that resets any tracked velocity state.\n    *\n    * @type {number}\n    */\n   #resetDeltaTime;\n\n   /**\n    * Stores the scaling conversion for used velocity calculation. By default, this is 1000 which converts the velocity\n    * calculation to velocity per second. Set to `1` for instance for velocity per millisecond.\n    *\n    * @type {number}\n    */\n   #scaleTime;\n\n   /**\n    * Stores the instant velocity between current and last sample point.\n    *\n    * @type {{x: number, y: number, z: number}}\n    */\n   #velInstant = { x: 0, y: 0, z: 0 };\n\n   /**\n    * Stores the `quick` running calculated velocity.\n    *\n    * @type {{x: number, y: number, z: number}}\n    */\n   #velQuick = { x: 0, y: 0, z: 0 };\n\n   /**\n    * Stores the `smooth` running calculated velocity.\n    *\n    * @type {{x: number, y: number, z: number}}\n    */\n   #velSmooth = { x: 0, y: 0, z: 0 };\n\n   /**\n    * Stores the mix between `quick` and `smooth` running velocity.\n    *\n    * @type {{x: number, y: number, z: number}}\n    */\n   #velUsed = { x: 0, y: 0, z: 0 };\n\n   /**\n    * Creates a velocity tracker instance.\n    *\n    * @param {object}   [opts] - Optional parameters.\n    *\n    * @param {number}   [opts.resetDeltaTime=50] - Delta time in milliseconds that resets velocity tracking.\n    *\n    * @param {number}   [opts.scaleTime=1000] - Scales velocity calculation to new time frame. 1000 is velocity per\n    *                                           second.\n    */\n   constructor({ resetDeltaTime = 50, scaleTime = 1000 } = {})\n   {\n      this.resetDeltaTime = resetDeltaTime;\n      this.scaleTime = scaleTime;\n\n      Object.seal(this.#velUsed);\n   }\n\n   /**\n    * @returns {number} Gets `resetDeltaTime`.\n    */\n   get resetDeltaTime() { return this.#resetDeltaTime; }\n\n   /**\n    * @returns {number} Gets `scaleTime`.\n    */\n   get scaleTime() { return this.#scaleTime; }\n\n   /**\n    * Sets `resetDeltaTime`.\n    *\n    * @param {number}   resetDeltaTime - Delta time in milliseconds that resets velocity tracking.\n    */\n   set resetDeltaTime(resetDeltaTime)\n   {\n      if (!Number.isFinite(resetDeltaTime) || resetDeltaTime < 0)\n      {\n         throw new TypeError(`'resetDeltaTime' is not a positive finite number.`);\n      }\n\n      this.#resetDeltaTime = resetDeltaTime;\n   }\n\n   /**\n    * Sets `scaleTime`.\n    *\n    * @param {number}   scaleTime - Scales velocity calculation to new time frame. 1000 is velocity per second.\n    */\n   set scaleTime(scaleTime)\n   {\n      if (!Number.isFinite(scaleTime) || scaleTime < 0)\n      {\n         throw new TypeError(`'scaleTime' is not a positive finite number.`);\n      }\n\n      this.#scaleTime = scaleTime;\n   }\n\n   /**\n    * Resets velocity tracking data.\n    *\n    * @param {number}   [x=0] - 'X' value to set to last sample point.\n    *\n    * @param {number}   [y=0] - 'Y' value to set to last sample point.\n    *\n    * @param {number}   [z=0] - 'Z' value to set to last sample point.\n    *\n    * @param {number}   [sampleTime=performance.now()] - A sample time in milliseconds resolution.\n    */\n   reset(x = 0, y = 0, z = 0, sampleTime = performance.now())\n   {\n      if (!Number.isFinite(x)) { throw new TypeError(`'x' is not a finite number.`); }\n      if (!Number.isFinite(y)) { throw new TypeError(`'y' is not a finite number.`); }\n      if (!Number.isFinite(z)) { throw new TypeError(`'z' is not a finite number.`); }\n      if (!Number.isFinite(sampleTime)) { throw new TypeError(`'sampleTime' is not a finite number.`); }\n\n      // Reset velocity tracking variables.\n      this.#lastSampleTime = sampleTime;\n\n      this.#lastSamplePoint.x = x;\n      this.#lastSamplePoint.y = y;\n      this.#lastSamplePoint.z = z;\n\n      this.#velInstant.x = this.#velQuick.x = this.#velSmooth.x = this.#velUsed.x = 0;\n      this.#velInstant.y = this.#velQuick.y = this.#velSmooth.y = this.#velUsed.y = 0;\n      this.#velInstant.z = this.#velQuick.z = this.#velSmooth.z = this.#velUsed.z = 0;\n   }\n\n   /**\n    * Runs ongoing velocity calculation of x / y / z given a sample time.\n    *\n    * @param {number|undefined}  x - New sample X\n    *\n    * @param {number|undefined}  y - New sample Y\n    *\n    * @param {number|undefined}  z - New sample Z\n    *\n    * @param {number}            [sampleTime=performance.now()] - An optional specific time w/ millisecond resolution.\n    *\n    * @returns {{x: number, y: number, z: number}} current velocity.\n    */\n   update(x = void 0, y = void 0, z = void 0, sampleTime = performance.now())\n   {\n      if (!Number.isFinite(sampleTime)) { throw new TypeError(`'sampleTime' is not a finite number.`); }\n\n      const deltaTime = sampleTime - this.#lastSampleTime + Number.EPSILON;\n      this.#lastSampleTime = sampleTime;\n\n      // Reset velocity tracking if the delta time is greater than `resetDeltaTime`.\n      if (deltaTime > this.#resetDeltaTime)\n      {\n         this.reset(x, y, z, sampleTime);\n         return this.#velUsed;\n      }\n\n      if (Number.isFinite(x))\n      {\n         this.#velInstant.x = (x - this.#lastSamplePoint.x) / deltaTime;\n\n         this.#lastSamplePoint.x = x;\n\n         this.#velQuick.x = lerp$5(this.#velQuick.x, this.#velInstant.x, 0.1);\n         this.#velSmooth.x = lerp$5(this.#velSmooth.x, this.#velInstant.x, 0.01);\n         this.#velUsed.x = lerp$5(this.#velSmooth.x, this.#velQuick.x, 0.5) * this.#scaleTime;\n      }\n\n      if (Number.isFinite(y))\n      {\n         this.#velInstant.y = (y - this.#lastSamplePoint.y) / deltaTime;\n\n         this.#lastSamplePoint.y = y;\n\n         this.#velQuick.y = lerp$5(this.#velQuick.y, this.#velInstant.y, 0.1);\n         this.#velSmooth.y = lerp$5(this.#velSmooth.y, this.#velInstant.y, 0.01);\n\n         this.#velUsed.y = lerp$5(this.#velSmooth.y, this.#velQuick.y, 0.5) * this.#scaleTime;\n      }\n\n      if (Number.isFinite(z))\n      {\n         this.#velInstant.z = (z - this.#lastSamplePoint.z) / deltaTime;\n\n         this.#lastSamplePoint.z = z;\n\n         this.#velQuick.z = lerp$5(this.#velQuick.z, this.#velInstant.z, 0.1);\n         this.#velSmooth.z = lerp$5(this.#velSmooth.z, this.#velInstant.z, 0.01);\n         this.#velUsed.z = lerp$5(this.#velSmooth.z, this.#velQuick.z, 0.5) * this.#scaleTime;\n      }\n\n      return this.#velUsed;\n   }\n\n   /**\n    * Gets the current velocity tracking data.\n    *\n    * @returns {{x: number, y: number, z: number}} Velocity tracking data.\n    */\n   get()\n   {\n      this.#velUsed.x = lerp$5(this.#velSmooth.x, this.#velQuick.x, 0.5) * this.#scaleTime;\n      this.#velUsed.y = lerp$5(this.#velSmooth.y, this.#velQuick.y, 0.5) * this.#scaleTime;\n      this.#velUsed.z = lerp$5(this.#velSmooth.z, this.#velQuick.z, 0.5) * this.#scaleTime;\n\n      return this.#velUsed;\n   }\n}\n\nexport { TJSVelocityTrack, degToRad, common as glMatrix, lerp$5 as lerp, mat2, mat2d, mat3, mat4, quat, quat2, radToDeg, vec2, vec3, vec4 };\n//# sourceMappingURL=index.js.map\n","/**\n * Provides a basic {@link TJSBasicAnimation} implementation for Position animation.\n */\nexport class AnimationControl\n{\n   /** @type {object} */\n   #animationData;\n\n   /** @type {Promise<void>} */\n   #finishedPromise;\n\n   #willFinish;\n\n   /**\n    * Defines a static empty / void animation control.\n    *\n    * @type {AnimationControl}\n    */\n   static #voidControl = new AnimationControl(null);\n\n   /**\n    * Provides a static void / undefined AnimationControl that is automatically resolved.\n    *\n    * @returns {AnimationControl} Void AnimationControl\n    */\n   static get voidControl() { return this.#voidControl; }\n\n   /**\n    * @param {object|null} [animationData] - Animation data from {@link AnimationAPI}.\n    *\n    * @param {boolean}     [willFinish] - Promise that tracks animation finished state.\n    */\n   constructor(animationData, willFinish = false)\n   {\n      this.#animationData = animationData;\n      this.#willFinish = willFinish;\n\n      // Set this control to animation data.\n      if (animationData !== null && typeof animationData === 'object')\n      {\n         animationData.control = this;\n      }\n   }\n\n   /**\n    * Get a promise that resolves when animation is finished.\n    *\n    * @returns {Promise<void>}\n    */\n   get finished()\n   {\n      if (!(this.#finishedPromise instanceof Promise))\n      {\n         this.#finishedPromise = this.#willFinish ? new Promise((resolve) => this.#animationData.resolve = resolve) :\n          Promise.resolve();\n      }\n\n      return this.#finishedPromise;\n   }\n\n   /**\n    * Returns whether this animation is currently active / animating.\n    *\n    * Note: a delayed animation may not be started / active yet. Use {@link AnimationControl.isFinished} to determine\n    * if an animation is actually finished.\n    *\n    * @returns {boolean} Animation active state.\n    */\n   get isActive() { return this.#animationData.active; }\n\n   /**\n    * Returns whether this animation is completely finished.\n    *\n    * @returns {boolean} Animation finished state.\n    */\n   get isFinished() { return this.#animationData.finished; }\n\n   /**\n    * Cancels the animation.\n    */\n   cancel()\n   {\n      const animationData = this.#animationData;\n\n      if (animationData === null || animationData === void 0) { return; }\n\n      // Set cancelled state to true and this animation data instance will be removed from AnimationManager on next\n      // update.\n      animationData.cancelled = true;\n   }\n}\n","/**\n * Provides animation management and scheduling allowing all Position instances to utilize one micro-task.\n */\nexport class AnimationManager\n{\n   /**\n    * @type {object[]}\n    */\n   static activeList = [];\n\n   /**\n    * @type {object[]}\n    */\n   static newList = [];\n\n   /**\n    * @type {number}\n    */\n   static current;\n\n   /**\n    * Add animation data.\n    *\n    * @param {object}   data -\n    */\n   static add(data)\n   {\n      const now = performance.now();\n\n      // Offset start time by delta between last rAF time. This allows continuous tween cycles to appear naturally as\n      // starting from the instant they are added to the AnimationManager. This is what makes `draggable` smooth when\n      // easing is enabled.\n      data.start = now + (AnimationManager.current - now);\n\n      AnimationManager.newList.push(data);\n   }\n\n   /**\n    * Manage all animation\n    */\n   static animate()\n   {\n      const current = AnimationManager.current = performance.now();\n\n      // Early out of the rAF callback when there are no current animations.\n      if (AnimationManager.activeList.length === 0 && AnimationManager.newList.length === 0)\n      {\n         globalThis.requestAnimationFrame(AnimationManager.animate);\n         return;\n      }\n\n      if (AnimationManager.newList.length)\n      {\n         // Process new data\n         for (let cntr = AnimationManager.newList.length; --cntr >= 0;)\n         {\n            const data = AnimationManager.newList[cntr];\n\n            // If animation instance has been cancelled before start then remove it from new list and cleanup.\n            if (data.cancelled)\n            {\n               AnimationManager.newList.splice(cntr, 1);\n               data.cleanup(data);\n            }\n\n            // If data is active then process it now. Delayed animations start with `active` false.\n            if (data.active)\n            {\n               // Remove from new list and add to active list.\n               AnimationManager.newList.splice(cntr, 1);\n               AnimationManager.activeList.push(data);\n            }\n         }\n      }\n\n      // Process active animations.\n      for (let cntr = AnimationManager.activeList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.activeList[cntr];\n\n         // Remove any animations that have been canceled.\n         // Ensure that the element is still connected otherwise remove it from active list and continue.\n         if (data.cancelled || (data.el !== void 0 && !data.el.isConnected))\n         {\n            AnimationManager.activeList.splice(cntr, 1);\n            data.cleanup(data);\n            continue;\n         }\n\n         data.current = current - data.start;\n\n         // Remove this animation instance if current animating time exceeds duration.\n         if (data.current >= data.duration)\n         {\n            // Prepare final update with end position data.\n            for (let dataCntr = data.keys.length; --dataCntr >= 0;)\n            {\n               const key = data.keys[dataCntr];\n               data.newData[key] = data.destination[key];\n            }\n\n            data.position.set(data.newData);\n\n            AnimationManager.activeList.splice(cntr, 1);\n            data.cleanup(data);\n\n            continue;\n         }\n\n         // Apply easing to create an eased time.\n         const easedTime = data.ease(data.current / data.duration);\n\n         for (let dataCntr = data.keys.length; --dataCntr >= 0;)\n         {\n            const key = data.keys[dataCntr];\n            data.newData[key] = data.interpolate(data.initial[key], data.destination[key], easedTime);\n         }\n\n         data.position.set(data.newData);\n      }\n\n      globalThis.requestAnimationFrame(AnimationManager.animate);\n   }\n\n   /**\n    * Cancels all animations for given Position instance.\n    *\n    * @param {Position} position - Position instance.\n    */\n   static cancel(position)\n   {\n      for (let cntr = AnimationManager.activeList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.activeList[cntr];\n         if (data.position === position)\n         {\n            AnimationManager.activeList.splice(cntr, 1);\n            data.cancelled = true;\n            data.cleanup(data);\n         }\n      }\n\n      for (let cntr = AnimationManager.newList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.newList[cntr];\n         if (data.position === position)\n         {\n            AnimationManager.newList.splice(cntr, 1);\n            data.cancelled = true;\n            data.cleanup(data);\n         }\n      }\n   }\n\n   /**\n    * Cancels all active and delayed animations.\n    */\n   static cancelAll()\n   {\n      for (let cntr = AnimationManager.activeList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.activeList[cntr];\n         data.cancelled = true;\n         data.cleanup(data);\n      }\n\n      for (let cntr = AnimationManager.newList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.newList[cntr];\n         data.cancelled = true;\n         data.cleanup(data);\n      }\n\n      AnimationManager.activeList.length = 0;\n      AnimationManager.newList.length = 0;\n   }\n\n   /**\n    * Gets all {@link AnimationControl} instances for a given Position instance.\n    *\n    * @param {Position} position - Position instance.\n    *\n    * @returns {AnimationControl[]} All scheduled AnimationControl instances for the given Position instance.\n    */\n   static getScheduled(position)\n   {\n      const results = [];\n\n      for (let cntr = AnimationManager.activeList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.activeList[cntr];\n         if (data.position === position)\n         {\n            results.push(data.control);\n         }\n      }\n\n      for (let cntr = AnimationManager.newList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.newList[cntr];\n         if (data.position === position)\n         {\n            results.push(data.control);\n         }\n      }\n\n      return results;\n   }\n}\n\n// Start animation manager immediately. It constantly is running in background.\nAnimationManager.animate();\n","/**\n * Stores the PositionData properties that can be animated.\n *\n * @type {Set<string>}\n */\nconst animateKeys = new Set([\n   // Main keys\n   'left', 'top', 'maxWidth', 'maxHeight', 'minWidth', 'minHeight', 'width', 'height',\n   'rotateX', 'rotateY', 'rotateZ', 'scale', 'translateX', 'translateY', 'translateZ', 'zIndex',\n\n   // Aliases\n   'rotation'\n]);\n\n/**\n * Defines the keys of PositionData that are transform keys.\n *\n * @type {string[]}\n */\nconst transformKeys = ['rotateX', 'rotateY', 'rotateZ', 'scale', 'translateX', 'translateY', 'translateZ'];\n\nObject.freeze(transformKeys);\n\n/**\n * Parses a relative value string in the form of '+=', '-=', or '*=' and float / numeric value. IE '+=0.2'.\n *\n * @type {RegExp}\n */\nconst relativeRegex = /^([-+*])=(-?[\\d]*\\.?[\\d]+)$/;\n\n/**\n * Provides numeric defaults for all parameters. This is used by {@link Position.get} to optionally provide\n * numeric defaults.\n *\n * @type {{rotation: number, scale: number, minWidth: null, minHeight: null, translateZ: number, top: number, left: number, maxHeight: null, translateY: number, translateX: number, width: number, transformOrigin: null, rotateX: number, rotateY: number, height: number, maxWidth: null, zIndex: null, rotateZ: number}}\n */\nconst numericDefaults = {\n   // Other keys\n   height: 0,\n   left: 0,\n   maxHeight: null,\n   maxWidth: null,\n   minHeight: null,\n   minWidth: null,\n   top: 0,\n   transformOrigin: null,\n   width: 0,\n   zIndex: null,\n\n   rotateX: 0,\n   rotateY: 0,\n   rotateZ: 0,\n   scale: 1,\n   translateX: 0,\n   translateY: 0,\n   translateZ: 0,\n\n   rotation: 0\n};\n\nObject.freeze(numericDefaults);\n\n/**\n * Sets numeric defaults for a {@link PositionData} like object.\n *\n * @param {object}   data - A PositionData like object.\n */\nfunction setNumericDefaults(data)\n{\n   // Transform keys\n   if (data.rotateX === null) { data.rotateX = 0; }\n   if (data.rotateY === null) { data.rotateY = 0; }\n   if (data.rotateZ === null) { data.rotateZ = 0; }\n   if (data.translateX === null) { data.translateX = 0; }\n   if (data.translateY === null) { data.translateY = 0; }\n   if (data.translateZ === null) { data.translateZ = 0; }\n   if (data.scale === null) { data.scale = 1; }\n\n   // Aliases\n   if (data.rotation === null) { data.rotation = 0; }\n}\n\n/**\n * Defines bitwise keys for transforms used in {@link Transforms.getMat4}.\n *\n * @type {object}\n */\nconst transformKeysBitwise = {\n   rotateX: 1,\n   rotateY: 2,\n   rotateZ: 4,\n   scale: 8,\n   translateX: 16,\n   translateY: 32,\n   translateZ: 64\n};\n\nObject.freeze(transformKeysBitwise);\n\n/**\n * Defines the default transform origin.\n *\n * @type {string}\n */\nconst transformOriginDefault = 'top left';\n\n/**\n * Defines the valid transform origins.\n *\n * @type {string[]}\n */\nconst transformOrigins = ['top left', 'top center', 'top right', 'center left', 'center', 'center right', 'bottom left',\n 'bottom center', 'bottom right'];\n\nObject.freeze(transformOrigins);\n\nexport {\n   animateKeys,\n   numericDefaults,\n   relativeRegex,\n   setNumericDefaults,\n   transformKeys,\n   transformKeysBitwise,\n   transformOriginDefault,\n   transformOrigins\n};\n","import * as constants from './constants.js';\n\n/**\n * Converts any relative string values for animatable keys to actual updates performed against current data.\n *\n * @param {PositionDataExtended}    positionData - position data.\n *\n * @param {Position|PositionData}   position - The source position instance.\n */\nexport function convertRelative(positionData, position)\n{\n   for (const key in positionData)\n   {\n      // Key is animatable / numeric.\n      if (constants.animateKeys.has(key))\n      {\n         const value = positionData[key];\n\n         if (typeof value !== 'string') { continue; }\n\n         // Ignore 'auto' and 'inherit' string values.\n         if (value === 'auto' || value === 'inherit') { continue; }\n\n         const regexResults = constants.relativeRegex.exec(value);\n\n         if (!regexResults)\n         {\n            throw new Error(\n             `convertRelative error: malformed relative key (${key}) with value (${value})`);\n         }\n\n         const current = position[key];\n\n         switch (regexResults[1])\n         {\n            case '-':\n               positionData[key] = current - parseFloat(regexResults[2]);\n               break;\n\n            case '+':\n               positionData[key] = current + parseFloat(regexResults[2]);\n               break;\n\n            case '*':\n               positionData[key] = current * parseFloat(regexResults[2]);\n               break;\n         }\n      }\n   }\n}\n","import { cubicOut }           from 'svelte/easing';\n\nimport { lerp }               from '@typhonjs-fvtt/runtime/svelte/math';\nimport {\n   isIterable,\n   isObject }                 from '@typhonjs-fvtt/runtime/svelte/util';\n\nimport { AnimationControl }   from './AnimationControl.js';\nimport { AnimationManager }   from './AnimationManager.js';\n\nimport { convertRelative }    from '../convertRelative.js';\n\nimport {\n   animateKeys,\n   setNumericDefaults }       from '../constants.js';\n\nexport class AnimationAPI\n{\n   /** @type {PositionData} */\n   #data;\n\n   /** @type {Position} */\n   #position;\n\n   /**\n    * Tracks the number of animation control instances that are active.\n    *\n    * @type {number}\n    */\n   #instanceCount = 0;\n\n   /**\n    * Provides a bound function to pass as data to AnimationManager to invoke\n    *\n    * @type {Function}\n    * @see {AnimationAPI.#cleanupInstance}\n    */\n   #cleanup;\n\n   constructor(position, data)\n   {\n      this.#position = position;\n      this.#data = data;\n\n      this.#cleanup = this.#cleanupInstance.bind(this);\n   }\n\n   /**\n    * Returns whether there are scheduled animations whether active or delayed for this Position.\n    *\n    * @returns {boolean} Are there active animation instances.\n    */\n   get isScheduled()\n   {\n      return this.#instanceCount > 0;\n   }\n\n   /**\n    * Adds / schedules an animation w/ the AnimationManager. This contains the final steps common to all tweens.\n    *\n    * @param {object}      initial -\n    *\n    * @param {object}      destination -\n    *\n    * @param {number}      duration -\n    *\n    * @param {HTMLElement} el -\n    *\n    * @param {number}      delay -\n    *\n    * @param {Function}    ease -\n    *\n    * @param {Function}    interpolate -\n    *\n    * @returns {AnimationControl} The associated animation control.\n    */\n   #addAnimation(initial, destination, duration, el, delay, ease, interpolate)\n   {\n      // Set initial data for transform values that are often null by default.\n      setNumericDefaults(initial);\n      setNumericDefaults(destination);\n\n      // Reject all initial data that is not a number.\n      for (const key in initial)\n      {\n         if (!Number.isFinite(initial[key])) { delete initial[key]; }\n      }\n\n      const keys = Object.keys(initial);\n      const newData = Object.assign({ immediateElementUpdate: true }, initial);\n\n      // Nothing to animate, so return now.\n      if (keys.length === 0) { return AnimationControl.voidControl; }\n\n      const animationData = {\n         active: true,\n         cleanup: this.#cleanup,\n         cancelled: false,\n         control: void 0,\n         current: 0,\n         destination,\n         duration: duration * 1000, // Internally the AnimationManager works in ms.\n         ease,\n         el,\n         finished: false,\n         initial,\n         interpolate,\n         keys,\n         newData,\n         position: this.#position,\n         resolve: void 0,\n         start: void 0\n      };\n\n      if (delay > 0)\n      {\n         animationData.active = false;\n\n         // Delay w/ setTimeout and schedule w/ AnimationManager if not already canceled\n         setTimeout(() =>\n         {\n            if (!animationData.cancelled)\n            {\n               animationData.active = true;\n\n               const now = performance.now();\n\n               // Offset start time by delta between last rAF time. This allows a delayed tween to start from the\n               // precise delayed time.\n               animationData.start = now + (AnimationManager.current - now);\n            }\n         }, delay * 1000);\n      }\n\n      // Schedule immediately w/ AnimationManager\n      this.#instanceCount++;\n      AnimationManager.add(animationData);\n\n      // Create animation control\n      return new AnimationControl(animationData, true);\n   }\n\n   /**\n    * Cancels all animation instances for this Position instance.\n    */\n   cancel()\n   {\n      AnimationManager.cancel(this.#position);\n   }\n\n   /**\n    * Cleans up an animation instance.\n    *\n    * @param {object}   data - Animation data for an animation instance.\n    */\n   #cleanupInstance(data)\n   {\n      this.#instanceCount--;\n\n      data.active = false;\n      data.finished = true;\n\n      if (typeof data.resolve === 'function') { data.resolve(data.cancelled); }\n   }\n\n   /**\n    * Returns all currently scheduled AnimationControl instances for this Position instance.\n    *\n    * @returns {AnimationControl[]} All currently scheduled animation controls for this Position instance.\n    */\n   getScheduled()\n   {\n      return AnimationManager.getScheduled(this.#position);\n   }\n\n   /**\n    * Provides a tween from given position data to the current position.\n    *\n    * @param {PositionDataExtended} fromData - The starting position.\n    *\n    * @param {object}         [opts] - Optional parameters.\n    *\n    * @param {number}         [opts.delay=0] - Delay in seconds before animation starts.\n    *\n    * @param {number}         [opts.duration=1] - Duration in seconds.\n    *\n    * @param {Function}       [opts.ease=cubicOut] - Easing function.\n    *\n    * @param {Function}       [opts.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {AnimationControl}  A control object that can cancel animation and provides a `finished` Promise.\n    */\n   from(fromData, { delay = 0, duration = 1, ease = cubicOut, interpolate = lerp } = {})\n   {\n      if (!isObject(fromData))\n      {\n         throw new TypeError(`AnimationAPI.from error: 'fromData' is not an object.`);\n      }\n\n      const position = this.#position;\n      const parent = position.parent;\n\n      // Early out if the application is not positionable.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return AnimationControl.voidControl;\n      }\n\n      // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\n      const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n      const el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\n\n      if (!Number.isFinite(delay) || delay < 0)\n      {\n         throw new TypeError(`AnimationAPI.from error: 'delay' is not a positive number.`);\n      }\n\n      if (!Number.isFinite(duration) || duration < 0)\n      {\n         throw new TypeError(`AnimationAPI.from error: 'duration' is not a positive number.`);\n      }\n\n      if (typeof ease !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.from error: 'ease' is not a function.`);\n      }\n\n      if (typeof interpolate !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.from error: 'interpolate' is not a function.`);\n      }\n\n      const initial = {};\n      const destination = {};\n\n      const data = this.#data;\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key in fromData)\n      {\n         if (data[key] !== void 0 && fromData[key] !== data[key])\n         {\n            initial[key] = fromData[key];\n            destination[key] = data[key];\n         }\n      }\n\n      convertRelative(initial, data);\n\n      return this.#addAnimation(initial, destination, duration, el, delay, ease, interpolate);\n   }\n\n   /**\n    * Provides a tween from given position data to the current position.\n    *\n    * @param {PositionDataExtended} fromData - The starting position.\n    *\n    * @param {PositionDataExtended} toData - The ending position.\n    *\n    * @param {object}         [opts] - Optional parameters.\n    *\n    * @param {number}         [opts.delay=0] - Delay in seconds before animation starts.\n    *\n    * @param {number}         [opts.duration=1] - Duration in seconds.\n    *\n    * @param {Function}       [opts.ease=cubicOut] - Easing function.\n    *\n    * @param {Function}       [opts.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {AnimationControl}  A control object that can cancel animation and provides a `finished` Promise.\n    */\n   fromTo(fromData, toData, { delay = 0, duration = 1, ease = cubicOut, interpolate = lerp } = {})\n   {\n      if (!isObject(fromData))\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'fromData' is not an object.`);\n      }\n\n      if (!isObject(toData))\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'toData' is not an object.`);\n      }\n\n      const parent = this.#position.parent;\n\n      // Early out if the application is not positionable.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return AnimationControl.voidControl;\n      }\n\n      // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\n      const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n      const el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\n\n      if (!Number.isFinite(delay) || delay < 0)\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'delay' is not a positive number.`);\n      }\n\n      if (!Number.isFinite(duration) || duration < 0)\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'duration' is not a positive number.`);\n      }\n\n      if (typeof ease !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'ease' is not a function.`);\n      }\n\n      if (typeof interpolate !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'interpolate' is not a function.`);\n      }\n\n      const initial = {};\n      const destination = {};\n\n      const data = this.#data;\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key in fromData)\n      {\n         if (toData[key] === void 0)\n         {\n            console.warn(\n             `AnimationAPI.fromTo warning: key ('${key}') from 'fromData' missing in 'toData'; skipping this key.`);\n            continue;\n         }\n\n         if (data[key] !== void 0)\n         {\n            initial[key] = fromData[key];\n            destination[key] = toData[key];\n         }\n      }\n\n      convertRelative(initial, data);\n      convertRelative(destination, data);\n\n      return this.#addAnimation(initial, destination, duration, el, delay, ease, interpolate);\n   }\n\n   /**\n    * Provides a tween to given position data from the current position.\n    *\n    * @param {PositionDataExtended} toData - The destination position.\n    *\n    * @param {object}         [opts] - Optional parameters.\n    *\n    * @param {number}         [opts.delay=0] - Delay in seconds before animation starts.\n    *\n    * @param {number}         [opts.duration=1] - Duration in seconds.\n    *\n    * @param {Function}       [opts.ease=cubicOut] - Easing function.\n    *\n    * @param {Function}       [opts.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {AnimationControl}  A control object that can cancel animation and provides a `finished` Promise.\n    */\n   to(toData, { delay = 0, duration = 1, ease = cubicOut, interpolate = lerp } = {})\n   {\n      if (!isObject(toData))\n      {\n         throw new TypeError(`AnimationAPI.to error: 'toData' is not an object.`);\n      }\n\n      const parent = this.#position.parent;\n\n      // Early out if the application is not positionable.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return AnimationControl.voidControl;\n      }\n\n      // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\n      const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n      const el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\n\n      if (!Number.isFinite(delay) || delay < 0)\n      {\n         throw new TypeError(`AnimationAPI.to error: 'delay' is not a positive number.`);\n      }\n\n      if (!Number.isFinite(duration) || duration < 0)\n      {\n         throw new TypeError(`AnimationAPI.to error: 'duration' is not a positive number.`);\n      }\n\n      if (typeof ease !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.to error: 'ease' is not a function.`);\n      }\n\n      if (typeof interpolate !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.to error: 'interpolate' is not a function.`);\n      }\n\n      const initial = {};\n      const destination = {};\n\n      const data = this.#data;\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key in toData)\n      {\n         if (data[key] !== void 0 && toData[key] !== data[key])\n         {\n            destination[key] = toData[key];\n            initial[key] = data[key];\n         }\n      }\n\n      convertRelative(destination, data);\n\n      return this.#addAnimation(initial, destination, duration, el, delay, ease, interpolate);\n   }\n\n   /**\n    * Returns a function that provides an optimized way to constantly update a to-tween.\n    *\n    * @param {Iterable<string>}  keys - The keys for quickTo.\n    *\n    * @param {object}            [opts] - Optional parameters.\n    *\n    * @param {number}            [opts.duration=1] - Duration in seconds.\n    *\n    * @param {Function}          [opts.ease=cubicOut] - Easing function.\n    *\n    * @param {Function}          [opts.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {quickToCallback} quick-to tween function.\n    */\n   quickTo(keys, { duration = 1, ease = cubicOut, interpolate = lerp } = {})\n   {\n      if (!isIterable(keys))\n      {\n         throw new TypeError(`AnimationAPI.quickTo error: 'keys' is not an iterable list.`);\n      }\n\n      const parent = this.#position.parent;\n\n      // Early out if the application is not positionable.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         throw new Error(`AnimationAPI.quickTo error: 'parent' is not positionable.`);\n      }\n\n      if (!Number.isFinite(duration) || duration < 0)\n      {\n         throw new TypeError(`AnimationAPI.quickTo error: 'duration' is not a positive number.`);\n      }\n\n      if (typeof ease !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.quickTo error: 'ease' is not a function.`);\n      }\n\n      if (typeof interpolate !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.quickTo error: 'interpolate' is not a function.`);\n      }\n\n      const initial = {};\n      const destination = {};\n\n      const data = this.#data;\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key of keys)\n      {\n         if (typeof key !== 'string')\n         {\n            throw new TypeError(`AnimationAPI.quickTo error: key is not a string.`);\n         }\n\n         if (!animateKeys.has(key))\n         {\n            throw new Error(`AnimationAPI.quickTo error: key ('${key}') is not animatable.`);\n         }\n\n         if (data[key] !== void 0)\n         {\n            destination[key] = data[key];\n            initial[key] = data[key];\n         }\n      }\n\n      const keysArray = [...keys];\n\n      Object.freeze(keysArray);\n\n      const newData = Object.assign({ immediateElementUpdate: true }, initial);\n\n      const animationData = {\n         active: true,\n         cleanup: this.#cleanup,\n         cancelled: false,\n         control: void 0,\n         current: 0,\n         destination,\n         duration: duration * 1000, // Internally the AnimationManager works in ms.\n         ease,\n         el: void 0,\n         finished: true, // Note: start in finished state to add to AnimationManager on first callback.\n         initial,\n         interpolate,\n         keys,\n         newData,\n         position: this.#position,\n         resolve: void 0,\n         start: void 0\n      };\n\n      const quickToCB = (...args) =>\n      {\n         const argsLength = args.length;\n\n         if (argsLength === 0) { return; }\n\n         for (let cntr = keysArray.length; --cntr >= 0;)\n         {\n            const key = keysArray[cntr];\n            if (data[key] !== void 0) { initial[key] = data[key]; }\n         }\n\n         // Handle case where the first arg is an object. Update all quickTo keys from data contained in the object.\n         if (isObject(args[0]))\n         {\n            const objData = args[0];\n\n            for (const key in objData)\n            {\n               if (destination[key] !== void 0) { destination[key] = objData[key]; }\n            }\n         }\n         else // Assign each variable argument to the key specified in the initial `keys` array above.\n         {\n            for (let cntr = 0; cntr < argsLength && cntr < keysArray.length; cntr++)\n            {\n               const key = keysArray[cntr];\n               if (destination[key] !== void 0) { destination[key] = args[cntr]; }\n            }\n         }\n\n         convertRelative(destination, data);\n\n         // Set initial data for transform values that are often null by default.\n         setNumericDefaults(initial);\n         setNumericDefaults(destination);\n\n         // Set target element to animation data to track if it is removed from the DOM hence ending the animation.\n         const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n         animationData.el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\n\n         // Reschedule the quickTo animation with AnimationManager as it is finished.\n         if (animationData.finished)\n         {\n            animationData.finished = false;\n            animationData.active = true;\n            animationData.current = 0;\n\n            this.#instanceCount++;\n            AnimationManager.add(animationData);\n         }\n         else // QuickTo animation is currently scheduled w/ AnimationManager so reset start and current time.\n         {\n            const now = performance.now();\n\n            // Offset start time by delta between last rAF time. This allows a delayed tween to start from the\n            // precise delayed time.\n            animationData.start = now + (AnimationManager.current - now);\n            animationData.current = 0;\n         }\n      };\n\n      quickToCB.keys = keysArray;\n\n      /**\n       * Sets options of quickTo tween.\n       *\n       * @param {object}            [opts] - Optional parameters.\n       *\n       * @param {number}            [opts.duration] - Duration in seconds.\n       *\n       * @param {Function}          [opts.ease] - Easing function.\n       *\n       * @param {Function}          [opts.interpolate] - Interpolation function.\n       *\n       * @returns {quickToCallback} The quickTo callback.\n       */\n      quickToCB.options = ({ duration, ease, interpolate } = {}) => // eslint-disable-line no-shadow\n      {\n         if (duration !== void 0 && (!Number.isFinite(duration) || duration < 0))\n         {\n            throw new TypeError(`AnimationAPI.quickTo.options error: 'duration' is not a positive number.`);\n         }\n\n         if (ease !== void 0 && typeof ease !== 'function')\n         {\n            throw new TypeError(`AnimationAPI.quickTo.options error: 'ease' is not a function.`);\n         }\n\n         if (interpolate !== void 0 && typeof interpolate !== 'function')\n         {\n            throw new TypeError(`AnimationAPI.quickTo.options error: 'interpolate' is not a function.`);\n         }\n\n         if (duration >= 0) { animationData.duration = duration * 1000; }\n         if (ease) { animationData.ease = ease; }\n         if (interpolate) { animationData.interpolate = interpolate; }\n\n         return quickToCB;\n      };\n\n      return quickToCB;\n   }\n}\n\n/**\n * @callback quickToCallback\n *\n * @param {...number|object} args - Either individual numbers corresponding to the order in which keys are specified or\n *                                  a single object with keys specified and numerical values.\n *\n * @property {({duration?: number, ease?: Function, interpolate?: Function}) => quickToCallback} options - A function\n *                                  to update options for quickTo function.\n */\n","/**\n * Provides a basic {@link TJSBasicAnimation} implementation for a Position animation for a group of Position instances.\n */\nexport class AnimationGroupControl\n{\n   /** @type {AnimationControl[]} */\n   #animationControls;\n\n   /** @type {Promise<Awaited<unknown>[]>} */\n   #finishedPromise;\n\n   /**\n    * Defines a static empty / void animation control.\n    *\n    * @type {AnimationGroupControl}\n    */\n   static #voidControl = new AnimationGroupControl(null);\n\n   /**\n    * Provides a static void / undefined AnimationGroupControl that is automatically resolved.\n    *\n    * @returns {AnimationGroupControl} Void AnimationGroupControl\n    */\n   static get voidControl() { return this.#voidControl; }\n\n   /**\n    * @param {AnimationControl[]} animationControls - An array of AnimationControl instances.\n    */\n   constructor(animationControls)\n   {\n      this.#animationControls = animationControls;\n   }\n\n   /**\n    * Get a promise that resolves when all animations are finished.\n    *\n    * @returns {Promise<Awaited<unknown>[]>|Promise<void>} Finished Promise for all animations.\n    */\n   get finished()\n   {\n      const animationControls = this.#animationControls;\n\n      if (animationControls === null || animationControls === void 0) { return Promise.resolve(); }\n\n      if (!(this.#finishedPromise instanceof Promise))\n      {\n         const promises = [];\n         for (let cntr = animationControls.length; --cntr >= 0;)\n         {\n            promises.push(animationControls[cntr].finished);\n         }\n\n         this.#finishedPromise = Promise.all(promises);\n      }\n\n      return this.#finishedPromise;\n   }\n\n   /**\n    * Returns whether there are active animation instances for this group.\n    *\n    * Note: a delayed animation may not be started / active yet. Use {@link AnimationGroupControl.isFinished} to\n    * determine if all animations in the group are finished.\n    *\n    * @returns {boolean} Are there active animation instances.\n    */\n   get isActive()\n   {\n      const animationControls = this.#animationControls;\n\n      if (animationControls === null || animationControls === void 0) { return false; }\n\n      for (let cntr = animationControls.length; --cntr >= 0;)\n      {\n         if (animationControls[cntr].isActive) { return true; }\n      }\n\n      return false;\n   }\n\n   /**\n    * Returns whether all animations in the group are finished.\n    *\n    * @returns {boolean} Are all animation instances finished.\n    */\n   get isFinished()\n   {\n      const animationControls = this.#animationControls;\n\n      if (animationControls === null || animationControls === void 0) { return true; }\n\n      for (let cntr = animationControls.length; --cntr >= 0;)\n      {\n         if (!animationControls[cntr].isFinished) { return false; }\n      }\n\n      return false;\n   }\n\n   /**\n    * Cancels the all animations.\n    */\n   cancel()\n   {\n      const animationControls = this.#animationControls;\n\n      if (animationControls === null || animationControls === void 0) { return; }\n\n      for (let cntr = this.#animationControls.length; --cntr >= 0;)\n      {\n         this.#animationControls[cntr].cancel();\n      }\n   }\n}\n","import {\n   isIterable,\n   isObject }                    from '@typhonjs-fvtt/runtime/svelte/util';\n\nimport { AnimationManager }      from './AnimationManager.js';\nimport { AnimationAPI }          from './AnimationAPI.js';\nimport { AnimationGroupControl } from './AnimationGroupControl.js';\n\n/**\n * Provides a public API for grouping multiple {@link Position} animations together with the AnimationManager.\n *\n * Note: To remove cyclic dependencies as this class provides the Position static / group Animation API `instanceof`\n * checks are not done against Position. Instead, a check for the animate property being an instanceof\n * {@link AnimationAPI} is performed in {@link AnimationGroupAPI.#isPosition}.\n *\n * @see AnimationAPI\n */\nexport class AnimationGroupAPI\n{\n   /**\n    * Checks of the given object is a Position instance by checking for AnimationAPI.\n    *\n    * @param {*}  object - Any data.\n    *\n    * @returns {boolean} Is Position.\n    */\n   static #isPosition(object)\n   {\n      return object !== null && typeof object === 'object' && object.animate instanceof AnimationAPI;\n   }\n\n   /**\n    * Cancels any animation for given Position data.\n    *\n    * @param {Position|{position: Position}|Iterable<Position>|Iterable<{position: Position}>} position -\n    */\n   static cancel(position)\n   {\n      if (isIterable(position))\n      {\n         let index = -1;\n\n         for (const entry of position)\n         {\n            index++;\n\n            const actualPosition = this.#isPosition(entry) ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.cancel warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            AnimationManager.cancel(actualPosition);\n         }\n      }\n      else\n      {\n         const actualPosition = this.#isPosition(position) ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.cancel warning: No Position instance found.`);\n            return;\n         }\n\n         AnimationManager.cancel(actualPosition);\n      }\n   }\n\n   /**\n    * Cancels all Position animation.\n    */\n   static cancelAll() { AnimationManager.cancelAll(); }\n\n   /**\n    * Gets all animation controls for the given position data.\n    *\n    * @param {Position|{position: Position}|Iterable<Position>|Iterable<{position: Position}>} position -\n    *\n    * @returns {{position: Position, data: object|void, controls: AnimationControl[]}[]} Results array.\n    */\n   static getScheduled(position)\n   {\n      const results = [];\n\n      if (isIterable(position))\n      {\n         let index = -1;\n\n         for (const entry of position)\n         {\n            index++;\n\n            const isPosition = this.#isPosition(entry);\n            const actualPosition = isPosition ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.getScheduled warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            const controls = AnimationManager.getScheduled(actualPosition);\n\n            results.push({ position: actualPosition, data: isPosition ? void 0 : entry, controls });\n         }\n      }\n      else\n      {\n         const isPosition = this.#isPosition(position);\n         const actualPosition = isPosition ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.getScheduled warning: No Position instance found.`);\n            return results;\n         }\n\n         const controls = AnimationManager.getScheduled(actualPosition);\n\n         results.push({ position: actualPosition, data: isPosition ? void 0 : position, controls });\n      }\n\n      return results;\n   }\n\n   /**\n    * Provides the `from` animation tween for one or more Position instances as a group.\n    *\n    * @param {Position|{position: Position}|Iterable<Position>|Iterable<{position: Position}>} position -\n    *\n    * @param {object|Function}   fromData -\n    *\n    * @param {object|Function}   options -\n    *\n    * @returns {TJSBasicAnimation} Basic animation control.\n    */\n   static from(position, fromData, options)\n   {\n      if (!isObject(fromData) && typeof fromData !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.from error: 'fromData' is not an object or function.`);\n      }\n\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.from error: 'options' is not an object or function.`);\n      }\n\n      /**\n       * @type {AnimationControl[]}\n       */\n      const animationControls = [];\n\n      let index = -1;\n      let callbackOptions;\n\n      const hasDataCallback = typeof fromData === 'function';\n      const hasOptionCallback = typeof options === 'function';\n      const hasCallback = hasDataCallback || hasOptionCallback;\n\n      if (hasCallback) { callbackOptions = { index, position: void 0, data: void 0 }; }\n\n      let actualFromData = fromData;\n      let actualOptions = options;\n\n      if (isIterable(position))\n      {\n         for (const entry of position)\n         {\n            index++;\n\n            const isPosition = this.#isPosition(entry);\n            const actualPosition = isPosition ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.from warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            if (hasCallback)\n            {\n               callbackOptions.index = index;\n               callbackOptions.position = position;\n               callbackOptions.data = isPosition ? void 0 : entry;\n            }\n\n            if (hasDataCallback)\n            {\n               actualFromData = fromData(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualFromData === null || actualFromData === void 0) { continue; }\n\n               if (typeof actualFromData !== 'object')\n               {\n                  throw new TypeError(`AnimationGroupAPI.from error: fromData callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            if (hasOptionCallback)\n            {\n               actualOptions = options(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualOptions === null || actualOptions === void 0) { continue; }\n\n               if (typeof actualOptions !== 'object')\n               {\n                  throw new TypeError(`AnimationGroupAPI.from error: options callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            animationControls.push(actualPosition.animate.from(actualFromData, actualOptions));\n         }\n      }\n      else\n      {\n         const isPosition = this.#isPosition(position);\n         const actualPosition = isPosition ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.from warning: No Position instance found.`);\n            return AnimationGroupControl.voidControl;\n         }\n\n         if (hasCallback)\n         {\n            callbackOptions.index = 0;\n            callbackOptions.position = position;\n            callbackOptions.data = isPosition ? void 0 : position;\n         }\n\n         if (hasDataCallback)\n         {\n            actualFromData = fromData(callbackOptions);\n\n            if (typeof actualFromData !== 'object')\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.from error: fromData callback function failed to return an object.`);\n            }\n         }\n\n         if (hasOptionCallback)\n         {\n            actualOptions = options(callbackOptions);\n\n            if (typeof actualOptions !== 'object')\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.from error: options callback function failed to return an object.`);\n            }\n         }\n\n         animationControls.push(actualPosition.animate.from(actualFromData, actualOptions));\n      }\n\n      return new AnimationGroupControl(animationControls);\n   }\n\n   /**\n    * Provides the `fromTo` animation tween for one or more Position instances as a group.\n    *\n    * @param {Position|{position: Position}|Iterable<Position>|Iterable<{position: Position}>} position -\n    *\n    * @param {object|Function}   fromData -\n    *\n    * @param {object|Function}   toData -\n    *\n    * @param {object|Function}   options -\n    *\n    * @returns {TJSBasicAnimation} Basic animation control.\n    */\n   static fromTo(position, fromData, toData, options)\n   {\n      if (!isObject(fromData) && typeof fromData !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.fromTo error: 'fromData' is not an object or function.`);\n      }\n\n      if (!isObject(toData) && typeof toData !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.fromTo error: 'toData' is not an object or function.`);\n      }\n\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.fromTo error: 'options' is not an object or function.`);\n      }\n\n      /**\n       * @type {AnimationControl[]}\n       */\n      const animationControls = [];\n\n      let index = -1;\n      let callbackOptions;\n\n      const hasFromCallback = typeof fromData === 'function';\n      const hasToCallback = typeof toData === 'function';\n      const hasOptionCallback = typeof options === 'function';\n      const hasCallback = hasFromCallback || hasToCallback || hasOptionCallback;\n\n      if (hasCallback) { callbackOptions = { index, position: void 0, data: void 0 }; }\n\n      let actualFromData = fromData;\n      let actualToData = toData;\n      let actualOptions = options;\n\n      if (isIterable(position))\n      {\n         for (const entry of position)\n         {\n            index++;\n\n            const isPosition = this.#isPosition(entry);\n            const actualPosition = isPosition ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.fromTo warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            if (hasCallback)\n            {\n               callbackOptions.index = index;\n               callbackOptions.position = position;\n               callbackOptions.data = isPosition ? void 0 : entry;\n            }\n\n            if (hasFromCallback)\n            {\n               actualFromData = fromData(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualFromData === null || actualFromData === void 0) { continue; }\n\n               if (typeof actualFromData !== 'object')\n               {\n                  throw new TypeError(`AnimationGroupAPI.fromTo error: fromData callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            if (hasToCallback)\n            {\n               actualToData = toData(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualToData === null || actualToData === void 0) { continue; }\n\n               if (typeof actualToData !== 'object')\n               {\n                  throw new TypeError(`AnimationGroupAPI.fromTo error: toData callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            if (hasOptionCallback)\n            {\n               actualOptions = options(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualOptions === null || actualOptions === void 0) { continue; }\n\n               if (typeof actualOptions !== 'object')\n               {\n                  throw new TypeError(`AnimationGroupAPI.fromTo error: options callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            animationControls.push(actualPosition.animate.fromTo(actualFromData, actualToData, actualOptions));\n         }\n      }\n      else\n      {\n         const isPosition = this.#isPosition(position);\n         const actualPosition = isPosition ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.fromTo warning: No Position instance found.`);\n            return AnimationGroupControl.voidControl;\n         }\n\n         if (hasCallback)\n         {\n            callbackOptions.index = 0;\n            callbackOptions.position = position;\n            callbackOptions.data = isPosition ? void 0 : position;\n         }\n\n         if (hasFromCallback)\n         {\n            actualFromData = fromData(callbackOptions);\n\n            if (typeof actualFromData !== 'object')\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.fromTo error: fromData callback function failed to return an object.`);\n            }\n         }\n\n         if (hasToCallback)\n         {\n            actualToData = toData(callbackOptions);\n\n            if (typeof actualToData !== 'object')\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.fromTo error: toData callback function failed to return an object.`);\n            }\n         }\n\n         if (hasOptionCallback)\n         {\n            actualOptions = options(callbackOptions);\n\n            if (typeof actualOptions !== 'object')\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.fromTo error: options callback function failed to return an object.`);\n            }\n         }\n\n         animationControls.push(actualPosition.animate.fromTo(actualFromData, actualToData, actualOptions));\n      }\n\n      return new AnimationGroupControl(animationControls);\n   }\n\n   /**\n    * Provides the `to` animation tween for one or more Position instances as a group.\n    *\n    * @param {Position|{position: Position}|Iterable<Position>|Iterable<{position: Position}>} position -\n    *\n    * @param {object|Function}   toData -\n    *\n    * @param {object|Function}   options -\n    *\n    * @returns {TJSBasicAnimation} Basic animation control.\n    */\n   static to(position, toData, options)\n   {\n      if (!isObject(toData) && typeof toData !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.to error: 'toData' is not an object or function.`);\n      }\n\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.to error: 'options' is not an object or function.`);\n      }\n\n      /**\n       * @type {AnimationControl[]}\n       */\n      const animationControls = [];\n\n      let index = -1;\n      let callbackOptions;\n\n      const hasDataCallback = typeof toData === 'function';\n      const hasOptionCallback = typeof options === 'function';\n      const hasCallback = hasDataCallback || hasOptionCallback;\n\n      if (hasCallback) { callbackOptions = { index, position: void 0, data: void 0 }; }\n\n      let actualToData = toData;\n      let actualOptions = options;\n\n      if (isIterable(position))\n      {\n         for (const entry of position)\n         {\n            index++;\n\n            const isPosition = this.#isPosition(entry);\n            const actualPosition = isPosition ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.to warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            if (hasCallback)\n            {\n               callbackOptions.index = index;\n               callbackOptions.position = position;\n               callbackOptions.data = isPosition ? void 0 : entry;\n            }\n\n            if (hasDataCallback)\n            {\n               actualToData = toData(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualToData === null || actualToData === void 0) { continue; }\n\n               if (typeof actualToData !== 'object')\n               {\n                  throw new TypeError(`AnimationGroupAPI.to error: toData callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            if (hasOptionCallback)\n            {\n               actualOptions = options(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualOptions === null || actualOptions === void 0) { continue; }\n\n               if (typeof actualOptions !== 'object')\n               {\n                  throw new TypeError(`AnimationGroupAPI.to error: options callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            animationControls.push(actualPosition.animate.to(actualToData, actualOptions));\n         }\n      }\n      else\n      {\n         const isPosition = this.#isPosition(position);\n         const actualPosition = isPosition ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.to warning: No Position instance found.`);\n            return AnimationGroupControl.voidControl;\n         }\n\n         if (hasCallback)\n         {\n            callbackOptions.index = 0;\n            callbackOptions.position = position;\n            callbackOptions.data = isPosition ? void 0 : position;\n         }\n\n         if (hasDataCallback)\n         {\n            actualToData = toData(callbackOptions);\n\n            if (typeof actualToData !== 'object')\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.to error: toData callback function failed to return an object.`);\n            }\n         }\n\n         if (hasOptionCallback)\n         {\n            actualOptions = options(callbackOptions);\n\n            if (typeof actualOptions !== 'object')\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.to error: options callback function failed to return an object.`);\n            }\n         }\n\n         animationControls.push(actualPosition.animate.to(actualToData, actualOptions));\n      }\n\n      return new AnimationGroupControl(animationControls);\n   }\n\n   /**\n    * Provides the `to` animation tween for one or more Position instances as a group.\n    *\n    * @param {Position|{position: Position}|Iterable<Position>|Iterable<{position: Position}>} position -\n    *\n    * @param {Iterable<string>}  keys -\n    *\n    * @param {object|Function}   options -\n    *\n    * @returns {quickToCallback} Basic animation control.\n    */\n   static quickTo(position, keys, options)\n   {\n      if (!isIterable(keys))\n      {\n         throw new TypeError(`AnimationGroupAPI.quickTo error: 'keys' is not an iterable list.`);\n      }\n\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.quickTo error: 'options' is not an object or function.`);\n      }\n\n      /**\n       * @type {quickToCallback[]}\n       */\n      const quickToCallbacks = [];\n\n      let index = -1;\n\n      const hasOptionCallback = typeof options === 'function';\n\n      const callbackOptions = { index, position: void 0, data: void 0 };\n\n      let actualOptions = options;\n\n      if (isIterable(position))\n      {\n         for (const entry of position)\n         {\n            index++;\n\n            const isPosition = this.#isPosition(entry);\n            const actualPosition = isPosition ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.quickTo warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            callbackOptions.index = index;\n            callbackOptions.position = position;\n            callbackOptions.data = isPosition ? void 0 : entry;\n\n            if (hasOptionCallback)\n            {\n               actualOptions = options(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualOptions === null || actualOptions === void 0) { continue; }\n\n               if (typeof actualOptions !== 'object')\n               {\n                  throw new TypeError(`AnimationGroupAPI.quickTo error: options callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            quickToCallbacks.push(actualPosition.animate.quickTo(keys, actualOptions));\n         }\n      }\n      else\n      {\n         const isPosition = this.#isPosition(position);\n         const actualPosition = isPosition ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.quickTo warning: No Position instance found.`);\n            return () => null;\n         }\n\n         callbackOptions.index = 0;\n         callbackOptions.position = position;\n         callbackOptions.data = isPosition ? void 0 : position;\n\n         if (hasOptionCallback)\n         {\n            actualOptions = options(callbackOptions);\n\n            if (typeof actualOptions !== 'object')\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.quickTo error: options callback function failed to return an object.`);\n            }\n         }\n\n         quickToCallbacks.push(actualPosition.animate.quickTo(keys, actualOptions));\n      }\n\n      const keysArray = [...keys];\n\n      Object.freeze(keysArray);\n\n      const quickToCB = (...args) =>\n      {\n         const argsLength = args.length;\n\n         if (argsLength === 0) { return; }\n\n         if (typeof args[0] === 'function')\n         {\n            const dataCallback = args[0];\n\n            index = -1;\n            let cntr = 0;\n\n            if (isIterable(position))\n            {\n               for (const entry of position)\n               {\n                  index++;\n\n                  const isPosition = this.#isPosition(entry);\n                  const actualPosition = isPosition ? entry : entry.position;\n\n                  if (!this.#isPosition(actualPosition)) { continue; }\n\n                  callbackOptions.index = index;\n                  callbackOptions.position = position;\n                  callbackOptions.data = isPosition ? void 0 : entry;\n\n                  const toData = dataCallback(callbackOptions);\n\n                  // Returned data from callback is null / undefined, so skip this position instance.\n                  if (toData === null || toData === void 0) { continue; }\n\n                  /**\n                   * @type {boolean}\n                   */\n                  const toDataIterable = isIterable(toData);\n\n                  if (!Number.isFinite(toData) && !toDataIterable && typeof toData !== 'object')\n                  {\n                     throw new TypeError(`AnimationGroupAPI.quickTo error: toData callback function iteration(${\n                      index}) failed to return a finite number, iterable list, or object.`);\n                  }\n\n                  if (toDataIterable)\n                  {\n                     quickToCallbacks[cntr++](...toData);\n                  }\n                  else\n                  {\n                     quickToCallbacks[cntr++](toData);\n                  }\n               }\n            }\n            else\n            {\n               const isPosition = this.#isPosition(position);\n               const actualPosition = isPosition ? position : position.position;\n\n               if (!this.#isPosition(actualPosition)) { return; }\n\n               callbackOptions.index = 0;\n               callbackOptions.position = position;\n               callbackOptions.data = isPosition ? void 0 : position;\n\n               const toData = dataCallback(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (toData === null || toData === void 0) { return; }\n\n               const toDataIterable = isIterable(toData);\n\n               if (!Number.isFinite(toData) && !toDataIterable && typeof toData !== 'object')\n               {\n                  throw new TypeError(`AnimationGroupAPI.quickTo error: toData callback function iteration(${\n                   index}) failed to return a finite number, iterable list, or object.`);\n               }\n\n               if (toDataIterable)\n               {\n                  quickToCallbacks[cntr++](...toData);\n               }\n               else\n               {\n                  quickToCallbacks[cntr++](toData);\n               }\n            }\n         }\n         else\n         {\n            for (let cntr = quickToCallbacks.length; --cntr >= 0;)\n            {\n               quickToCallbacks[cntr](...args);\n            }\n         }\n      };\n\n      quickToCB.keys = keysArray;\n\n      /**\n       * Sets options of quickTo tween.\n       *\n       * @param {object|Function}   [options] - Optional parameters.\n       *\n       * @param {number}            [options.duration] - Duration in seconds.\n       *\n       * @param {Function}          [options.ease] - Easing function.\n       *\n       * @param {Function}          [options.interpolate] - Interpolation function.\n       *\n       * @returns {quickToCallback} The quickTo callback.\n       */\n      quickToCB.options = (options) => // eslint-disable-line no-shadow\n      {\n         if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n         {\n            throw new TypeError(`AnimationGroupAPI.quickTo error: 'options' is not an object or function.`);\n         }\n\n         // Set options object for each quickTo callback.\n         if (isObject(options))\n         {\n            for (let cntr = quickToCallbacks.length; --cntr >= 0;) { quickToCallbacks[cntr].options(options); }\n         }\n         else if (typeof options === 'function')\n         {\n            if (isIterable(position))\n            {\n               index = -1;\n               let cntr = 0;\n\n               for (const entry of position)\n               {\n                  index++;\n\n                  const isPosition = this.#isPosition(entry);\n                  const actualPosition = isPosition ? entry : entry.position;\n\n                  if (!this.#isPosition(actualPosition))\n                  {\n                     console.warn(\n                      `AnimationGroupAPI.quickTo.options warning: No Position instance found at index: ${index}.`);\n                     continue;\n                  }\n\n                  callbackOptions.index = index;\n                  callbackOptions.position = position;\n                  callbackOptions.data = isPosition ? void 0 : entry;\n\n                  actualOptions = options(callbackOptions);\n\n                  // Returned data from callback is null / undefined, so skip this position instance.\n                  if (actualOptions === null || actualOptions === void 0) { continue; }\n\n                  if (typeof actualOptions !== 'object')\n                  {\n                     throw new TypeError(\n                      `AnimationGroupAPI.quickTo.options error: options callback function iteration(${\n                       index}) failed to return an object.`);\n                  }\n\n                  quickToCallbacks[cntr++].options(actualOptions);\n               }\n            }\n            else\n            {\n               const isPosition = this.#isPosition(position);\n               const actualPosition = isPosition ? position : position.position;\n\n               if (!this.#isPosition(actualPosition))\n               {\n                  console.warn(`AnimationGroupAPI.quickTo.options warning: No Position instance found.`);\n                  return quickToCB;\n               }\n\n               callbackOptions.index = 0;\n               callbackOptions.position = position;\n               callbackOptions.data = isPosition ? void 0 : position;\n\n               actualOptions = options(callbackOptions);\n\n               if (typeof actualOptions !== 'object')\n               {\n                  throw new TypeError(\n                   `AnimationGroupAPI.quickTo error: options callback function failed to return an object.`);\n               }\n\n               quickToCallbacks[0].options(actualOptions);\n            }\n         }\n\n         return quickToCB;\n      };\n\n      return quickToCB;\n   }\n}\n","export class Centered\n{\n   /**\n    * @type {HTMLElement}\n    */\n   #element;\n\n   /**\n    * Provides a manual setting of the element height. As things go `offsetHeight` causes a browser layout and is not\n    * performance oriented. If manually set this height is used instead of `offsetHeight`.\n    *\n    * @type {number}\n    */\n   #height;\n\n   /**\n    * Set from an optional value in the constructor to lock accessors preventing modification.\n    */\n   #lock;\n\n   /**\n    * Provides a manual setting of the element width. As things go `offsetWidth` causes a browser layout and is not\n    * performance oriented. If manually set this width is used instead of `offsetWidth`.\n    *\n    * @type {number}\n    */\n   #width;\n\n   constructor({ element, lock = false, width, height } = {})\n   {\n      this.element = element;\n      this.width = width;\n      this.height = height;\n\n      this.#lock = typeof lock === 'boolean' ? lock : false;\n   }\n\n   get element() { return this.#element; }\n\n   get height() { return this.#height; }\n\n   get width() { return this.#width; }\n\n   set element(element)\n   {\n      if (this.#lock) { return; }\n\n      if (element === void 0  || element === null || element instanceof HTMLElement)\n      {\n         this.#element = element;\n      }\n      else\n      {\n         throw new TypeError(`'element' is not a HTMLElement, undefined, or null.`);\n      }\n   }\n\n   set height(height)\n   {\n      if (this.#lock) { return; }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   set width(width)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n   }\n\n   setDimension(width, height)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   getLeft(width)\n   {\n      // Determine containing bounds from manual values; or any element; lastly the browser width / height.\n      const boundsWidth = this.#width ?? this.#element?.offsetWidth ?? globalThis.innerWidth;\n\n      return (boundsWidth - width) / 2;\n   }\n\n   getTop(height)\n   {\n      const boundsHeight = this.#height ?? this.#element?.offsetHeight ?? globalThis.innerHeight;\n\n      return (boundsHeight - height) / 2;\n   }\n}\n","import { Centered } from './Centered.js';\n\nconst browserCentered = new Centered();\n\nexport { browserCentered, Centered };\n\n","export class PositionChangeSet\n{\n   constructor()\n   {\n      this.left = false;\n      this.top = false;\n      this.width = false;\n      this.height = false;\n      this.maxHeight = false;\n      this.maxWidth = false;\n      this.minHeight = false;\n      this.minWidth = false;\n      this.zIndex = false;\n      this.transform = false;\n      this.transformOrigin = false;\n   }\n\n   hasChange()\n   {\n      return this.left || this.top || this.width || this.height || this.maxHeight || this.maxWidth || this.minHeight ||\n       this.minWidth || this.zIndex || this.transform || this.transformOrigin;\n   }\n\n   set(value)\n   {\n      this.left = value;\n      this.top = value;\n      this.width = value;\n      this.height = value;\n      this.maxHeight = value;\n      this.maxWidth = value;\n      this.minHeight = value;\n      this.minWidth = value;\n      this.zIndex = value;\n      this.transform = value;\n      this.transformOrigin = value;\n   }\n}\n","/**\n * Defines stored positional data.\n */\nexport class PositionData\n{\n   constructor({ height = null, left = null, maxHeight = null, maxWidth = null, minHeight = null, minWidth = null,\n    rotateX = null, rotateY = null, rotateZ = null, scale = null, translateX = null, translateY = null,\n     translateZ = null, top = null, transformOrigin = null, width = null, zIndex = null } = {})\n   {\n      /**\n       * @type {number|'auto'|'inherit'|null}\n       */\n      this.height = height;\n\n      /**\n       * @type {number|null}\n       */\n      this.left = left;\n\n      /**\n       * @type {number|null}\n       */\n      this.maxHeight = maxHeight;\n\n      /**\n       * @type {number|null}\n       */\n      this.maxWidth = maxWidth;\n\n      /**\n       * @type {number|null}\n       */\n      this.minHeight = minHeight;\n\n      /**\n       * @type {number|null}\n       */\n      this.minWidth = minWidth;\n\n      /**\n       * @type {number|null}\n       */\n      this.rotateX = rotateX;\n\n      /**\n       * @type {number|null}\n       */\n      this.rotateY = rotateY;\n\n      /**\n       * @type {number|null}\n       */\n      this.rotateZ = rotateZ;\n\n      /**\n       * @type {number|null}\n       */\n      this.scale = scale;\n\n      /**\n       * @type {number|null}\n       */\n      this.top = top;\n\n      /**\n       * @type {string|null}\n       */\n      this.transformOrigin = transformOrigin;\n\n      /**\n       * @type {number|null}\n       */\n      this.translateX = translateX;\n\n      /**\n       * @type {number|null}\n       */\n      this.translateY = translateY;\n\n      /**\n       * @type {number|null}\n       */\n      this.translateZ = translateZ;\n\n      /**\n       * @type {number|'auto'|'inherit'|null}\n       */\n      this.width = width;\n\n      /**\n       * @type {number|null}\n       */\n      this.zIndex = zIndex;\n\n      Object.seal(this);\n   }\n\n   /**\n    * Copies given data to this instance.\n    *\n    * @param {PositionData}   data - Copy from this instance.\n    *\n    * @returns {PositionData} This instance.\n    */\n   copy(data)\n   {\n      this.height = data.height;\n      this.left = data.left;\n      this.maxHeight = data.maxHeight;\n      this.maxWidth = data.maxWidth;\n      this.minHeight = data.minHeight;\n      this.minWidth = data.minWidth;\n      this.rotateX = data.rotateX;\n      this.rotateY = data.rotateY;\n      this.rotateZ = data.rotateZ;\n      this.scale = data.scale;\n      this.top = data.top;\n      this.transformOrigin = data.transformOrigin;\n      this.translateX = data.translateX;\n      this.translateY = data.translateY;\n      this.translateZ = data.translateZ;\n      this.width = data.width;\n      this.zIndex = data.zIndex;\n\n      return this;\n   }\n}\n","import { linear }       from 'svelte/easing';\n\nimport { lerp }         from '@typhonjs-fvtt/runtime/svelte/math';\nimport { isIterable }   from '@typhonjs-fvtt/runtime/svelte/util';\n\nexport class PositionStateAPI\n{\n   /** @type {PositionData} */\n   #data;\n\n   /**\n    * @type {Map<string, PositionDataExtended>}\n    */\n   #dataSaved = new Map();\n\n   /** @type {Position} */\n   #position;\n\n   /** @type {Transforms} */\n   #transforms;\n\n   constructor(position, data, transforms)\n   {\n      this.#position = position;\n      this.#data = data;\n      this.#transforms = transforms;\n   }\n\n   /**\n    * Returns any stored save state by name.\n    *\n    * @param {string}   name - Saved data set name.\n    *\n    * @returns {PositionDataExtended} The saved data set.\n    */\n   get({ name })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - getSave error: 'name' is not a string.`); }\n\n      return this.#dataSaved.get(name);\n   }\n\n   /**\n    * Returns any associated default data.\n    *\n    * @returns {PositionDataExtended} Associated default data.\n    */\n   getDefault()\n   {\n      return this.#dataSaved.get('#defaultData');\n   }\n\n   /**\n    * Removes and returns any position state by name.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Name to remove and retrieve.\n    *\n    * @returns {PositionDataExtended} Saved position data.\n    */\n   remove({ name })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - remove: 'name' is not a string.`); }\n\n      const data = this.#dataSaved.get(name);\n      this.#dataSaved.delete(name);\n\n      return data;\n   }\n\n   /**\n    * Resets data to default values and invokes set.\n    *\n    * @param {object}   [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.keepZIndex=false] - When true keeps current z-index.\n    *\n    * @param {boolean}  [opts.invokeSet=true] - When true invokes set method.\n    *\n    * @returns {boolean} Operation successful.\n    */\n   reset({ keepZIndex = false, invokeSet = true } = {})\n   {\n      const defaultData = this.#dataSaved.get('#defaultData');\n\n      // Quit early if there is no saved default data.\n      if (typeof defaultData !== 'object') { return false; }\n\n      // Cancel all animations for Position if there are currently any scheduled.\n      if (this.#position.animate.isScheduled)\n      {\n         this.#position.animate.cancel();\n      }\n\n      const zIndex = this.#position.zIndex;\n\n      const data = Object.assign({}, defaultData);\n\n      if (keepZIndex) { data.zIndex = zIndex; }\n\n      // Reset the transform data.\n      this.#transforms.reset(data);\n\n      // If current minimized invoke `maximize`.\n      if (this.#position.parent?.reactive?.minimized)\n      {\n         this.#position.parent?.maximize?.({ animate: false, duration: 0 });\n      }\n\n      // Note next clock tick scheduling.\n      if (invokeSet) { setTimeout(() => this.#position.set(data), 0); }\n\n      return true;\n   }\n\n   /**\n    * Restores a saved positional state returning the data. Several optional parameters are available\n    * to control whether the restore action occurs silently (no store / inline styles updates), animates\n    * to the stored data, or simply sets the stored data. Restoring via {@link AnimationAPI.to} allows\n    * specification of the duration, easing, and interpolate functions along with configuring a Promise to be\n    * returned if awaiting the end of the animation.\n    *\n    * @param {object}            params - Parameters\n    *\n    * @param {string}            params.name - Saved data set name.\n    *\n    * @param {boolean}           [params.remove=false] - Remove data set.\n    *\n    * @param {Iterable<string>}  [params.properties] - Specific properties to set / animate.\n    *\n    * @param {boolean}           [params.silent] - Set position data directly; no store or style updates.\n    *\n    * @param {boolean}           [params.async=false] - If animating return a Promise that resolves with any saved data.\n    *\n    * @param {boolean}           [params.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}            [params.duration=0.1] - Duration in seconds.\n    *\n    * @param {Function}          [params.ease=linear] - Easing function.\n    *\n    * @param {Function}          [params.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {PositionDataExtended|Promise<PositionDataExtended>} Saved position data.\n    */\n   restore({ name, remove = false, properties, silent = false, async = false, animateTo = false, duration = 0.1,\n    ease = linear, interpolate = lerp })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - restore error: 'name' is not a string.`); }\n\n      const dataSaved = this.#dataSaved.get(name);\n\n      if (dataSaved)\n      {\n         if (remove) { this.#dataSaved.delete(name); }\n\n         let data = dataSaved;\n\n         if (isIterable(properties))\n         {\n            data = {};\n            for (const property of properties) { data[property] = dataSaved[property]; }\n         }\n\n         // Update data directly with no store or inline style updates.\n         if (silent)\n         {\n            for (const property in data) { this.#data[property] = data[property]; }\n            return dataSaved;\n         }\n         else if (animateTo)  // Animate to saved data.\n         {\n            // Provide special handling to potentially change transform origin as this parameter is not animated.\n            if (data.transformOrigin !== this.#position.transformOrigin)\n            {\n               this.#position.transformOrigin = data.transformOrigin;\n            }\n\n            // Return a Promise with saved data that resolves after animation ends.\n            if (async)\n            {\n               return this.#position.animate.to(data, { duration, ease, interpolate }).finished.then(() => dataSaved);\n            }\n            else  // Animate synchronously.\n            {\n               this.#position.animate.to(data, { duration, ease, interpolate });\n            }\n         }\n         else\n         {\n            // Default options is to set data for an immediate update.\n            this.#position.set(data);\n         }\n      }\n\n      return dataSaved;\n   }\n\n   /**\n    * Saves current position state with the opportunity to add extra data to the saved state.\n    *\n    * @param {object}   opts - Options.\n    *\n    * @param {string}   opts.name - name to index this saved data.\n    *\n    * @param {...*}     [opts.extra] - Extra data to add to saved data.\n    *\n    * @returns {PositionData} Current position data\n    */\n   save({ name, ...extra })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - save error: 'name' is not a string.`); }\n\n      const data = this.#position.get(extra);\n\n      this.#dataSaved.set(name, data);\n\n      return data;\n   }\n\n   /**\n    * Directly sets a position state.\n    *\n    * @param {object}   opts - Options.\n    *\n    * @param {string}   opts.name - name to index this saved data.\n    *\n    * @param {...*}     [opts.data] - Position data to set.\n    */\n   set({ name, ...data })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - set error: 'name' is not a string.`); }\n\n      this.#dataSaved.set(name, data);\n   }\n}\n","import { writable }           from 'svelte/store';\n\nimport { propertyStore }      from '@typhonjs-fvtt/runtime/svelte/store';\nimport { styleParsePixels }   from '@typhonjs-fvtt/runtime/svelte/util';\n\nexport class StyleCache\n{\n   constructor()\n   {\n      /** @type {HTMLElement|undefined} */\n      this.el = void 0;\n\n      /** @type {CSSStyleDeclaration} */\n      this.computed = void 0;\n\n      /** @type {number|undefined} */\n      this.marginLeft = void 0;\n\n      /** @type {number|undefined} */\n      this.marginTop = void 0;\n\n      /** @type {number|undefined} */\n      this.maxHeight = void 0;\n\n      /** @type {number|undefined} */\n      this.maxWidth = void 0;\n\n      /** @type {number|undefined} */\n      this.minHeight = void 0;\n\n      /** @type {number|undefined} */\n      this.minWidth = void 0;\n\n      /** @type {boolean} */\n      this.hasWillChange = false;\n\n      /**\n       * @type {ResizeObserverData}\n       */\n      this.resizeObserved = {\n         contentHeight: void 0,\n         contentWidth: void 0,\n         offsetHeight: void 0,\n         offsetWidth: void 0\n      };\n\n      /**\n       * Provides a writable store to track offset & content width / height from an associated `resizeObserver` action.\n       *\n       * @type {Writable<ResizeObserverData>}\n       */\n      const storeResizeObserved = writable(this.resizeObserved);\n\n      this.stores = {\n         element: writable(this.el),\n         resizeContentHeight: propertyStore(storeResizeObserved, 'contentHeight'),\n         resizeContentWidth: propertyStore(storeResizeObserved, 'contentWidth'),\n         resizeObserved: storeResizeObserved,\n         resizeOffsetHeight: propertyStore(storeResizeObserved, 'offsetHeight'),\n         resizeOffsetWidth: propertyStore(storeResizeObserved, 'offsetWidth')\n      };\n   }\n\n   /**\n    * Returns the cached offsetHeight from any attached `resizeObserver` action otherwise gets the offsetHeight from\n    * the element directly. The more optimized path is using `resizeObserver` as getting it from the element\n    * directly is more expensive and alters the execution order of an animation frame.\n    *\n    * @returns {number} The element offsetHeight.\n    */\n   get offsetHeight()\n   {\n      if (this.el instanceof HTMLElement)\n      {\n         return this.resizeObserved.offsetHeight !== void 0 ? this.resizeObserved.offsetHeight : this.el.offsetHeight;\n      }\n\n      throw new Error(`StyleCache - get offsetHeight error: no element assigned.`);\n   }\n\n   /**\n    * Returns the cached offsetWidth from any attached `resizeObserver` action otherwise gets the offsetWidth from\n    * the element directly. The more optimized path is using `resizeObserver` as getting it from the element\n    * directly is more expensive and alters the execution order of an animation frame.\n    *\n    * @returns {number} The element offsetHeight.\n    */\n   get offsetWidth()\n   {\n      if (this.el instanceof HTMLElement)\n      {\n         return this.resizeObserved.offsetWidth !== void 0 ? this.resizeObserved.offsetWidth : this.el.offsetWidth;\n      }\n\n      throw new Error(`StyleCache - get offsetWidth error: no element assigned.`);\n   }\n\n   /**\n    * @param {HTMLElement} el -\n    *\n    * @returns {boolean} Does element match cached element.\n    */\n   hasData(el) { return this.el === el; }\n\n   /**\n    * Resets the style cache.\n    */\n   reset()\n   {\n      // Remove will-change inline style from previous element if it is still connected.\n      if (this.el instanceof HTMLElement && this.el.isConnected && !this.hasWillChange)\n      {\n         this.el.style.willChange = null;\n      }\n\n      this.el = void 0;\n      this.computed = void 0;\n      this.marginLeft = void 0;\n      this.marginTop = void 0;\n      this.maxHeight = void 0;\n      this.maxWidth = void 0;\n      this.minHeight = void 0;\n      this.minWidth = void 0;\n\n      this.hasWillChange = false;\n\n      // Silently reset `resizedObserved`; With proper usage the `resizeObserver` action issues an update on removal.\n      this.resizeObserved.contentHeight = void 0;\n      this.resizeObserved.contentWidth = void 0;\n      this.resizeObserved.offsetHeight = void 0;\n      this.resizeObserved.offsetWidth = void 0;\n\n      // Reset the tracked element this Position instance is modifying.\n      this.stores.element.set(void 0);\n   }\n\n   /**\n    * Updates the style cache with new data from the given element.\n    *\n    * @param {HTMLElement} el - An HTML element.\n    */\n   update(el)\n   {\n      this.el = el;\n\n      this.computed = globalThis.getComputedStyle(el);\n\n      this.marginLeft = styleParsePixels(el.style.marginLeft) ?? styleParsePixels(this.computed.marginLeft);\n      this.marginTop = styleParsePixels(el.style.marginTop) ?? styleParsePixels(this.computed.marginTop);\n      this.maxHeight = styleParsePixels(el.style.maxHeight) ?? styleParsePixels(this.computed.maxHeight);\n      this.maxWidth = styleParsePixels(el.style.maxWidth) ?? styleParsePixels(this.computed.maxWidth);\n\n      // Note that the computed styles for below will always be 0px / 0 when no style is active.\n      this.minHeight = styleParsePixels(el.style.minHeight) ?? styleParsePixels(this.computed.minHeight);\n      this.minWidth = styleParsePixels(el.style.minWidth) ?? styleParsePixels(this.computed.minWidth);\n\n      // Tracks if there already is a will-change property on the inline or computed styles.\n      const willChange = el.style.willChange !== '' ? el.style.willChange : void 0 ?? this.computed.willChange;\n\n      this.hasWillChange = willChange !== '' && willChange !== 'auto';\n\n      // Update the tracked element this Position instance is modifying.\n      this.stores.element.set(el);\n   }\n}\n","import { mat4, vec3 }   from '@typhonjs-fvtt/runtime/svelte/math';\n\n/**\n * Provides the output data for {@link Transforms.getData}.\n */\nexport class TransformData\n{\n   constructor()\n   {\n      Object.seal(this);\n   }\n\n   /**\n    * Stores the calculated bounding rectangle.\n    *\n    * @type {DOMRect}\n    */\n   #boundingRect = new DOMRect();\n\n   /**\n    * Stores the individual transformed corner points of the window in screenspace clockwise from:\n    * top left -> top right -> bottom right -> bottom left.\n    *\n    * @type {Vector3[]}\n    */\n   #corners = [vec3.create(), vec3.create(), vec3.create(), vec3.create()];\n\n   /**\n    * Stores the current gl-matrix mat4 data.\n    *\n    * @type {Matrix4}\n    */\n   #mat4 = mat4.create();\n\n   /**\n    * Stores the pre & post origin translations to apply to matrix transforms.\n    *\n    * @type {Matrix4[]}\n    */\n   #originTranslations = [mat4.create(), mat4.create()];\n\n   /**\n    * @returns {DOMRect} The bounding rectangle.\n    */\n   get boundingRect() { return this.#boundingRect; }\n\n   /**\n    * @returns {Vector3[]} The transformed corner points as vec3 in screen space.\n    */\n   get corners() { return this.#corners; }\n\n   /**\n    * @returns {string} Returns the CSS style string for the transform matrix.\n    */\n   get css() { return `matrix3d(${this.mat4.join(',')})`; }\n\n   /**\n    * @returns {Matrix4} The transform matrix.\n    */\n   get mat4() { return this.#mat4; }\n\n   /**\n    * @returns {Matrix4[]} The pre / post translation matrices for origin translation.\n    */\n   get originTranslations() { return this.#originTranslations; }\n}\n\n/**\n * @typedef {Float32Array} Vector3 - 3 Dimensional Vector.\n *\n * @see https://glmatrix.net/docs/module-vec3.html\n */\n\n/**\n * @typedef {Float32Array} Matrix4 - 4x4 Matrix; Format: column-major, when typed out it looks like row-major.\n *\n * @see https://glmatrix.net/docs/module-mat4.html\n */\n","/**\n * Provides the storage and sequencing of managed position validators. Each validator added may be a bespoke function or\n * a {@link ValidatorData} object containing an `id`, `validator`, and `weight` attributes; `validator` is the only\n * required attribute.\n *\n * The `id` attribute can be anything that creates a unique ID for the validator; recommended strings or numbers. This\n * allows validators to be removed by ID easily.\n *\n * The `weight` attribute is a number between 0 and 1 inclusive that allows validators to be added in a\n * predictable order which is especially handy if they are manipulated at runtime. A lower weighted validator always\n * runs before a higher weighted validator. If no weight is specified the default of '1' is assigned and it is appended\n * to the end of the validators list.\n *\n * This class forms the public API which is accessible from the `.validators` getter in the main Position instance.\n * ```\n * const position = new Position(<PositionData>);\n * position.validators.add(...);\n * position.validators.clear();\n * position.validators.length;\n * position.validators.remove(...);\n * position.validators.removeBy(...);\n * position.validators.removeById(...);\n * ```\n */\nexport class AdapterValidators\n{\n   /**\n    * @type {ValidatorData[]}\n    */\n   #validatorData;\n\n   #mapUnsubscribe = new Map();\n\n   /**\n    * @returns {[AdapterValidators, ValidatorData[]]} Returns this and internal storage for validator adapter.\n    */\n   constructor()\n   {\n      this.#validatorData = [];\n\n      Object.seal(this);\n\n      return [this, this.#validatorData];\n   }\n\n   /**\n    * @returns {number} Returns the length of the validators array.\n    */\n   get length() { return this.#validatorData.length; }\n\n   /**\n    * Provides an iterator for validators.\n    *\n    * @returns {Generator<ValidatorData|undefined>} Generator / iterator of validators.\n    * @yields {ValidatorData<T>}\n    */\n   *[Symbol.iterator]()\n   {\n      if (this.#validatorData.length === 0) { return; }\n\n      for (const entry of this.#validatorData)\n      {\n         yield { ...entry };\n      }\n   }\n\n   /**\n    * @param {...(ValidatorFn<T>|ValidatorData<T>)}   validators -\n    */\n   add(...validators)\n   {\n      /**\n       * Tracks the number of validators added that have subscriber functionality.\n       *\n       * @type {number}\n       */\n      let subscribeCount = 0;\n\n      for (const validator of validators)\n      {\n         const validatorType = typeof validator;\n\n         if (validatorType !== 'function' && validatorType !== 'object' || validator === null)\n         {\n            throw new TypeError(`AdapterValidator error: 'validator' is not a function or object.`);\n         }\n\n         let data = void 0;\n         let subscribeFn = void 0;\n\n         switch (validatorType)\n         {\n            case 'function':\n               data = {\n                  id: void 0,\n                  validator,\n                  weight: 1\n               };\n\n               subscribeFn = validator.subscribe;\n               break;\n\n            case 'object':\n               if (typeof validator.validator !== 'function')\n               {\n                  throw new TypeError(`AdapterValidator error: 'validator' attribute is not a function.`);\n               }\n\n               if (validator.weight !== void 0 && typeof validator.weight !== 'number' ||\n                (validator.weight < 0 || validator.weight > 1))\n               {\n                  throw new TypeError(\n                   `AdapterValidator error: 'weight' attribute is not a number between '0 - 1' inclusive.`);\n               }\n\n               data = {\n                  id: validator.id !== void 0 ? validator.id : void 0,\n                  validator: validator.validator.bind(validator),\n                  weight: validator.weight || 1,\n                  instance: validator\n               };\n\n               subscribeFn = validator.validator.subscribe ?? validator.subscribe;\n               break;\n         }\n\n         // Find the index to insert where data.weight is less than existing values weight.\n         const index = this.#validatorData.findIndex((value) =>\n         {\n            return data.weight < value.weight;\n         });\n\n         // If an index was found insert at that location.\n         if (index >= 0)\n         {\n            this.#validatorData.splice(index, 0, data);\n         }\n         else // push to end of validators.\n         {\n            this.#validatorData.push(data);\n         }\n\n         if (typeof subscribeFn === 'function')\n         {\n            // TODO: consider how to handle validator updates.\n            const unsubscribe = subscribeFn();\n\n            // Ensure that unsubscribe is a function.\n            if (typeof unsubscribe !== 'function')\n            {\n               throw new TypeError(\n                'AdapterValidator error: Filter has subscribe function, but no unsubscribe function is returned.');\n            }\n\n            // Ensure that the same validator is not subscribed to multiple times.\n            if (this.#mapUnsubscribe.has(data.validator))\n            {\n               throw new Error(\n                'AdapterValidator error: Filter added already has an unsubscribe function registered.');\n            }\n\n            this.#mapUnsubscribe.set(data.validator, unsubscribe);\n            subscribeCount++;\n         }\n      }\n\n      // Filters with subscriber functionality are assumed to immediately invoke the `subscribe` callback. If the\n      // subscriber count is less than the amount of validators added then automatically trigger an index update\n      // manually.\n      // TODO: handle validator updates.\n      // if (subscribeCount < validators.length) { this.#indexUpdate(); }\n   }\n\n   clear()\n   {\n      this.#validatorData.length = 0;\n\n      // Unsubscribe from all validators with subscription support.\n      for (const unsubscribe of this.#mapUnsubscribe.values())\n      {\n         unsubscribe();\n      }\n\n      this.#mapUnsubscribe.clear();\n\n      // TODO: handle validator updates.\n      // this.#indexUpdate();\n   }\n\n   /**\n    * @param {...(ValidatorFn<T>|ValidatorData<T>)}   validators -\n    */\n   remove(...validators)\n   {\n      const length = this.#validatorData.length;\n\n      if (length === 0) { return; }\n\n      for (const data of validators)\n      {\n         // Handle the case that the validator may either be a function or a validator entry / object.\n         const actualValidator = typeof data === 'function' ? data : data !== null && typeof data === 'object' ?\n          data.validator : void 0;\n\n         if (!actualValidator) { continue; }\n\n         for (let cntr = this.#validatorData.length; --cntr >= 0;)\n         {\n            if (this.#validatorData[cntr].validator === actualValidator)\n            {\n               this.#validatorData.splice(cntr, 1);\n\n               // Invoke any unsubscribe function for given validator then remove from tracking.\n               let unsubscribe = void 0;\n               if (typeof (unsubscribe = this.#mapUnsubscribe.get(actualValidator)) === 'function')\n               {\n                  unsubscribe();\n                  this.#mapUnsubscribe.delete(actualValidator);\n               }\n            }\n         }\n      }\n\n      // Update the index a validator was removed.\n      // TODO: handle validator updates.\n      // if (length !== this.#validatorData.length) { this.#indexUpdate(); }\n   }\n\n   /**\n    * Remove validators by the provided callback. The callback takes 3 parameters: `id`, `validator`, and `weight`.\n    * Any truthy value returned will remove that validator.\n    *\n    * @param {function(*, ValidatorFn<T>, number): boolean} callback - Callback function to evaluate each validator\n    *                                                                  entry.\n    */\n   removeBy(callback)\n   {\n      const length = this.#validatorData.length;\n\n      if (length === 0) { return; }\n\n      if (typeof callback !== 'function')\n      {\n         throw new TypeError(`AdapterValidator error: 'callback' is not a function.`);\n      }\n\n      this.#validatorData = this.#validatorData.filter((data) =>\n      {\n         const remove = callback.call(callback, { ...data });\n\n         if (remove)\n         {\n            let unsubscribe;\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.validator)) === 'function')\n            {\n               unsubscribe();\n               this.#mapUnsubscribe.delete(data.validator);\n            }\n         }\n\n         // Reverse remove boolean to properly validator / remove this validator.\n         return !remove;\n      });\n\n      // TODO: handle validator updates.\n      // if (length !== this.#validatorData.length) { this.#indexUpdate(); }\n   }\n\n   removeById(...ids)\n   {\n      const length = this.#validatorData.length;\n\n      if (length === 0) { return; }\n\n      this.#validatorData = this.#validatorData.filter((data) =>\n      {\n         let remove = false;\n\n         for (const id of ids) { remove |= data.id === id; }\n\n         // If not keeping invoke any unsubscribe function for given validator then remove from tracking.\n         if (remove)\n         {\n            let unsubscribe;\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.validator)) === 'function')\n            {\n               unsubscribe();\n               this.#mapUnsubscribe.delete(data.validator);\n            }\n         }\n\n         return !remove; // Swap here to actually remove the item via array validator method.\n      });\n\n      // TODO: handle validator updates.\n      // if (length !== this.#validatorData.length) { this.#indexUpdate(); }\n   }\n}\n\n/**\n * @callback ValidatorFn - Position validator function that takes a {@link PositionData} instance potentially\n *                             modifying it or returning null if invalid.\n *\n * @param {ValidationData} valData - Validation data.\n *\n * @returns {PositionData|null} The validated position data or null to cancel position update.\n *\n */\n\n/**\n * @typedef {object} ValidatorData\n *\n * @property {*}           [id=undefined] - An ID associated with this validator. Can be used to remove the validator.\n *\n * @property {ValidatorFn} validator - Position validator function that takes a {@link PositionData} instance\n *                                     potentially modifying it or returning null if invalid.\n *\n * @property {number}      [weight=1] - A number between 0 and 1 inclusive to position this validator against others.\n *\n * @property {Function}    [subscribe] - Optional subscribe function following the Svelte store / subscribe pattern.\n */\n","export class BasicBounds\n{\n   /**\n    * When true constrains the min / max width or height to element.\n    *\n    * @type {boolean}\n    */\n   #constrain;\n\n   /**\n    * @type {HTMLElement}\n    */\n   #element;\n\n   /**\n    * When true the validator is active.\n    *\n    * @type {boolean}\n    */\n   #enabled;\n\n   /**\n    * Provides a manual setting of the element height. As things go `offsetHeight` causes a browser layout and is not\n    * performance oriented. If manually set this height is used instead of `offsetHeight`.\n    *\n    * @type {number}\n    */\n   #height;\n\n   /**\n    * Set from an optional value in the constructor to lock accessors preventing modification.\n    */\n   #lock;\n\n   /**\n    * Provides a manual setting of the element width. As things go `offsetWidth` causes a browser layout and is not\n    * performance oriented. If manually set this width is used instead of `offsetWidth`.\n    *\n    * @type {number}\n    */\n   #width;\n\n   constructor({ constrain = true, element, enabled = true, lock = false, width, height } = {})\n   {\n      this.element = element;\n      this.constrain = constrain;\n      this.enabled = enabled;\n      this.width = width;\n      this.height = height;\n\n      this.#lock = typeof lock === 'boolean' ? lock : false;\n   }\n\n   get constrain() { return this.#constrain; }\n\n   get element() { return this.#element; }\n\n   get enabled() { return this.#enabled; }\n\n   get height() { return this.#height; }\n\n   get width() { return this.#width; }\n\n   set constrain(constrain)\n   {\n      if (this.#lock) { return; }\n\n      if (typeof constrain !== 'boolean') { throw new TypeError(`'constrain' is not a boolean.`); }\n\n      this.#constrain = constrain;\n   }\n\n   set element(element)\n   {\n      if (this.#lock) { return; }\n\n      if (element === void 0  || element === null || element instanceof HTMLElement)\n      {\n         this.#element = element;\n      }\n      else\n      {\n         throw new TypeError(`'element' is not a HTMLElement, undefined, or null.`);\n      }\n   }\n\n   set enabled(enabled)\n   {\n      if (this.#lock) { return; }\n\n      if (typeof enabled !== 'boolean') { throw new TypeError(`'enabled' is not a boolean.`); }\n\n      this.#enabled = enabled;\n   }\n\n   set height(height)\n   {\n      if (this.#lock) { return; }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   set width(width)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n   }\n\n   setDimension(width, height)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   /**\n    * Provides a validator that respects transforms in positional data constraining the position to within the target\n    * elements bounds.\n    *\n    * @param {ValidationData}   valData - The associated validation data for position updates.\n    *\n    * @returns {PositionData} Potentially adjusted position data.\n    */\n   validator(valData)\n   {\n      // Early out if element is undefined or local enabled state is false.\n      if (!this.#enabled) { return valData.position; }\n\n      // Determine containing bounds from manual values; or any element; lastly the browser width / height.\n      const boundsWidth = this.#width ?? this.#element?.offsetWidth ?? globalThis.innerWidth;\n      const boundsHeight = this.#height ?? this.#element?.offsetHeight ?? globalThis.innerHeight;\n\n      if (typeof valData.position.width === 'number')\n      {\n         const maxW = valData.maxWidth ?? (this.#constrain ? boundsWidth : Number.MAX_SAFE_INTEGER);\n         valData.position.width = valData.width = Math.clamped(valData.position.width, valData.minWidth, maxW);\n\n         if ((valData.width + valData.position.left + valData.marginLeft) > boundsWidth)\n         {\n            valData.position.left = boundsWidth - valData.width - valData.marginLeft;\n         }\n      }\n\n      if (typeof valData.position.height === 'number')\n      {\n         const maxH = valData.maxHeight ?? (this.#constrain ? boundsHeight : Number.MAX_SAFE_INTEGER);\n         valData.position.height = valData.height = Math.clamped(valData.position.height, valData.minHeight, maxH);\n\n         if ((valData.height + valData.position.top + valData.marginTop) > boundsHeight)\n         {\n            valData.position.top = boundsHeight - valData.height - valData.marginTop;\n         }\n      }\n\n      const maxL = Math.max(boundsWidth - valData.width - valData.marginLeft, 0);\n      valData.position.left = Math.round(Math.clamped(valData.position.left, 0, maxL));\n\n      const maxT = Math.max(boundsHeight - valData.height - valData.marginTop, 0);\n      valData.position.top = Math.round(Math.clamped(valData.position.top, 0, maxT));\n\n      return valData.position;\n   }\n}\n","import { TransformData } from '../transform/TransformData.js';\n\nconst s_TRANSFORM_DATA = new TransformData();\n\nexport class TransformBounds\n{\n   /**\n    * When true constrains the min / max width or height to element.\n    *\n    * @type {boolean}\n    */\n   #constrain;\n\n   /**\n    * @type {HTMLElement}\n    */\n   #element;\n\n   /**\n    * When true the validator is active.\n    *\n    * @type {boolean}\n    */\n   #enabled;\n\n   /**\n    * Provides a manual setting of the element height. As things go `offsetHeight` causes a browser layout and is not\n    * performance oriented. If manually set this height is used instead of `offsetHeight`.\n    *\n    * @type {number}\n    */\n   #height;\n\n   /**\n    * Set from an optional value in the constructor to lock accessors preventing modification.\n    */\n   #lock;\n\n   /**\n    * Provides a manual setting of the element width. As things go `offsetWidth` causes a browser layout and is not\n    * performance oriented. If manually set this width is used instead of `offsetWidth`.\n    *\n    * @type {number}\n    */\n   #width;\n\n   constructor({ constrain = true, element, enabled = true, lock = false, width, height } = {})\n   {\n      this.element = element;\n      this.constrain = constrain;\n      this.enabled = enabled;\n      this.width = width;\n      this.height = height;\n\n      this.#lock = typeof lock === 'boolean' ? lock : false;\n   }\n\n   get constrain() { return this.#constrain; }\n\n   get element() { return this.#element; }\n\n   get enabled() { return this.#enabled; }\n\n   get height() { return this.#height; }\n\n   get width() { return this.#width; }\n\n   set constrain(constrain)\n   {\n      if (this.#lock) { return; }\n\n      if (typeof constrain !== 'boolean') { throw new TypeError(`'constrain' is not a boolean.`); }\n\n      this.#constrain = constrain;\n   }\n\n   set element(element)\n   {\n      if (this.#lock) { return; }\n\n      if (element === void 0 || element === null || element instanceof HTMLElement)\n      {\n         this.#element = element;\n      }\n      else\n      {\n         throw new TypeError(`'element' is not a HTMLElement, undefined, or null.`);\n      }\n   }\n\n   set enabled(enabled)\n   {\n      if (this.#lock) { return; }\n\n      if (typeof enabled !== 'boolean') { throw new TypeError(`'enabled' is not a boolean.`); }\n\n      this.#enabled = enabled;\n   }\n\n   set height(height)\n   {\n      if (this.#lock) { return; }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   set width(width)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n   }\n\n   setDimension(width, height)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   /**\n    * Provides a validator that respects transforms in positional data constraining the position to within the target\n    * elements bounds.\n    *\n    * @param {ValidationData}   valData - The associated validation data for position updates.\n    *\n    * @returns {PositionData} Potentially adjusted position data.\n    */\n   validator(valData)\n   {\n      // Early out if element is undefined or local enabled state is false.\n      if (!this.#enabled) { return valData.position; }\n\n      // Determine containing bounds from manual values; or any element; lastly the browser width / height.\n      const boundsWidth = this.#width ?? this.#element?.offsetWidth ?? globalThis.innerWidth;\n      const boundsHeight = this.#height ?? this.#element?.offsetHeight ?? globalThis.innerHeight;\n\n      // Ensure min / max width constraints when position width is a number; not 'auto' or 'inherit'. If constrain is\n      // true cap width bounds.\n      if (typeof valData.position.width === 'number')\n      {\n         const maxW = valData.maxWidth ?? (this.#constrain ? boundsWidth : Number.MAX_SAFE_INTEGER);\n         valData.position.width = Math.clamped(valData.width, valData.minWidth, maxW);\n      }\n\n      // Ensure min / max height constraints when position height is a number; not 'auto' or 'inherit'. If constrain\n      // is true cap height bounds.\n      if (typeof valData.position.height === 'number')\n      {\n         const maxH = valData.maxHeight ?? (this.#constrain ? boundsHeight : Number.MAX_SAFE_INTEGER);\n         valData.position.height = Math.clamped(valData.height, valData.minHeight, maxH);\n      }\n\n      // Get transform data. First set constraints including any margin top / left as offsets and width / height. Used\n      // when position width / height is 'auto'.\n      const data = valData.transforms.getData(valData.position, s_TRANSFORM_DATA, valData);\n\n      // Check the bounding rectangle against browser height / width. Adjust position based on how far the overlap of\n      // the bounding rect is outside the bounds height / width. The order below matters as the constraints are top /\n      // left oriented, so perform those checks last.\n\n      const initialX = data.boundingRect.x;\n      const initialY = data.boundingRect.y;\n\n      if (data.boundingRect.bottom + valData.marginTop > boundsHeight)\n      {\n         data.boundingRect.y += boundsHeight - data.boundingRect.bottom - valData.marginTop;\n      }\n\n      if (data.boundingRect.right + valData.marginLeft > boundsWidth)\n      {\n         data.boundingRect.x += boundsWidth - data.boundingRect.right - valData.marginLeft;\n      }\n\n      if (data.boundingRect.top - valData.marginTop < 0)\n      {\n         data.boundingRect.y += Math.abs(data.boundingRect.top - valData.marginTop);\n      }\n\n      if (data.boundingRect.left - valData.marginLeft < 0)\n      {\n         data.boundingRect.x += Math.abs(data.boundingRect.left - valData.marginLeft);\n      }\n\n      valData.position.left -= initialX - data.boundingRect.x;\n      valData.position.top -= initialY - data.boundingRect.y;\n\n      return valData.position;\n   }\n}\n","import { BasicBounds }     from './BasicBounds.js';\nimport { TransformBounds } from './TransformBounds.js';\n\nconst basicWindow = new BasicBounds({ lock: true });\nconst transformWindow = new TransformBounds({ lock: true });\n\nexport { basicWindow, BasicBounds, transformWindow, TransformBounds };\n","import { degToRad, mat4, vec3 }  from '@typhonjs-fvtt/runtime/svelte/math';\n\nimport * as constants            from '../constants.js';\n\nimport { TransformData }         from './TransformData.js';\n\n/** @type {number[]} */\nconst s_SCALE_VECTOR = [1, 1, 1];\n\n/** @type {number[]} */\nconst s_TRANSLATE_VECTOR = [0, 0, 0];\n\n/** @type {Matrix4} */\nconst s_MAT4_RESULT = mat4.create();\n\n/** @type {Matrix4} */\nconst s_MAT4_TEMP = mat4.create();\n\n/** @type {Vector3} */\nconst s_VEC3_TEMP = vec3.create();\n\nexport class Transforms\n{\n   /**\n    * Stores the transform keys in the order added.\n    *\n    * @type {string[]}\n    */\n   #orderList = [];\n\n   constructor()\n   {\n      this._data = {};\n   }\n\n   /**\n    * @returns {boolean} Whether there are active transforms in local data.\n    */\n   get isActive() { return this.#orderList.length > 0; }\n\n   /**\n    * @returns {number|undefined} Any local rotateX data.\n    */\n   get rotateX() { return this._data.rotateX; }\n\n   /**\n    * @returns {number|undefined} Any local rotateY data.\n    */\n   get rotateY() { return this._data.rotateY; }\n\n   /**\n    * @returns {number|undefined} Any local rotateZ data.\n    */\n   get rotateZ() { return this._data.rotateZ; }\n\n   /**\n    * @returns {number|undefined} Any local rotateZ scale.\n    */\n   get scale() { return this._data.scale; }\n\n   /**\n    * @returns {number|undefined} Any local translateZ data.\n    */\n   get translateX() { return this._data.translateX; }\n\n   /**\n    * @returns {number|undefined} Any local translateZ data.\n    */\n   get translateY() { return this._data.translateY; }\n\n   /**\n    * @returns {number|undefined} Any local translateZ data.\n    */\n   get translateZ() { return this._data.translateZ; }\n\n   /**\n    * Sets the local rotateX data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set rotateX(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.rotateX === void 0) { this.#orderList.push('rotateX'); }\n\n         this._data.rotateX = value;\n      }\n      else\n      {\n         if (this._data.rotateX !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'rotateX');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.rotateX;\n      }\n   }\n\n   /**\n    * Sets the local rotateY data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set rotateY(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.rotateY === void 0) { this.#orderList.push('rotateY'); }\n\n         this._data.rotateY = value;\n      }\n      else\n      {\n         if (this._data.rotateY !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'rotateY');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.rotateY;\n      }\n   }\n\n   /**\n    * Sets the local rotateZ data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set rotateZ(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.rotateZ === void 0) { this.#orderList.push('rotateZ'); }\n\n         this._data.rotateZ = value;\n      }\n\n      else\n      {\n         if (this._data.rotateZ !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'rotateZ');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.rotateZ;\n      }\n   }\n\n   /**\n    * Sets the local scale data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set scale(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.scale === void 0) { this.#orderList.push('scale'); }\n\n         this._data.scale = value;\n      }\n      else\n      {\n         if (this._data.scale !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'scale');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.scale;\n      }\n   }\n\n   /**\n    * Sets the local translateX data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set translateX(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.translateX === void 0) { this.#orderList.push('translateX'); }\n\n         this._data.translateX = value;\n      }\n\n      else\n      {\n         if (this._data.translateX !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'translateX');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.translateX;\n      }\n   }\n\n   /**\n    * Sets the local translateY data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set translateY(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.translateY === void 0) { this.#orderList.push('translateY'); }\n\n         this._data.translateY = value;\n      }\n\n      else\n      {\n         if (this._data.translateY !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'translateY');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.translateY;\n      }\n   }\n\n   /**\n    * Sets the local translateZ data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set translateZ(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.translateZ === void 0) { this.#orderList.push('translateZ'); }\n\n         this._data.translateZ = value;\n      }\n\n      else\n      {\n         if (this._data.translateZ !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'translateZ');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.translateZ;\n      }\n   }\n\n   /**\n    * Returns the matrix3d CSS transform for the given position / transform data.\n    *\n    * @param {object} [data] - Optional position data otherwise use local stored transform data.\n    *\n    * @returns {string} The CSS matrix3d string.\n    */\n   getCSS(data = this._data)\n   {\n      return `matrix3d(${this.getMat4(data, s_MAT4_RESULT).join(',')})`;\n   }\n\n   /**\n    * Returns the matrix3d CSS transform for the given position / transform data.\n    *\n    * @param {object} [data] - Optional position data otherwise use local stored transform data.\n    *\n    * @returns {string} The CSS matrix3d string.\n    */\n   getCSSOrtho(data = this._data)\n   {\n      return `matrix3d(${this.getMat4Ortho(data, s_MAT4_RESULT).join(',')})`;\n   }\n\n   /**\n    * Collects all data including a bounding rect, transform matrix, and points array of the given {@link PositionData}\n    * instance with the applied local transform data.\n    *\n    * @param {PositionData} position - The position data to process.\n    *\n    * @param {TransformData} [output] - Optional TransformData output instance.\n    *\n    * @param {object} [validationData] - Optional validation data for adjustment parameters.\n    *\n    * @returns {TransformData} The output TransformData instance.\n    */\n   getData(position, output = new TransformData(), validationData = {})\n   {\n      const valWidth = validationData.width ?? 0;\n      const valHeight = validationData.height ?? 0;\n      const valOffsetTop = validationData.offsetTop ?? validationData.marginTop ?? 0;\n      const valOffsetLeft = validationData.offsetLeft ?? validationData.offsetLeft ?? 0;\n\n      position.top += valOffsetTop;\n      position.left += valOffsetLeft;\n\n      const width = Number.isFinite(position.width) ? position.width : valWidth;\n      const height = Number.isFinite(position.height) ? position.height : valHeight;\n\n      const rect = output.corners;\n\n      if (this.hasTransform(position))\n      {\n         rect[0][0] = rect[0][1] = rect[0][2] = 0;\n         rect[1][0] = width;\n         rect[1][1] = rect[1][2] = 0;\n         rect[2][0] = width;\n         rect[2][1] = height;\n         rect[2][2] = 0;\n         rect[3][0] = 0;\n         rect[3][1] = height;\n         rect[3][2] = 0;\n\n         const matrix = this.getMat4(position, output.mat4);\n\n         const translate = s_GET_ORIGIN_TRANSLATION(position.transformOrigin, width, height, output.originTranslations);\n\n         if (constants.transformOriginDefault === position.transformOrigin)\n         {\n            vec3.transformMat4(rect[0], rect[0], matrix);\n            vec3.transformMat4(rect[1], rect[1], matrix);\n            vec3.transformMat4(rect[2], rect[2], matrix);\n            vec3.transformMat4(rect[3], rect[3], matrix);\n         }\n         else\n         {\n            vec3.transformMat4(rect[0], rect[0], translate[0]);\n            vec3.transformMat4(rect[0], rect[0], matrix);\n            vec3.transformMat4(rect[0], rect[0], translate[1]);\n\n            vec3.transformMat4(rect[1], rect[1], translate[0]);\n            vec3.transformMat4(rect[1], rect[1], matrix);\n            vec3.transformMat4(rect[1], rect[1], translate[1]);\n\n            vec3.transformMat4(rect[2], rect[2], translate[0]);\n            vec3.transformMat4(rect[2], rect[2], matrix);\n            vec3.transformMat4(rect[2], rect[2], translate[1]);\n\n            vec3.transformMat4(rect[3], rect[3], translate[0]);\n            vec3.transformMat4(rect[3], rect[3], matrix);\n            vec3.transformMat4(rect[3], rect[3], translate[1]);\n         }\n\n         rect[0][0] = position.left + rect[0][0];\n         rect[0][1] = position.top + rect[0][1];\n         rect[1][0] = position.left + rect[1][0];\n         rect[1][1] = position.top + rect[1][1];\n         rect[2][0] = position.left + rect[2][0];\n         rect[2][1] = position.top + rect[2][1];\n         rect[3][0] = position.left + rect[3][0];\n         rect[3][1] = position.top + rect[3][1];\n      }\n      else\n      {\n         rect[0][0] = position.left;\n         rect[0][1] = position.top;\n         rect[1][0] = position.left + width;\n         rect[1][1] = position.top;\n         rect[2][0] = position.left + width;\n         rect[2][1] = position.top + height;\n         rect[3][0] = position.left;\n         rect[3][1] = position.top + height;\n\n         mat4.identity(output.mat4);\n      }\n\n      let maxX = Number.MIN_SAFE_INTEGER;\n      let maxY = Number.MIN_SAFE_INTEGER;\n      let minX = Number.MAX_SAFE_INTEGER;\n      let minY = Number.MAX_SAFE_INTEGER;\n\n      for (let cntr = 4; --cntr >= 0;)\n      {\n         if (rect[cntr][0] > maxX) { maxX = rect[cntr][0]; }\n         if (rect[cntr][0] < minX) { minX = rect[cntr][0]; }\n         if (rect[cntr][1] > maxY) { maxY = rect[cntr][1]; }\n         if (rect[cntr][1] < minY) { minY = rect[cntr][1]; }\n      }\n\n      const boundingRect = output.boundingRect;\n      boundingRect.x = minX;\n      boundingRect.y = minY;\n      boundingRect.width = maxX - minX;\n      boundingRect.height = maxY - minY;\n\n      position.top -= valOffsetTop;\n      position.left -= valOffsetLeft;\n\n      return output;\n   }\n\n   /**\n    * Creates a transform matrix based on local data applied in order it was added.\n    *\n    * If no data object is provided then the source is the local transform data. If another data object is supplied\n    * then the stored local transform order is applied then all remaining transform keys are applied. This allows the\n    * construction of a transform matrix in advance of setting local data and is useful in collision detection.\n    *\n    * @param {object}   [data] - PositionData instance or local transform data.\n    *\n    * @param {Matrix4}  [output] - The output mat4 instance.\n    *\n    * @returns {Matrix4} Transform matrix.\n    */\n   getMat4(data = this._data, output = mat4.create())\n   {\n      const matrix = mat4.identity(output);\n\n      // Bitwise tracks applied transform keys from local transform data.\n      let seenKeys = 0;\n\n      const orderList = this.#orderList;\n\n      // First apply ordered transforms from local transform data.\n      for (let cntr = 0; cntr < orderList.length; cntr++)\n      {\n         const key = orderList[cntr];\n\n         switch (key)\n         {\n            case 'rotateX':\n               seenKeys |= constants.transformKeysBitwise.rotateX;\n               mat4.multiply(matrix, matrix, mat4.fromXRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n\n            case 'rotateY':\n               seenKeys |= constants.transformKeysBitwise.rotateY;\n               mat4.multiply(matrix, matrix, mat4.fromYRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n\n            case 'rotateZ':\n               seenKeys |= constants.transformKeysBitwise.rotateZ;\n               mat4.multiply(matrix, matrix, mat4.fromZRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n\n            case 'scale':\n               seenKeys |= constants.transformKeysBitwise.scale;\n               s_SCALE_VECTOR[0] = s_SCALE_VECTOR[1] = data[key];\n               mat4.multiply(matrix, matrix, mat4.fromScaling(s_MAT4_TEMP, s_SCALE_VECTOR));\n               break;\n\n            case 'translateX':\n               seenKeys |= constants.transformKeysBitwise.translateX;\n               s_TRANSLATE_VECTOR[0] = data.translateX;\n               s_TRANSLATE_VECTOR[1] = 0;\n               s_TRANSLATE_VECTOR[2] = 0;\n               mat4.multiply(matrix, matrix, mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n               break;\n\n            case 'translateY':\n               seenKeys |= constants.transformKeysBitwise.translateY;\n               s_TRANSLATE_VECTOR[0] = 0;\n               s_TRANSLATE_VECTOR[1] = data.translateY;\n               s_TRANSLATE_VECTOR[2] = 0;\n               mat4.multiply(matrix, matrix, mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n               break;\n\n            case 'translateZ':\n               seenKeys |= constants.transformKeysBitwise.translateZ;\n               s_TRANSLATE_VECTOR[0] = 0;\n               s_TRANSLATE_VECTOR[1] = 0;\n               s_TRANSLATE_VECTOR[2] = data.translateZ;\n               mat4.multiply(matrix, matrix, mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n               break;\n         }\n      }\n\n      // Now apply any new keys not set in local transform data that have not been applied yet.\n      if (data !== this._data)\n      {\n         for (let cntr = 0; cntr < constants.transformKeys.length; cntr++)\n         {\n            const key = constants.transformKeys[cntr];\n\n            // Reject bad / no data or if the key has already been applied.\n            if (data[key] === null || (seenKeys & constants.transformKeysBitwise[key]) > 0) { continue; }\n\n            switch (key)\n            {\n               case 'rotateX':\n                  mat4.multiply(matrix, matrix, mat4.fromXRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n\n               case 'rotateY':\n                  mat4.multiply(matrix, matrix, mat4.fromYRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n\n               case 'rotateZ':\n                  mat4.multiply(matrix, matrix, mat4.fromZRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n\n               case 'scale':\n                  s_SCALE_VECTOR[0] = s_SCALE_VECTOR[1] = data[key];\n                  mat4.multiply(matrix, matrix, mat4.fromScaling(s_MAT4_TEMP, s_SCALE_VECTOR));\n                  break;\n\n               case 'translateX':\n                  s_TRANSLATE_VECTOR[0] = data[key];\n                  s_TRANSLATE_VECTOR[1] = 0;\n                  s_TRANSLATE_VECTOR[2] = 0;\n                  mat4.multiply(matrix, matrix, mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n                  break;\n\n               case 'translateY':\n                  s_TRANSLATE_VECTOR[0] = 0;\n                  s_TRANSLATE_VECTOR[1] = data[key];\n                  s_TRANSLATE_VECTOR[2] = 0;\n                  mat4.multiply(matrix, matrix, mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n                  break;\n\n               case 'translateZ':\n                  s_TRANSLATE_VECTOR[0] = 0;\n                  s_TRANSLATE_VECTOR[1] = 0;\n                  s_TRANSLATE_VECTOR[2] = data[key];\n                  mat4.multiply(matrix, matrix, mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n                  break;\n            }\n         }\n      }\n\n      return matrix;\n   }\n\n   /**\n    * Provides an orthographic enhancement to convert left / top positional data to a translate operation.\n    *\n    * This transform matrix takes into account that the remaining operations are , but adds any left / top attributes from passed in data to\n    * translate X / Y.\n    *\n    * If no data object is provided then the source is the local transform data. If another data object is supplied\n    * then the stored local transform order is applied then all remaining transform keys are applied. This allows the\n    * construction of a transform matrix in advance of setting local data and is useful in collision detection.\n    *\n    * @param {object}   [data] - PositionData instance or local transform data.\n    *\n    * @param {Matrix4}  [output] - The output mat4 instance.\n    *\n    * @returns {Matrix4} Transform matrix.\n    */\n   getMat4Ortho(data = this._data, output = mat4.create())\n   {\n      const matrix = mat4.identity(output);\n\n      // Attempt to retrieve values from passed in data otherwise default to 0.\n      // Always perform the translation last regardless of order added to local transform data.\n      // Add data.left to translateX and data.top to translateY.\n      s_TRANSLATE_VECTOR[0] = (data.left ?? 0) + (data.translateX ?? 0);\n      s_TRANSLATE_VECTOR[1] = (data.top ?? 0) + (data.translateY ?? 0);\n      s_TRANSLATE_VECTOR[2] = data.translateZ ?? 0;\n      mat4.multiply(matrix, matrix, mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n\n      // Scale can also be applied out of order.\n      if (data.scale !== null)\n      {\n         s_SCALE_VECTOR[0] = s_SCALE_VECTOR[1] = data.scale;\n         mat4.multiply(matrix, matrix, mat4.fromScaling(s_MAT4_TEMP, s_SCALE_VECTOR));\n      }\n\n      // Early out if there is not rotation data.\n      if (data.rotateX === null && data.rotateY === null && data.rotateZ === null) { return matrix; }\n\n      // Rotation transforms must be applied in the order they are added.\n\n      // Bitwise tracks applied transform keys from local transform data.\n      let seenKeys = 0;\n\n      const orderList = this.#orderList;\n\n      // First apply ordered transforms from local transform data.\n      for (let cntr = 0; cntr < orderList.length; cntr++)\n      {\n         const key = orderList[cntr];\n\n         switch (key)\n         {\n            case 'rotateX':\n               seenKeys |= constants.transformKeysBitwise.rotateX;\n               mat4.multiply(matrix, matrix, mat4.fromXRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n\n            case 'rotateY':\n               seenKeys |= constants.transformKeysBitwise.rotateY;\n               mat4.multiply(matrix, matrix, mat4.fromYRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n\n            case 'rotateZ':\n               seenKeys |= constants.transformKeysBitwise.rotateZ;\n               mat4.multiply(matrix, matrix, mat4.fromZRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n         }\n      }\n\n      // Now apply any new keys not set in local transform data that have not been applied yet.\n      if (data !== this._data)\n      {\n         for (let cntr = 0; cntr < constants.transformKeys.length; cntr++)\n         {\n            const key = constants.transformKeys[cntr];\n\n            // Reject bad / no data or if the key has already been applied.\n            if (data[key] === null || (seenKeys & constants.transformKeysBitwise[key]) > 0) { continue; }\n\n            switch (key)\n            {\n               case 'rotateX':\n                  mat4.multiply(matrix, matrix, mat4.fromXRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n\n               case 'rotateY':\n                  mat4.multiply(matrix, matrix, mat4.fromYRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n\n               case 'rotateZ':\n                  mat4.multiply(matrix, matrix, mat4.fromZRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n            }\n         }\n      }\n\n      return matrix;\n   }\n\n   /**\n    * Tests an object if it contains transform keys and the values are finite numbers.\n    *\n    * @param {object} data - An object to test for transform data.\n    *\n    * @returns {boolean} Whether the given PositionData has transforms.\n    */\n   hasTransform(data)\n   {\n      for (const key of constants.transformKeys)\n      {\n         if (Number.isFinite(data[key])) { return true; }\n      }\n\n      return false;\n   }\n\n   /**\n    * Resets internal data from the given object containing valid transform keys.\n    *\n    * @param {object}   data - An object with transform data.\n    */\n   reset(data)\n   {\n      for (const key in data)\n      {\n         if (constants.transformKeys.includes(key))\n         {\n            if (Number.isFinite(data[key]))\n            {\n               this._data[key] = data[key];\n            }\n            else\n            {\n               const index = this.#orderList.findIndex((entry) => entry === key);\n               if (index >= 0) { this.#orderList.splice(index, 1); }\n\n               delete this._data[key];\n            }\n         }\n      }\n   }\n}\n\n/**\n * Returns the translations necessary to translate a matrix operation based on the `transformOrigin` parameter of the\n * given position instance. The first entry / index 0 is the pre-translation and last entry / index 1 is the post-\n * translation.\n *\n * This method is used internally, but may be useful if you need the origin translation matrices to transform\n * bespoke points based on any `transformOrigin` set in {@link PositionData}.\n *\n * @param {string}   transformOrigin - The transform origin attribute from PositionData.\n *\n * @param {number}   width - The PositionData width or validation data width when 'auto'.\n *\n * @param {number}   height - The PositionData height or validation data height when 'auto'.\n *\n * @param {Matrix4[]}   output - Output Mat4 array.\n *\n * @returns {Matrix4[]} Output Mat4 array.\n */\nfunction s_GET_ORIGIN_TRANSLATION(transformOrigin, width, height, output)\n{\n   const vector = s_VEC3_TEMP;\n\n   switch (transformOrigin)\n   {\n      case 'top left':\n         vector[0] = vector[1] = 0;\n         mat4.fromTranslation(output[0], vector);\n         mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'top center':\n         vector[0] = -width * 0.5;\n         vector[1] = 0;\n         mat4.fromTranslation(output[0], vector);\n         vector[0] = width * 0.5;\n         mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'top right':\n         vector[0] = -width;\n         vector[1] = 0;\n         mat4.fromTranslation(output[0], vector);\n         vector[0] = width;\n         mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'center left':\n         vector[0] = 0;\n         vector[1] = -height * 0.5;\n         mat4.fromTranslation(output[0], vector);\n         vector[1] = height * 0.5;\n         mat4.fromTranslation(output[1], vector);\n         break;\n\n      case null: // By default null / no transform is center.\n      case 'center':\n         vector[0] = -width * 0.5;\n         vector[1] = -height * 0.5;\n         mat4.fromTranslation(output[0], vector);\n         vector[0] = width * 0.5;\n         vector[1] = height * 0.5;\n         mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'center right':\n         vector[0] = -width;\n         vector[1] = -height * 0.5;\n         mat4.fromTranslation(output[0], vector);\n         vector[0] = width;\n         vector[1] = height * 0.5;\n         mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'bottom left':\n         vector[0] = 0;\n         vector[1] = -height;\n         mat4.fromTranslation(output[0], vector);\n         vector[1] = height;\n         mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'bottom center':\n         vector[0] = -width * 0.5;\n         vector[1] = -height;\n         mat4.fromTranslation(output[0], vector);\n         vector[0] = width * 0.5;\n         vector[1] = height;\n         mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'bottom right':\n         vector[0] = -width;\n         vector[1] = -height;\n         mat4.fromTranslation(output[0], vector);\n         vector[0] = width;\n         vector[1] = height;\n         mat4.fromTranslation(output[1], vector);\n         break;\n\n      // No valid transform origin parameter; set identity.\n      default:\n         mat4.identity(output[0]);\n         mat4.identity(output[1]);\n         break;\n   }\n\n   return output;\n}\n","import { writable }        from 'svelte/store';\n\nimport { TransformData }   from '../transform/TransformData.js';\nimport { PositionData }    from '../PositionData.js';\n\nexport class UpdateElementData\n{\n   constructor()\n   {\n      /**\n       * Stores the private data from Position.\n       *\n       * @type {PositionData}\n       */\n      this.data = void 0;\n\n      /**\n       * Provides a copy of local data sent to subscribers.\n       *\n       * @type {PositionData}\n       */\n      this.dataSubscribers = new PositionData();\n\n      /**\n       * Stores the current dimension data used for the readable `dimension` store.\n       *\n       * @type {{width: number | 'auto', height: number | 'auto'}}\n       */\n      this.dimensionData = { width: 0, height: 0 };\n\n      /**\n       * @type {PositionChangeSet}\n       */\n      this.changeSet = void 0;\n\n      /**\n       * @type {PositionOptions}\n       */\n      this.options = void 0;\n\n      /**\n       * Stores if this Position / update data is queued for update.\n       *\n       * @type {boolean}\n       */\n      this.queued = false;\n\n      /**\n       * @type {StyleCache}\n       */\n      this.styleCache = void 0;\n\n      /**\n       * @type {Transforms}\n       */\n      this.transforms = void 0;\n\n      /**\n       * Stores the current transform data used for the readable `transform` store. It is only active when there are\n       * subscribers to the store or calculateTransform options is true.\n       *\n       * @type {TransformData}\n       */\n      this.transformData = new TransformData();\n\n      /**\n       * @type {(function(PositionData): void)[]}\n       */\n      this.subscriptions = void 0;\n\n      /**\n       * @type {Writable<{width: (number|\"auto\"), height: (number|\"auto\")}>}\n       */\n      this.storeDimension = writable(this.dimensionData);\n\n      // When there are subscribers set option to calculate transform updates; set to false when no subscribers.\n\n      /**\n       * @type {Writable<TransformData>}\n       */\n      this.storeTransform = writable(this.transformData, () =>\n      {\n         this.options.transformSubscribed = true;\n         return () => this.options.transformSubscribed = false;\n      });\n\n      /**\n       * Stores the queued state for update element processing.\n       *\n       * @type {boolean}\n       */\n      this.queued = false;\n\n      // Seal data backing readable stores.\n      Object.seal(this.dimensionData);\n   }\n}\n","import { isWritableStore } from '@typhonjs-fvtt/runtime/svelte/store';\n\n/**\n * Svelte doesn't provide any events for the animate directive.\n *\n * The provided function below wraps a Svelte animate directive function generating bubbling events for start & end of\n * animation.\n *\n * These events are `animate:start` and `animate:end`.\n *\n * This is useful for instance if you are animating several nodes in a scrollable container where the overflow parameter\n * needs to be set to `none` while animating such that the scrollbar is not activated by the animation.\n *\n * Optionally you may also provide a boolean writable store that will be set to true when animation is active. In some\n * cases this leads to an easier implementation for gating on animation state.\n *\n * @example <caption>With events</caption>\n * const flipWithEvents = animateEvents(flip);\n * </script>\n *\n * <main on:animate:start={() => console.log('animate:start')\n *       on:animate:end={() => console.log('animate:end')}>\n *    {#each someData as entry (entry.id)}\n *       <section animate:flipWithEvents />\n *    {/each}\n\n * @example <caption>With optional store</caption>\n * const isAnimating = writable(false);\n * const flipWithEvents = animateEvents(flip, isAnimating);\n * </script>\n *\n * <main class:no-scroll={$isAnimating}>\n *    {#each someData as entry (entry.id)}\n *       <section animate:flipWithEvents />\n *    {/each}\n *\n * @param {(node: Element, { from: DOMRect, to: DOMRect }, params?: *) =>\n *  import('svelte/animate').AnimationConfig} fn - A Svelte animation function.\n *\n * @param {import('svelte/store').Writable<boolean>} [store] - An optional boolean writable store that is set to true\n *                                                             when animation is active.\n *\n * @returns {(node: Element, { from: DOMRect, to: DOMRect }, params?: *) =>\n *  import('svelte/animate').AnimationConfig} Wrapped animation function.\n */\nfunction animateEvents(fn, store = void 0)\n{\n   if (typeof fn !== 'function') { throw new TypeError(`'fn' is not a function.`); }\n   if (store !== void 0 && !isWritableStore(store)) { throw new TypeError(`'store' is not a writable store.`); }\n\n   // Track a single start / end sequence across all animations.\n   let startFired = false;\n   let endFired = false;\n\n   return (node, animations, params = {}) =>\n   {\n      const animationConfig = fn(node, animations, params);\n\n      // Store any existing tick function.\n      const existingTick = animationConfig.tick;\n\n      // Use tick callback to fire events only once when t / time is 0 and 1.\n      animationConfig.tick = (t, u) =>\n      {\n         // If there is any tick function then invoke it.\n         if (existingTick) { existingTick(t, u); }\n\n         if (!startFired && t === 0)\n         {\n            if (store) { store.set(true); }\n            node.dispatchEvent(new CustomEvent('animate:start', { bubbles: true }));\n            startFired = true;\n            endFired = false;\n         }\n\n         if (!endFired && t === 1)\n         {\n            if (store) { store.set(false); }\n            node.dispatchEvent(new CustomEvent('animate:end', { bubbles: true }));\n            endFired = true;\n            startFired = false;\n         }\n      };\n\n      return animationConfig;\n   }\n}\n\n/**\n * Awaits `requestAnimationFrame` calls by the counter specified. This allows asynchronous applications for direct /\n * inline style modification amongst other direct animation techniques.\n *\n * @param {number}   [cntr=1] - A positive integer greater than 0 for amount of requestAnimationFrames to wait.\n *\n * @returns {Promise<number>} Returns current time equivalent to `performance.now()`.\n */\nasync function nextAnimationFrame(cntr = 1)\n{\n   if (!Number.isInteger(cntr) || cntr < 1)\n   {\n      throw new TypeError(`nextAnimationFrame error: 'cntr' must be a positive integer greater than 0.`);\n   }\n\n   let currentTime = performance.now();\n   for (;--cntr >= 0;)\n   {\n      currentTime = await new Promise((resolve) => requestAnimationFrame(resolve));\n   }\n\n   return currentTime;\n}\n\nexport { animateEvents, nextAnimationFrame };\n//# sourceMappingURL=index.js.map\n","import { nextAnimationFrame }    from '@typhonjs-fvtt/runtime/svelte/animate';\n\n/**\n * Decouples updates to any parent target HTMLElement inline styles. Invoke {@link Position.elementUpdated} to await\n * on the returned promise that is resolved with the current render time via `nextAnimationFrame` /\n * `requestAnimationFrame`. This allows the underlying data model to be updated immediately while updates to the\n * element are in sync with the browser and potentially in the future be further throttled.\n *\n * @param {HTMLElement} el - The target HTMLElement.\n */\nexport class UpdateElementManager\n{\n   static list = [];\n   static listCntr = 0;\n\n   static updatePromise;\n\n   static get promise() { return this.updatePromise; }\n\n   /**\n    * Potentially adds the given element and internal updateData instance to the list.\n    *\n    * @param {HTMLElement}       el - An HTMLElement instance.\n    *\n    * @param {UpdateElementData} updateData - An UpdateElementData instance.\n    *\n    * @returns {Promise<number>} The unified next frame update promise. Returns `currentTime`.\n    */\n   static add(el, updateData)\n   {\n      if (this.listCntr < this.list.length)\n      {\n         const entry = this.list[this.listCntr];\n         entry[0] = el;\n         entry[1] = updateData;\n      }\n      else\n      {\n         this.list.push([el, updateData]);\n      }\n\n      this.listCntr++;\n      updateData.queued = true;\n\n      if (!this.updatePromise) { this.updatePromise = this.wait(); }\n\n      return this.updatePromise;\n   }\n\n   /**\n    * Await on `nextAnimationFrame` and iterate over list map invoking callback functions.\n    *\n    * @returns {Promise<number>} The next frame Promise / currentTime from nextAnimationFrame.\n    */\n   static async wait()\n   {\n      // Await the next animation frame. In the future this can be extended to multiple frames to divide update rate.\n      const currentTime = await nextAnimationFrame();\n\n      this.updatePromise = void 0;\n\n      for (let cntr = this.listCntr; --cntr >= 0;)\n      {\n         // Obtain data for entry.\n         const entry = this.list[cntr];\n         const el = entry[0];\n         const updateData = entry[1];\n\n         // Clear entry data.\n         entry[0] = void 0;\n         entry[1] = void 0;\n\n         // Reset queued state.\n         updateData.queued = false;\n\n         // Early out if the element is no longer connected to the DOM / shadow root.\n         // if (!el.isConnected || !updateData.changeSet.hasChange()) { continue; }\n         if (!el.isConnected) { continue; }\n\n         if (updateData.options.ortho)\n         {\n            s_UPDATE_ELEMENT_ORTHO(el, updateData);\n         }\n         else\n         {\n            s_UPDATE_ELEMENT(el, updateData);\n         }\n\n         // If calculate transform options is enabled then update the transform data and set the readable store.\n         if (updateData.options.calculateTransform || updateData.options.transformSubscribed)\n         {\n            s_UPDATE_TRANSFORM(el, updateData);\n         }\n\n         // Update all subscribers with changed data.\n         this.updateSubscribers(updateData);\n      }\n\n      this.listCntr = 0;\n\n      return currentTime;\n   }\n\n   /**\n    * Potentially immediately updates the given element.\n    *\n    * @param {HTMLElement}       el - An HTMLElement instance.\n    *\n    * @param {UpdateElementData} updateData - An UpdateElementData instance.\n    */\n   static immediate(el, updateData)\n   {\n      // Early out if the element is no longer connected to the DOM / shadow root.\n      // if (!el.isConnected || !updateData.changeSet.hasChange()) { continue; }\n      if (!el.isConnected) { return; }\n\n      if (updateData.options.ortho)\n      {\n         s_UPDATE_ELEMENT_ORTHO(el, updateData);\n      }\n      else\n      {\n         s_UPDATE_ELEMENT(el, updateData);\n      }\n\n      // If calculate transform options is enabled then update the transform data and set the readable store.\n      if (updateData.options.calculateTransform || updateData.options.transformSubscribed)\n      {\n         s_UPDATE_TRANSFORM(el, updateData);\n      }\n\n      // Update all subscribers with changed data.\n      this.updateSubscribers(updateData);\n   }\n\n   /**\n    * @param {UpdateElementData} updateData - Data change set.\n    */\n   static updateSubscribers(updateData)\n   {\n      const data = updateData.data;\n      const changeSet = updateData.changeSet;\n\n      if (!changeSet.hasChange()) { return; }\n\n      // Make a copy of the data.\n      const output = updateData.dataSubscribers.copy(data);\n\n      const subscriptions = updateData.subscriptions;\n\n      // Early out if there are no subscribers.\n      if (subscriptions.length > 0)\n      {\n         for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](output); }\n      }\n\n      // Update dimension data if width / height has changed.\n      if (changeSet.width || changeSet.height)\n      {\n         updateData.dimensionData.width = data.width;\n         updateData.dimensionData.height = data.height;\n         updateData.storeDimension.set(updateData.dimensionData);\n      }\n\n      changeSet.set(false);\n   }\n}\n\n/**\n * Decouples updates to any parent target HTMLElement inline styles. Invoke {@link Position.elementUpdated} to await\n * on the returned promise that is resolved with the current render time via `nextAnimationFrame` /\n * `requestAnimationFrame`. This allows the underlying data model to be updated immediately while updates to the\n * element are in sync with the browser and potentially in the future be further throttled.\n *\n * @param {HTMLElement} el - The target HTMLElement.\n *\n * @param {UpdateElementData} updateData - Update data.\n */\nfunction s_UPDATE_ELEMENT(el, updateData)\n{\n   const changeSet = updateData.changeSet;\n   const data = updateData.data;\n\n   if (changeSet.left)\n   {\n      el.style.left = `${data.left}px`;\n   }\n\n   if (changeSet.top)\n   {\n      el.style.top = `${data.top}px`;\n   }\n\n   if (changeSet.zIndex)\n   {\n      el.style.zIndex = typeof data.zIndex === 'number' ? `${data.zIndex}` : null;\n   }\n\n   if (changeSet.width)\n   {\n      el.style.width = typeof data.width === 'number' ? `${data.width}px` : data.width;\n   }\n\n   if (changeSet.height)\n   {\n      el.style.height = typeof data.height === 'number' ? `${data.height}px` : data.height;\n   }\n\n   if (changeSet.transformOrigin)\n   {\n      // When set to 'center' we can simply set the transform to null which is center by default.\n      el.style.transformOrigin = data.transformOrigin === 'center' ? null : data.transformOrigin;\n   }\n\n   // Update all transforms in order added to transforms object.\n   if (changeSet.transform)\n   {\n      el.style.transform = updateData.transforms.isActive ? updateData.transforms.getCSS() : null;\n   }\n}\n\n/**\n * Decouples updates to any parent target HTMLElement inline styles. Invoke {@link Position.elementUpdated} to await\n * on the returned promise that is resolved with the current render time via `nextAnimationFrame` /\n * `requestAnimationFrame`. This allows the underlying data model to be updated immediately while updates to the\n * element are in sync with the browser and potentially in the future be further throttled.\n *\n * @param {HTMLElement} el - The target HTMLElement.\n *\n * @param {UpdateElementData} updateData - Update data.\n */\nfunction s_UPDATE_ELEMENT_ORTHO(el, updateData)\n{\n   const changeSet = updateData.changeSet;\n   const data = updateData.data;\n\n   if (changeSet.zIndex)\n   {\n      el.style.zIndex = typeof data.zIndex === 'number' ? `${data.zIndex}` : null;\n   }\n\n   if (changeSet.width)\n   {\n      el.style.width = typeof data.width === 'number' ? `${data.width}px` : data.width;\n   }\n\n   if (changeSet.height)\n   {\n      el.style.height = typeof data.height === 'number' ? `${data.height}px` : data.height;\n   }\n\n   if (changeSet.transformOrigin)\n   {\n      // When set to 'center' we can simply set the transform to null which is center by default.\n      el.style.transformOrigin = data.transformOrigin === 'center' ? null : data.transformOrigin;\n   }\n\n   // Update all transforms in order added to transforms object.\n   if (changeSet.left || changeSet.top || changeSet.transform)\n   {\n      el.style.transform = updateData.transforms.getCSSOrtho(data);\n   }\n}\n\n/**\n * Updates the applied transform data and sets the readble `transform` store.\n *\n * @param {HTMLElement} el - The target HTMLElement.\n *\n * @param {UpdateElementData} updateData - Update element data.\n */\nfunction s_UPDATE_TRANSFORM(el, updateData)\n{\n   s_VALIDATION_DATA.height = updateData.data.height !== 'auto' ? updateData.data.height :\n    updateData.styleCache.offsetHeight;\n\n   s_VALIDATION_DATA.width = updateData.data.width !== 'auto' ? updateData.data.width :\n    updateData.styleCache.offsetWidth;\n\n   s_VALIDATION_DATA.marginLeft = updateData.styleCache.marginLeft;\n\n   s_VALIDATION_DATA.marginTop = updateData.styleCache.marginTop;\n\n   // Get transform data. First set constraints including any margin top / left as offsets and width / height. Used\n   // when position width / height is 'auto'.\n   updateData.transforms.getData(updateData.data, updateData.transformData, s_VALIDATION_DATA);\n\n   updateData.storeTransform.set(updateData.transformData);\n}\n\nconst s_VALIDATION_DATA = {\n   height: void 0,\n   width: void 0,\n   marginLeft: void 0,\n   marginTop: void 0\n};\n","import {\n   propertyStore,\n   subscribeIgnoreFirst }        from '@typhonjs-fvtt/runtime/svelte/store';\n\nimport {\n   isIterable,\n   isObject,\n   isPlainObject }               from '@typhonjs-fvtt/runtime/svelte/util';\n\nimport { AnimationAPI }          from './animation/AnimationAPI.js';\nimport { AnimationGroupAPI }     from './animation/AnimationGroupAPI.js';\nimport * as constants            from './constants.js';\nimport { convertRelative }       from './convertRelative.js';\nimport * as positionInitial      from './initial/index.js';\nimport { PositionChangeSet }     from './PositionChangeSet.js';\nimport { PositionData }          from './PositionData.js';\nimport { PositionStateAPI }      from './PositionStateAPI.js';\nimport { StyleCache }            from './StyleCache.js';\nimport { TransformData }         from './transform/TransformData.js';\nimport { AdapterValidators }     from './validators/AdapterValidators.js';\nimport * as positionValidators   from './validators/index.js';\nimport { Transforms }            from './transform/Transforms.js';\nimport { UpdateElementData }     from './update/UpdateElementData.js';\nimport { UpdateElementManager }  from './update/UpdateElementManager.js';\n\n/**\n * Provides a store for position following the subscriber protocol in addition to providing individual writable derived\n * stores for each independent variable.\n */\nexport class Position\n{\n   /**\n    * @type {PositionData}\n    */\n   #data = new PositionData();\n\n   /**\n    * Provides the animation API.\n    *\n    * @type {AnimationAPI}\n    */\n   #animate = new AnimationAPI(this, this.#data);\n\n   /**\n    * Stores the style attributes that changed on update.\n    *\n    * @type {PositionChangeSet}\n    */\n   #positionChangeSet = new PositionChangeSet();\n\n   /**\n    * Stores ongoing options that are set in the constructor or by transform store subscription.\n    *\n    * @type {PositionOptions}\n    */\n   #options = {\n      calculateTransform: false,\n      initialHelper: void 0,\n      ortho: true,\n      transformSubscribed: false\n   };\n\n   /**\n    * The associated parent for positional data tracking. Used in validators.\n    *\n    * @type {PositionParent}\n    */\n   #parent;\n\n   /**\n    * @type {StorePosition}\n    */\n   #stores;\n\n   /**\n    * Stores an instance of the computer styles for the target element.\n    *\n    * @type {StyleCache}\n    */\n   #styleCache;\n\n   /**\n    * Stores the subscribers.\n    *\n    * @type {(function(PositionData): void)[]}\n    */\n   #subscriptions = [];\n\n   /**\n    * @type {Transforms}\n    */\n   #transforms = new Transforms();\n\n   /**\n    * @type {UpdateElementData}\n    */\n   #updateElementData;\n\n   /**\n    * Stores the UpdateElementManager wait promise.\n    *\n    * @type {Promise}\n    */\n   #updateElementPromise;\n\n   /**\n    * @type {AdapterValidators}\n    */\n   #validators;\n\n   /**\n    * @type {ValidatorData[]}\n    */\n   #validatorData;\n\n   /**\n    * @type {PositionStateAPI}\n    */\n   #state = new PositionStateAPI(this, this.#data, this.#transforms);\n\n   /**\n    * @returns {AnimationGroupAPI} Public Animation API.\n    */\n   static get Animate() { return AnimationGroupAPI; }\n\n   /**\n    * @returns {{browserCentered?: Centered, Centered?: *}} Initial position helpers.\n    */\n   static get Initial() { return positionInitial; }\n\n   /**\n    * Returns TransformData class / constructor.\n    *\n    * @returns {TransformData} TransformData class / constructor.\n    */\n   static get TransformData() { return TransformData; }\n\n   /**\n    * Returns default validators.\n    *\n    * Note: `basicWindow` and `BasicBounds` will eventually be removed.\n    *\n    * @returns {{basicWindow?: BasicBounds, transformWindow?: TransformBounds, TransformBounds?: *, BasicBounds?: *}}\n    *  Available validators.\n    */\n   static get Validators() { return positionValidators; }\n\n   /**\n    * Returns a duplicate of a given position instance copying any options and validators.\n    *\n    * // TODO: Consider more safety over options processing.\n    *\n    * @param {Position}          position - A position instance.\n    *\n    * @param {PositionOptions}   options - Position options.\n    *\n    * @returns {Position} A duplicate position instance.\n    */\n   static duplicate(position, options)\n   {\n      if (!(position instanceof Position)) { throw new TypeError(`'position' is not an instance of Position.`); }\n\n      const newPosition = new Position(options);\n\n      newPosition.#options = Object.assign({}, position.#options, options);\n      newPosition.#validators.add(...position.#validators);\n\n      newPosition.set(position.#data);\n\n      return newPosition;\n   }\n\n   /**\n    * @param {PositionParent|PositionOptionsAll}   [parent] - A potential parent element or object w/ `elementTarget`\n    *                                                      getter. May also be the PositionOptions object w/ 1 argument.\n    *\n    * @param {PositionOptionsAll}   [options] - Default values.\n    */\n   constructor(parent, options)\n   {\n      // Test if `parent` is a plain object; if so treat as options object.\n      if (isPlainObject(parent))\n      {\n         options = parent;\n      }\n      else\n      {\n         this.#parent = parent;\n      }\n\n      const data = this.#data;\n      const transforms = this.#transforms;\n\n      this.#styleCache = new StyleCache();\n\n      const updateData = new UpdateElementData();\n\n      updateData.changeSet = this.#positionChangeSet;\n      updateData.data = this.#data;\n      updateData.options = this.#options;\n      updateData.styleCache = this.#styleCache;\n      updateData.subscriptions = this.#subscriptions;\n      updateData.transforms = this.#transforms;\n\n      this.#updateElementData = updateData;\n\n      if (typeof options === 'object')\n      {\n         // Set Position options\n         if (typeof options.calculateTransform === 'boolean')\n         {\n            this.#options.calculateTransform = options.calculateTransform;\n         }\n\n         if (typeof options.ortho === 'boolean')\n         {\n            this.#options.ortho = options.ortho;\n         }\n\n         // Set default values from options.\n\n         if (Number.isFinite(options.height) || options.height === 'auto' || options.height === 'inherit' ||\n          options.height === null)\n         {\n            data.height = updateData.dimensionData.height = typeof options.height === 'number' ?\n             Math.round(options.height) : options.height;\n         }\n\n         if (Number.isFinite(options.left) || options.left === null)\n         {\n            data.left = typeof options.left === 'number' ? Math.round(options.left) : options.left;\n         }\n\n         if (Number.isFinite(options.maxHeight) || options.maxHeight === null)\n         {\n            data.maxHeight = typeof options.maxHeight === 'number' ? Math.round(options.maxHeight) : options.maxHeight;\n         }\n\n         if (Number.isFinite(options.maxWidth) || options.maxWidth === null)\n         {\n            data.maxWidth = typeof options.maxWidth === 'number' ? Math.round(options.maxWidth) : options.maxWidth;\n         }\n\n         if (Number.isFinite(options.minHeight) || options.minHeight === null)\n         {\n            data.minHeight = typeof options.minHeight === 'number' ? Math.round(options.minHeight) : options.minHeight;\n         }\n\n         if (Number.isFinite(options.minWidth) || options.minWidth === null)\n         {\n            data.minWidth = typeof options.minWidth === 'number' ? Math.round(options.minWidth) : options.minWidth;\n         }\n\n         if (Number.isFinite(options.rotateX) || options.rotateX === null)\n         {\n            transforms.rotateX = data.rotateX = options.rotateX;\n         }\n\n         if (Number.isFinite(options.rotateY) || options.rotateY === null)\n         {\n            transforms.rotateY = data.rotateY = options.rotateY;\n         }\n\n         if (Number.isFinite(options.rotateZ) || options.rotateZ === null)\n         {\n            transforms.rotateZ = data.rotateZ = options.rotateZ;\n         }\n\n         if (Number.isFinite(options.scale) || options.scale === null)\n         {\n            transforms.scale = data.scale = options.scale;\n         }\n\n         if (Number.isFinite(options.top) || options.top === null)\n         {\n            data.top = typeof options.top === 'number' ? Math.round(options.top) : options.top;\n         }\n\n         if (typeof options.transformOrigin === 'string' || options.transformOrigin === null)\n         {\n            data.transformOrigin = constants.transformOrigins.includes(options.transformOrigin) ?\n             options.transformOrigin : null;\n         }\n\n         if (Number.isFinite(options.translateX) || options.translateX === null)\n         {\n            transforms.translateX = data.translateX = options.translateX;\n         }\n\n         if (Number.isFinite(options.translateY) || options.translateY === null)\n         {\n            transforms.translateY = data.translateY = options.translateY;\n         }\n\n         if (Number.isFinite(options.translateZ) || options.translateZ === null)\n         {\n            transforms.translateZ = data.translateZ = options.translateZ;\n         }\n\n         if (Number.isFinite(options.width) || options.width === 'auto' || options.width === 'inherit' ||\n          options.width === null)\n         {\n            data.width = updateData.dimensionData.width = typeof options.width === 'number' ?\n             Math.round(options.width) : options.width;\n         }\n\n         if (Number.isFinite(options.zIndex) || options.zIndex === null)\n         {\n            data.zIndex = typeof options.zIndex === 'number' ? Math.round(options.zIndex) : options.zIndex;\n         }\n      }\n\n      this.#stores = {\n         // The main properties for manipulating Position.\n         height: propertyStore(this, 'height'),\n         left: propertyStore(this, 'left'),\n         rotateX: propertyStore(this, 'rotateX'),\n         rotateY: propertyStore(this, 'rotateY'),\n         rotateZ: propertyStore(this, 'rotateZ'),\n         scale: propertyStore(this, 'scale'),\n         top: propertyStore(this, 'top'),\n         transformOrigin: propertyStore(this, 'transformOrigin'),\n         translateX: propertyStore(this, 'translateX'),\n         translateY: propertyStore(this, 'translateY'),\n         translateZ: propertyStore(this, 'translateZ'),\n         width: propertyStore(this, 'width'),\n         zIndex: propertyStore(this, 'zIndex'),\n\n         // Stores that control validation when width / height is not `auto`.\n         maxHeight: propertyStore(this, 'maxHeight'),\n         maxWidth: propertyStore(this, 'maxWidth'),\n         minHeight: propertyStore(this, 'minHeight'),\n         minWidth: propertyStore(this, 'minWidth'),\n\n         // Readable stores based on updates or from resize observer changes.\n         dimension: { subscribe: updateData.storeDimension.subscribe },\n         element: { subscribe: this.#styleCache.stores.element.subscribe },\n         resizeContentHeight: { subscribe: this.#styleCache.stores.resizeContentHeight.subscribe },\n         resizeContentWidth: { subscribe: this.#styleCache.stores.resizeContentWidth.subscribe },\n         resizeOffsetHeight: { subscribe: this.#styleCache.stores.resizeOffsetHeight.subscribe },\n         resizeOffsetWidth: { subscribe: this.#styleCache.stores.resizeOffsetWidth.subscribe },\n         transform: { subscribe: updateData.storeTransform.subscribe },\n\n         // Protected store that should only be set by resizeObserver action.\n         resizeObserved: this.#styleCache.stores.resizeObserved,\n      };\n\n      // When resize change from any applied resizeObserver action automatically set data for new validation run.\n      // A resizeObserver prop should be set to true for ApplicationShell components or usage of resizeObserver action\n      // to monitor for changes. This should only be used on elements that have 'auto' for width or height.\n      subscribeIgnoreFirst(this.#stores.resizeObserved, (resizeData) =>\n      {\n         const parent = this.#parent;\n         const el = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n\n         // Only invoke set if there is a target element and the resize data has a valid offset width & height.\n         if (el instanceof HTMLElement && Number.isFinite(resizeData?.offsetWidth) &&\n          Number.isFinite(resizeData?.offsetHeight))\n         {\n            this.set(data);\n         }\n      });\n\n      this.#stores.transformOrigin.values = constants.transformOrigins;\n\n      [this.#validators, this.#validatorData] = new AdapterValidators();\n\n      if (options?.initial || options?.positionInitial)\n      {\n         const initialHelper = options.initial ?? options.positionInitial;\n\n         if (typeof initialHelper?.getLeft !== 'function' || typeof initialHelper?.getTop !== 'function')\n         {\n            throw new Error(\n             `'options.initial' position helper does not contain 'getLeft' and / or 'getTop' functions.`);\n         }\n\n         this.#options.initialHelper = options.initial;\n      }\n\n      if (options?.validator)\n      {\n         if (isIterable(options?.validator)) { this.validators.add(...options.validator); }\n         else { this.validators.add(options.validator); }\n      }\n   }\n\n   /**\n    * Returns the animation API.\n    *\n    * @returns {AnimationAPI} Animation API.\n    */\n   get animate()\n   {\n      return this.#animate;\n   }\n\n   /**\n    * Returns the dimension data for the readable store.\n    *\n    * @returns {{width: number | 'auto', height: number | 'auto'}} Dimension data.\n    */\n   get dimension()\n   {\n      return this.#updateElementData.dimensionData;\n   }\n\n   /**\n    * Returns the current HTMLElement being positioned.\n    *\n    * @returns {HTMLElement|undefined} Current HTMLElement being positioned.\n    */\n   get element()\n   {\n      return this.#styleCache.el;\n   }\n\n   /**\n    * Returns a promise that is resolved on the next element update with the time of the update.\n    *\n    * @returns {Promise<number>} Promise resolved on element update.\n    */\n   get elementUpdated()\n   {\n      return this.#updateElementPromise;\n   }\n\n   /**\n    * Returns the associated {@link PositionParent} instance.\n    *\n    * @returns {PositionParent} The PositionParent instance.\n    */\n   get parent() { return this.#parent; }\n\n   /**\n    * Returns the state API.\n    *\n    * @returns {PositionStateAPI} Position state API.\n    */\n   get state() { return this.#state; }\n\n   /**\n    * Returns the derived writable stores for individual data variables.\n    *\n    * @returns {StorePosition} Derived / writable stores.\n    */\n   get stores() { return this.#stores; }\n\n   /**\n    * Returns the transform data for the readable store.\n    *\n    * @returns {TransformData} Transform Data.\n    */\n   get transform()\n   {\n      return this.#updateElementData.transformData;\n   }\n\n   /**\n    * Returns the validators.\n    *\n    * @returns {AdapterValidators} validators.\n    */\n   get validators() { return this.#validators; }\n\n   /**\n    * Sets the associated {@link PositionParent} instance. Resets the style cache and default data.\n    *\n    * @param {PositionParent|void} parent - A PositionParent instance.\n    */\n   set parent(parent)\n   {\n      if (parent !== void 0 && !(parent instanceof HTMLElement) && !isObject(parent))\n      {\n         throw new TypeError(`'parent' is not an HTMLElement, object, or undefined.`);\n      }\n\n      this.#parent = parent;\n\n      // Reset any stored default data & the style cache.\n      this.#state.remove({ name: '#defaultData' });\n      this.#styleCache.reset();\n\n      // If a parent is defined then invoke set to update any parent element.\n      if (parent) { this.set(this.#data); }\n   }\n\n// Data accessors ----------------------------------------------------------------------------------------------------\n\n   /**\n    * @returns {number|'auto'|'inherit'|null} height\n    */\n   get height() { return this.#data.height; }\n\n   /**\n    * @returns {number|null} left\n    */\n   get left() { return this.#data.left; }\n\n   /**\n    * @returns {number|null} maxHeight\n    */\n   get maxHeight() { return this.#data.maxHeight; }\n\n   /**\n    * @returns {number|null} maxWidth\n    */\n   get maxWidth() { return this.#data.maxWidth; }\n\n   /**\n    * @returns {number|null} minHeight\n    */\n   get minHeight() { return this.#data.minHeight; }\n\n   /**\n    * @returns {number|null} minWidth\n    */\n   get minWidth() { return this.#data.minWidth; }\n\n   /**\n    * @returns {number|null} rotateX\n    */\n   get rotateX() { return this.#data.rotateX; }\n\n   /**\n    * @returns {number|null} rotateY\n    */\n   get rotateY() { return this.#data.rotateY; }\n\n   /**\n    * @returns {number|null} rotateZ\n    */\n   get rotateZ() { return this.#data.rotateZ; }\n\n   /**\n    * @returns {number|null} alias for rotateZ\n    */\n   get rotation() { return this.#data.rotateZ; }\n\n   /**\n    * @returns {number|null} scale\n    */\n   get scale() { return this.#data.scale; }\n\n   /**\n    * @returns {number|null} top\n    */\n   get top() { return this.#data.top; }\n\n   /**\n    * @returns {string} transformOrigin\n    */\n   get transformOrigin() { return this.#data.transformOrigin; }\n\n   /**\n    * @returns {number|null} translateX\n    */\n   get translateX() { return this.#data.translateX; }\n\n   /**\n    * @returns {number|null} translateY\n    */\n   get translateY() { return this.#data.translateY; }\n\n   /**\n    * @returns {number|null} translateZ\n    */\n   get translateZ() { return this.#data.translateZ; }\n\n   /**\n    * @returns {number|'auto'|'inherit'|null} width\n    */\n   get width() { return this.#data.width; }\n\n   /**\n    * @returns {number|null} z-index\n    */\n   get zIndex() { return this.#data.zIndex; }\n\n   /**\n    * @param {number|string|null} height -\n    */\n   set height(height)\n   {\n      this.#stores.height.set(height);\n   }\n\n   /**\n    * @param {number|string|null} left -\n    */\n   set left(left)\n   {\n      this.#stores.left.set(left);\n   }\n\n   /**\n    * @param {number|string|null} maxHeight -\n    */\n   set maxHeight(maxHeight)\n   {\n      this.#stores.maxHeight.set(maxHeight);\n   }\n\n   /**\n    * @param {number|string|null} maxWidth -\n    */\n   set maxWidth(maxWidth)\n   {\n      this.#stores.maxWidth.set(maxWidth);\n   }\n\n   /**\n    * @param {number|string|null} minHeight -\n    */\n   set minHeight(minHeight)\n   {\n      this.#stores.minHeight.set(minHeight);\n   }\n\n   /**\n    * @param {number|string|null} minWidth -\n    */\n   set minWidth(minWidth)\n   {\n      this.#stores.minWidth.set(minWidth);\n   }\n\n   /**\n    * @param {number|string|null} rotateX -\n    */\n   set rotateX(rotateX)\n   {\n      this.#stores.rotateX.set(rotateX);\n   }\n\n   /**\n    * @param {number|string|null} rotateY -\n    */\n   set rotateY(rotateY)\n   {\n      this.#stores.rotateY.set(rotateY);\n   }\n\n   /**\n    * @param {number|string|null} rotateZ -\n    */\n   set rotateZ(rotateZ)\n   {\n      this.#stores.rotateZ.set(rotateZ);\n   }\n\n   /**\n    * @param {number|string|null} rotateZ - alias for rotateZ\n    */\n   set rotation(rotateZ)\n   {\n      this.#stores.rotateZ.set(rotateZ);\n   }\n\n   /**\n    * @param {number|string|null} scale -\n    */\n   set scale(scale)\n   {\n      this.#stores.scale.set(scale);\n   }\n\n   /**\n    * @param {number|string|null} top -\n    */\n   set top(top)\n   {\n      this.#stores.top.set(top);\n   }\n\n   /**\n    * @param {string} transformOrigin -\n    */\n   set transformOrigin(transformOrigin)\n   {\n      if (constants.transformOrigins.includes(transformOrigin)) { this.#stores.transformOrigin.set(transformOrigin); }\n   }\n\n   /**\n    * @param {number|string|null} translateX -\n    */\n   set translateX(translateX)\n   {\n      this.#stores.translateX.set(translateX);\n   }\n\n   /**\n    * @param {number|string|null} translateY -\n    */\n   set translateY(translateY)\n   {\n      this.#stores.translateY.set(translateY);\n   }\n\n   /**\n    * @param {number|string|null} translateZ -\n    */\n   set translateZ(translateZ)\n   {\n      this.#stores.translateZ.set(translateZ);\n   }\n\n   /**\n    * @param {number|string|null} width -\n    */\n   set width(width)\n   {\n      this.#stores.width.set(width);\n   }\n\n   /**\n    * @param {number|string|null} zIndex -\n    */\n   set zIndex(zIndex)\n   {\n      this.#stores.zIndex.set(zIndex);\n   }\n\n   /**\n    * Assigns current position to object passed into method.\n    *\n    * @param {object|PositionData}  [position] - Target to assign current position data.\n    *\n    * @param {PositionGetOptions}   [options] - Defines options for specific keys and substituting null for numeric\n    *                                           default values.\n    *\n    * @returns {PositionData} Passed in object with current position data.\n    */\n   get(position = {}, options)\n   {\n      const keys = options?.keys;\n      const excludeKeys = options?.exclude;\n      const numeric = options?.numeric ?? false;\n\n      if (isIterable(keys))\n      {\n         // Replace any null values potentially with numeric default values.\n         if (numeric)\n         {\n            for (const key of keys) { position[key] = this[key] ?? constants.numericDefaults[key]; }\n         }\n         else // Accept current values.\n         {\n            for (const key of keys) { position[key] = this[key]; }\n         }\n\n         // Remove any excluded keys.\n         if (isIterable(excludeKeys))\n         {\n            for (const key of excludeKeys) { delete position[key]; }\n         }\n\n         return position;\n      }\n      else\n      {\n         const data = Object.assign(position, this.#data);\n\n         // Remove any excluded keys.\n         if (isIterable(excludeKeys))\n         {\n            for (const key of excludeKeys) { delete data[key]; }\n         }\n\n         // Potentially set numeric defaults.\n         if (numeric) { constants.setNumericDefaults(data); }\n\n         return data;\n      }\n   }\n\n   /**\n    * @returns {PositionData} Current position data.\n    */\n   toJSON()\n   {\n      return Object.assign({}, this.#data);\n   }\n\n   /**\n    * All calculation and updates of position are implemented in {@link Position}. This allows position to be fully\n    * reactive and in control of updating inline styles for the application.\n    *\n    * Note: the logic for updating position is improved and changes a few aspects from the default\n    * {@link Application.setPosition}. The gate on `popOut` is removed, so to ensure no positional application occurs\n    * popOut applications can set `this.options.positionable` to false ensuring no positional inline styles are\n    * applied.\n    *\n    * The initial set call on an application with a target element will always set width / height as this is\n    * necessary for correct calculations.\n    *\n    * When a target element is present updated styles are applied after validation. To modify the behavior of set\n    * implement one or more validator functions and add them from the application via\n    * `this.position.validators.add(<Function>)`.\n    *\n    * Updates to any target element are decoupled from the underlying Position data. This method returns this instance\n    * that you can then await on the target element inline style update by using {@link Position.elementUpdated}.\n    *\n    * @param {PositionDataExtended} [position] - Position data to set.\n    *\n    * @returns {Position} This Position instance.\n    */\n   set(position = {})\n   {\n      if (typeof position !== 'object') { throw new TypeError(`Position - set error: 'position' is not an object.`); }\n\n      const parent = this.#parent;\n\n      // An early out to prevent `set` from taking effect if options `positionable` is false.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return this;\n      }\n\n      // Callers can specify to immediately update an associated element. This is useful if set is called from\n      // requestAnimationFrame / rAF. Library integrations like GSAP invoke set from rAF.\n      const immediateElementUpdate = position.immediateElementUpdate === true;\n\n      const data = this.#data;\n      const transforms = this.#transforms;\n\n      // Find the target HTML element and verify that it is connected storing it in `el`.\n      const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n      const el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\n\n      const changeSet = this.#positionChangeSet;\n      const styleCache = this.#styleCache;\n\n      if (el)\n      {\n         // Cache the computed styles of the element.\n         if (!styleCache.hasData(el))\n         {\n            styleCache.update(el);\n\n            // Add will-change property if not already set in inline or computed styles.\n            if (!styleCache.hasWillChange)\n            {\n               el.style.willChange = this.#options.ortho ? 'transform' : 'top, left, transform';\n            }\n\n            // Update all properties / clear queued state.\n            changeSet.set(true);\n            this.#updateElementData.queued = false;\n         }\n\n         // Converts any relative string position data to numeric inputs.\n         convertRelative(position, this);\n\n         position = this.#updatePosition(position, parent, el, styleCache);\n\n         // Check if a validator cancelled the update.\n         if (position === null) { return this; }\n      }\n\n      if (Number.isFinite(position.left))\n      {\n         position.left = Math.round(position.left);\n\n         if (data.left !== position.left) { data.left = position.left; changeSet.left = true; }\n      }\n\n      if (Number.isFinite(position.top))\n      {\n         position.top = Math.round(position.top);\n\n         if (data.top !== position.top) { data.top = position.top; changeSet.top = true; }\n      }\n\n      if (Number.isFinite(position.maxHeight) || position.maxHeight === null)\n      {\n         position.maxHeight = typeof position.maxHeight === 'number' ? Math.round(position.maxHeight) : null;\n\n         if (data.maxHeight !== position.maxHeight) { data.maxHeight = position.maxHeight; changeSet.maxHeight = true; }\n      }\n\n      if (Number.isFinite(position.maxWidth) || position.maxWidth === null)\n      {\n         position.maxWidth = typeof position.maxWidth === 'number' ? Math.round(position.maxWidth) : null;\n\n         if (data.maxWidth !== position.maxWidth) { data.maxWidth = position.maxWidth; changeSet.maxWidth = true; }\n      }\n\n      if (Number.isFinite(position.minHeight) || position.minHeight === null)\n      {\n         position.minHeight = typeof position.minHeight === 'number' ? Math.round(position.minHeight) : null;\n\n         if (data.minHeight !== position.minHeight) { data.minHeight = position.minHeight; changeSet.minHeight = true; }\n      }\n\n      if (Number.isFinite(position.minWidth) || position.minWidth === null)\n      {\n         position.minWidth = typeof position.minWidth === 'number' ? Math.round(position.minWidth) : null;\n\n         if (data.minWidth !== position.minWidth) { data.minWidth = position.minWidth; changeSet.minWidth = true; }\n      }\n\n      if (Number.isFinite(position.rotateX) || position.rotateX === null)\n      {\n         if (data.rotateX !== position.rotateX)\n         {\n            data.rotateX = transforms.rotateX = position.rotateX;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.rotateY) || position.rotateY === null)\n      {\n         if (data.rotateY !== position.rotateY)\n         {\n            data.rotateY = transforms.rotateY = position.rotateY;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.rotateZ) || position.rotateZ === null)\n      {\n         if (data.rotateZ !== position.rotateZ)\n         {\n            data.rotateZ = transforms.rotateZ = position.rotateZ;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.scale) || position.scale === null)\n      {\n         position.scale = typeof position.scale === 'number' ? Math.max(0, Math.min(position.scale, 1000)) : null;\n\n         if (data.scale !== position.scale)\n         {\n            data.scale = transforms.scale = position.scale;\n            changeSet.transform = true;\n         }\n      }\n\n      if ((typeof position.transformOrigin === 'string' && constants.transformOrigins.includes(\n       position.transformOrigin)) || position.transformOrigin === null)\n      {\n         if (data.transformOrigin !== position.transformOrigin)\n         {\n            data.transformOrigin = position.transformOrigin;\n            changeSet.transformOrigin = true;\n         }\n      }\n\n      if (Number.isFinite(position.translateX) || position.translateX === null)\n      {\n         if (data.translateX !== position.translateX)\n         {\n            data.translateX = transforms.translateX = position.translateX;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.translateY) || position.translateY === null)\n      {\n         if (data.translateY !== position.translateY)\n         {\n            data.translateY = transforms.translateY = position.translateY;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.translateZ) || position.translateZ === null)\n      {\n         if (data.translateZ !== position.translateZ)\n         {\n            data.translateZ = transforms.translateZ = position.translateZ;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.zIndex))\n      {\n         position.zIndex = Math.round(position.zIndex);\n\n         if (data.zIndex !== position.zIndex) { data.zIndex = position.zIndex; changeSet.zIndex = true; }\n      }\n\n      if (Number.isFinite(position.width) || position.width === 'auto' || position.width === 'inherit' ||\n       position.width === null)\n      {\n         position.width = typeof position.width === 'number' ? Math.round(position.width) : position.width;\n\n         if (data.width !== position.width) { data.width = position.width; changeSet.width = true; }\n      }\n\n      if (Number.isFinite(position.height) || position.height === 'auto' || position.height === 'inherit' ||\n       position.height === null)\n      {\n         position.height = typeof position.height === 'number' ? Math.round(position.height) : position.height;\n\n         if (data.height !== position.height) { data.height = position.height; changeSet.height = true; }\n      }\n\n      if (el)\n      {\n         const defaultData = this.#state.getDefault();\n\n         // Set default data after first set operation that has a target element.\n         if (typeof defaultData !== 'object')\n         {\n            this.#state.save({ name: '#defaultData', ...Object.assign({}, data) });\n         }\n\n         // If `immediateElementUpdate` is true in position data passed to `set` then update the element immediately.\n         // This is for rAF based library integrations like GSAP.\n         if (immediateElementUpdate)\n         {\n            UpdateElementManager.immediate(el, this.#updateElementData);\n            this.#updateElementPromise = Promise.resolve(performance.now());\n         }\n         // Else if not queued then queue an update for the next rAF callback.\n         else if (!this.#updateElementData.queued)\n         {\n            this.#updateElementPromise = UpdateElementManager.add(el, this.#updateElementData);\n         }\n      }\n      else\n      {\n         // Notify main store subscribers.\n         UpdateElementManager.updateSubscribers(this.#updateElementData);\n      }\n\n      return this;\n   }\n\n   /**\n    *\n    * @param {function(PositionData): void} handler - Callback function that is invoked on update / changes. Receives\n    *                                                 a copy of the PositionData.\n    *\n    * @returns {(function(): void)} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\n\n      handler(Object.assign({}, this.#data));                     // call handler with current value\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n\n   /**\n    * @param {PositionDataExtended} opts -\n    *\n    * @param {number|null} opts.left -\n    *\n    * @param {number|null} opts.top -\n    *\n    * @param {number|null} opts.maxHeight -\n    *\n    * @param {number|null} opts.maxWidth -\n    *\n    * @param {number|null} opts.minHeight -\n    *\n    * @param {number|null} opts.minWidth -\n    *\n    * @param {number|'auto'|null} opts.width -\n    *\n    * @param {number|'auto'|null} opts.height -\n    *\n    * @param {number|null} opts.rotateX -\n    *\n    * @param {number|null} opts.rotateY -\n    *\n    * @param {number|null} opts.rotateZ -\n    *\n    * @param {number|null} opts.scale -\n    *\n    * @param {string} opts.transformOrigin -\n    *\n    * @param {number|null} opts.translateX -\n    *\n    * @param {number|null} opts.translateY -\n    *\n    * @param {number|null} opts.translateZ -\n    *\n    * @param {number|null} opts.zIndex -\n    *\n    * @param {number|null} opts.rotation - alias for rotateZ\n    *\n    * @param {*} opts.rest -\n    *\n    * @param {object} parent -\n    *\n    * @param {HTMLElement} el -\n    *\n    * @param {StyleCache} styleCache -\n    *\n    * @returns {null|PositionData} Updated position data or null if validation fails.\n    */\n   #updatePosition({\n      // Directly supported parameters\n      left, top, maxWidth, maxHeight, minWidth, minHeight, width, height, rotateX, rotateY, rotateZ, scale,\n       transformOrigin, translateX, translateY, translateZ, zIndex,\n\n      // Aliased parameters\n      rotation,\n\n      ...rest\n   } = {}, parent, el, styleCache)\n   {\n      let currentPosition = s_DATA_UPDATE.copy(this.#data);\n\n      // Update width if an explicit value is passed, or if no width value is set on the element.\n      if (el.style.width === '' || width !== void 0)\n      {\n         if (width === 'auto' || (currentPosition.width === 'auto' && width !== null))\n         {\n            currentPosition.width = 'auto';\n            width = styleCache.offsetWidth;\n         }\n         else if (width === 'inherit' || (currentPosition.width === 'inherit' && width !== null))\n         {\n            currentPosition.width = 'inherit';\n            width = styleCache.offsetWidth;\n         }\n         else\n         {\n            const newWidth = Number.isFinite(width) ? width : currentPosition.width;\n            currentPosition.width = width = Number.isFinite(newWidth) ? Math.round(newWidth) : styleCache.offsetWidth;\n         }\n      }\n      else\n      {\n         width = Number.isFinite(currentPosition.width) ? currentPosition.width : styleCache.offsetWidth;\n      }\n\n      // Update height if an explicit value is passed, or if no height value is set on the element.\n      if (el.style.height === '' || height !== void 0)\n      {\n         if (height === 'auto' || (currentPosition.height === 'auto' && height !== null))\n         {\n            currentPosition.height = 'auto';\n            height = styleCache.offsetHeight;\n         }\n         else if (height === 'inherit' || (currentPosition.height === 'inherit' && height !== null))\n         {\n            currentPosition.height = 'inherit';\n            height = styleCache.offsetHeight;\n         }\n         else\n         {\n            const newHeight = Number.isFinite(height) ? height : currentPosition.height;\n            currentPosition.height = height = Number.isFinite(newHeight) ? Math.round(newHeight) :\n             styleCache.offsetHeight;\n         }\n      }\n      else\n      {\n         height = Number.isFinite(currentPosition.height) ? currentPosition.height : styleCache.offsetHeight;\n      }\n\n      // Update left\n      if (Number.isFinite(left))\n      {\n         currentPosition.left = left;\n      }\n      else if (!Number.isFinite(currentPosition.left))\n      {\n         // Potentially use any initial position helper if available or set to 0.\n         currentPosition.left = typeof this.#options.initialHelper?.getLeft === 'function' ?\n          this.#options.initialHelper.getLeft(width) : 0;\n      }\n\n      // Update top\n      if (Number.isFinite(top))\n      {\n         currentPosition.top = top;\n      }\n      else if (!Number.isFinite(currentPosition.top))\n      {\n         // Potentially use any initial position helper if available or set to 0.\n         currentPosition.top = typeof this.#options.initialHelper?.getTop === 'function' ?\n          this.#options.initialHelper.getTop(height) : 0;\n      }\n\n      if (Number.isFinite(maxHeight) || maxHeight === null)\n      {\n         currentPosition.maxHeight = Number.isFinite(maxHeight) ? Math.round(maxHeight) : null;\n      }\n\n      if (Number.isFinite(maxWidth) || maxWidth === null)\n      {\n         currentPosition.maxWidth = Number.isFinite(maxWidth) ? Math.round(maxWidth) : null;\n      }\n\n      if (Number.isFinite(minHeight) || minHeight === null)\n      {\n         currentPosition.minHeight = Number.isFinite(minHeight) ? Math.round(minHeight) : null;\n      }\n\n      if (Number.isFinite(minWidth) || minWidth === null)\n      {\n         currentPosition.minWidth = Number.isFinite(minWidth) ? Math.round(minWidth) : null;\n      }\n\n      // Update rotate X/Y/Z, scale, z-index\n      if (Number.isFinite(rotateX) || rotateX === null) { currentPosition.rotateX = rotateX; }\n      if (Number.isFinite(rotateY) || rotateY === null) { currentPosition.rotateY = rotateY; }\n\n      // Handle alias for rotateZ. First check if `rotateZ` is valid and different from the current value. Next check if\n      // `rotation` is valid and use it for `rotateZ`.\n      if (rotateZ !== currentPosition.rotateZ && (Number.isFinite(rotateZ) || rotateZ === null))\n      {\n         currentPosition.rotateZ = rotateZ;\n      }\n      else if (rotation !== currentPosition.rotateZ && (Number.isFinite(rotation) || rotation === null))\n      {\n         currentPosition.rotateZ = rotation;\n      }\n\n      if (Number.isFinite(translateX) || translateX === null) { currentPosition.translateX = translateX; }\n      if (Number.isFinite(translateY) || translateY === null) { currentPosition.translateY = translateY; }\n      if (Number.isFinite(translateZ) || translateZ === null) { currentPosition.translateZ = translateZ; }\n\n      if (Number.isFinite(scale) || scale === null)\n      {\n         currentPosition.scale = typeof scale === 'number' ? Math.max(0, Math.min(scale, 1000)) : null;\n      }\n\n      if (typeof transformOrigin === 'string' || transformOrigin === null)\n      {\n         currentPosition.transformOrigin = constants.transformOrigins.includes(transformOrigin) ? transformOrigin :\n          null;\n      }\n\n      if (Number.isFinite(zIndex) || zIndex === null)\n      {\n         currentPosition.zIndex = typeof zIndex === 'number' ? Math.round(zIndex) : zIndex;\n      }\n\n      const validatorData = this.#validatorData;\n\n      // If there are any validators allow them to potentially modify position data or reject the update.\n      if (validatorData.length)\n      {\n         s_VALIDATION_DATA.parent = parent;\n\n         s_VALIDATION_DATA.el = el;\n\n         s_VALIDATION_DATA.computed = styleCache.computed;\n\n         s_VALIDATION_DATA.transforms = this.#transforms;\n\n         s_VALIDATION_DATA.height = height;\n\n         s_VALIDATION_DATA.width = width;\n\n         s_VALIDATION_DATA.marginLeft = styleCache.marginLeft;\n\n         s_VALIDATION_DATA.marginTop = styleCache.marginTop;\n\n         s_VALIDATION_DATA.maxHeight = styleCache.maxHeight ?? currentPosition.maxHeight;\n\n         s_VALIDATION_DATA.maxWidth = styleCache.maxWidth ?? currentPosition.maxWidth;\n\n         // Given a parent w/ reactive state and is minimized ignore styleCache min-width/height.\n         const isMinimized = parent?.reactive?.minimized ?? false;\n\n         // Note the use of || for accessing the style cache as the left hand is ignored w/ falsy values such as '0'.\n         s_VALIDATION_DATA.minHeight = isMinimized ? currentPosition.minHeight ?? 0 :\n          styleCache.minHeight || (currentPosition.minHeight ?? 0);\n\n         s_VALIDATION_DATA.minWidth = isMinimized ? currentPosition.minWidth ?? 0 :\n          styleCache.minWidth || (currentPosition.minWidth ?? 0);\n\n         for (let cntr = 0; cntr < validatorData.length; cntr++)\n         {\n            s_VALIDATION_DATA.position = currentPosition;\n            s_VALIDATION_DATA.rest = rest;\n            currentPosition = validatorData[cntr].validator(s_VALIDATION_DATA);\n\n            if (currentPosition === null) { return null; }\n         }\n      }\n\n      // Return the updated position object.\n      return currentPosition;\n   }\n}\n\nconst s_DATA_UPDATE = new PositionData();\n\n/**\n * @type {ValidationData}\n */\nconst s_VALIDATION_DATA = {\n   position: void 0,\n   parent: void 0,\n   el: void 0,\n   computed: void 0,\n   transforms: void 0,\n   height: void 0,\n   width: void 0,\n   marginLeft: void 0,\n   marginTop: void 0,\n   maxHeight: void 0,\n   maxWidth: void 0,\n   minHeight: void 0,\n   minWidth: void 0,\n   rest: void 0\n};\n\nObject.seal(s_VALIDATION_DATA);\n\n/**\n * @typedef {object} InitialHelper\n *\n * @property {Function} getLeft - A function that takes the width parameter and returns the left position.\n *\n * @property {Function} getTop - A function that takes the height parameter and returns the top position.\n */\n\n/**\n * @typedef {object} PositionDataExtended\n *\n * @property {number|string|null} [height] -\n *\n * @property {number|string|null} [left] -\n *\n * @property {number|string|null} [maxHeight] -\n *\n * @property {number|string|null} [maxWidth] -\n *\n * @property {number|string|null} [minHeight] -\n *\n * @property {number|string|null} [minWidth] -\n *\n * @property {number|string|null} [rotateX] -\n *\n * @property {number|string|null} [rotateY] -\n *\n * @property {number|string|null} [rotateZ] -\n *\n * @property {number|string|null} [scale] -\n *\n * @property {number|string|null} [top] -\n *\n * @property {string|null} [transformOrigin] -\n *\n * @property {number|string|null} [translateX] -\n *\n * @property {number|string|null} [translateY] -\n *\n * @property {number|string|null} [translateZ] -\n *\n * @property {number|string|null} [width] -\n *\n * @property {number|string|null} [zIndex] -\n *\n * Extended properties -----------------------------------------------------------------------------------------------\n *\n * @property {boolean} [immediateElementUpdate] - When true any associated element is updated immediately.\n *\n * @property {number|null} [rotation] - Alias for `rotateZ`.\n */\n\n/**\n * @typedef {object} PositionGetOptions\n *\n * @property {Iterable<string>} keys - When provided only these keys are copied.\n *\n * @property {Iterable<string>} exclude - When provided these keys are excluded.\n *\n * @property {boolean} numeric - When true any `null` values are converted into defaults.\n */\n\n/**\n * @typedef {object} PositionOptions - Options set in constructor.\n *\n * @property {boolean} calculateTransform - When true always calculate transform data.\n *\n * @property {InitialHelper} initialHelper - Provides a helper for setting initial position data.\n *\n * @property {boolean} ortho - Sets Position to orthographic mode using just transform / matrix3d for positioning.\n *\n * @property {boolean} transformSubscribed - Set to true when there are subscribers to the readable transform store.\n */\n\n/**\n * @typedef {PositionOptions & PositionData} PositionOptionsAll\n */\n\n/**\n * @typedef {HTMLElement | object} PositionParent\n *\n * @property {Function} [elementTarget] - Potentially returns any parent object.\n */\n\n/**\n * @typedef {object} ResizeObserverData\n *\n * @property {number|undefined} contentHeight -\n *\n * @property {number|undefined} contentWidth -\n *\n * @property {number|undefined} offsetHeight -\n *\n * @property {number|undefined} offsetWidth -\n */\n\n/**\n * @typedef {object} StorePosition - Provides individual writable stores for {@link Position}.\n *\n * @property {import('svelte/store').Readable<{width: number, height: number}>} dimension - Readable store for dimension\n *                                                                                          data.\n *\n * @property {import('svelte/store').Readable<HTMLElement>} element - Readable store for current element.\n *\n * @property {import('svelte/store').Writable<number|null>} left - Derived store for `left` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} top - Derived store for `top` updates.\n *\n * @property {import('svelte/store').Writable<number|'auto'|null>} width - Derived store for `width` updates.\n *\n * @property {import('svelte/store').Writable<number|'auto'|null>} height - Derived store for `height` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} maxHeight - Derived store for `maxHeight` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} maxWidth - Derived store for `maxWidth` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} minHeight - Derived store for `minHeight` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} minWidth - Derived store for `minWidth` updates.\n *\n * @property {import('svelte/store').Readable<number|undefined>} resizeContentHeight - Readable store for `contentHeight`.\n *\n * @property {import('svelte/store').Readable<number|undefined>} resizeContentWidth - Readable store for `contentWidth`.\n *\n * @property {import('svelte/store').Writable<ResizeObserverData>} resizeObserved - Protected store for resize observer updates.\n *\n * @property {import('svelte/store').Readable<number|undefined>} resizeOffsetHeight - Readable store for `offsetHeight`.\n *\n * @property {import('svelte/store').Readable<number|undefined>} resizeOffsetWidth - Readable store for `offsetWidth`.\n *\n * @property {import('svelte/store').Writable<number|null>} rotate - Derived store for `rotate` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} rotateX - Derived store for `rotateX` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} rotateY - Derived store for `rotateY` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} rotateZ - Derived store for `rotateZ` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} scale - Derived store for `scale` updates.\n *\n * @property {import('svelte/store').Readable<TransformData>} transform - Readable store for transform data.\n *\n * @property {import('svelte/store').Writable<string>} transformOrigin - Derived store for `transformOrigin`.\n *\n * @property {import('svelte/store').Writable<number|null>} translateX - Derived store for `translateX` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} translateY - Derived store for `translateY` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} translateZ - Derived store for `translateZ` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} zIndex - Derived store for `zIndex` updates.\n */\n\n/**\n * @typedef {object} ValidationData\n *\n * @property {PositionData} position -\n *\n * @property {PositionParent} parent -\n *\n * @property {HTMLElement} el -\n *\n * @property {CSSStyleDeclaration} computed -\n *\n * @property {Transforms} transforms -\n *\n * @property {number} height -\n *\n * @property {number} width -\n *\n * @property {number|undefined} marginLeft -\n *\n * @property {number|undefined} marginTop -\n *\n * @property {number|undefined} maxHeight -\n *\n * @property {number|undefined} maxWidth -\n *\n * @property {number|undefined} minHeight -\n *\n * @property {number|undefined} minWidth -\n *\n * @property {object} rest - The rest of any data submitted to {@link Position.set}\n */\n","import { linear }    from \"svelte/easing\";\nimport { lerp }      from '@typhonjs-fvtt/runtime/svelte/math';\nimport { isObject }  from '@typhonjs-fvtt/runtime/svelte/util';\n\nexport class ApplicationState\n{\n   /** @type {ApplicationShellExt} */\n   #application;\n\n   /** @type {Map<string, ApplicationData>} */\n   #dataSaved = new Map();\n\n   /**\n    * @param {ApplicationShellExt}   application - The application.\n    */\n   constructor(application)\n   {\n      this.#application = application;\n   }\n\n   /**\n    * Returns current application state along with any extra data passed into method.\n    *\n    * @param {object} [extra] - Extra data to add to application state.\n    *\n    * @returns {ApplicationData} Passed in object with current application state.\n    */\n   get(extra = {})\n   {\n      return Object.assign(extra, {\n         position: this.#application?.position?.get(),\n         beforeMinimized: this.#application?.position?.state.get({ name: '#beforeMinimized' }),\n         options: Object.assign({}, this.#application?.options),\n         ui: { minimized: this.#application?.reactive?.minimized }\n      });\n   }\n\n   /**\n    * Returns any stored save state by name.\n    *\n    * @param {string}   name - Saved data set name.\n    *\n    * @returns {ApplicationData} The saved data set.\n    */\n   getSave({ name })\n   {\n      if (typeof name !== 'string')\n      {\n         throw new TypeError(`ApplicationState - getSave error: 'name' is not a string.`);\n      }\n\n      return this.#dataSaved.get(name);\n   }\n\n   /**\n    * Removes and returns any application state by name.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Name to remove and retrieve.\n    *\n    * @returns {ApplicationData} Saved application data.\n    */\n   remove({ name })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`ApplicationState - remove: 'name' is not a string.`); }\n\n      const data = this.#dataSaved.get(name);\n      this.#dataSaved.delete(name);\n\n      return data;\n   }\n\n   /**\n    * Restores a saved application state returning the data. Several optional parameters are available\n    * to control whether the restore action occurs silently (no store / inline styles updates), animates\n    * to the stored data, or simply sets the stored data. Restoring via {@link AnimationAPI.to} allows\n    * specification of the duration, easing, and interpolate functions along with configuring a Promise to be\n    * returned if awaiting the end of the animation.\n    *\n    * @param {object}            params - Parameters\n    *\n    * @param {string}            params.name - Saved data set name.\n    *\n    * @param {boolean}           [params.remove=false] - Remove data set.\n    *\n    * @param {boolean}           [params.async=false] - If animating return a Promise that resolves with any saved data.\n    *\n    * @param {boolean}           [params.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}            [params.duration=0.1] - Duration in seconds.\n    *\n    * @param {Function}          [params.ease=linear] - Easing function.\n    *\n    * @param {Function}          [params.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {ApplicationData|Promise<ApplicationData>} Saved application data.\n    */\n   restore({ name, remove = false, async = false, animateTo = false, duration = 0.1, ease = linear,\n    interpolate = lerp })\n   {\n      if (typeof name !== 'string')\n      {\n         throw new TypeError(`ApplicationState - restore error: 'name' is not a string.`);\n      }\n\n      const dataSaved = this.#dataSaved.get(name);\n\n      if (dataSaved)\n      {\n         if (remove) { this.#dataSaved.delete(name); }\n\n         if (async)\n         {\n            return this.set(dataSaved, { async, animateTo, duration, ease, interpolate }).then(() => dataSaved);\n         }\n         else\n         {\n            this.set(dataSaved, { async, animateTo, duration, ease, interpolate });\n         }\n      }\n\n      return dataSaved;\n   }\n\n   /**\n    * Saves current application state with the opportunity to add extra data to the saved state.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - name to index this saved data.\n    *\n    * @param {...*}     [options.extra] - Extra data to add to saved data.\n    *\n    * @returns {ApplicationData} Current application data\n    */\n   save({ name, ...extra })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`ApplicationState - save error: 'name' is not a string.`); }\n\n      const data = this.get(extra);\n\n      this.#dataSaved.set(name, data);\n\n      return data;\n   }\n\n   /**\n    * Restores a saved application state returning the data. Several optional parameters are available\n    * to control whether the restore action occurs silently (no store / inline styles updates), animates\n    * to the stored data, or simply sets the stored data. Restoring via {@link AnimationAPI.to} allows\n    * specification of the duration, easing, and interpolate functions along with configuring a Promise to be\n    * returned if awaiting the end of the animation.\n    *\n    * Note: If serializing application state any minimized apps will use the before minimized state on initial render\n    * of the app as it is currently not possible to render apps with Foundry VTT core API in the minimized state.\n    *\n    * TODO: THIS METHOD NEEDS TO BE REFACTORED WHEN TRL IS MADE INTO A STANDALONE FRAMEWORK.\n    *\n    * @param {ApplicationData}   data - Saved data set name.\n    *\n    * @param {object}            [opts] - Optional parameters\n    *\n    * @param {boolean}           [opts.async=false] - If animating return a Promise that resolves with any saved data.\n    *\n    * @param {boolean}           [opts.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}            [opts.duration=0.1] - Duration in seconds.\n    *\n    * @param {Function}          [opts.ease=linear] - Easing function.\n    *\n    * @param {Function}          [opts.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {ApplicationShellExt|Promise<ApplicationShellExt>} When synchronous the application or Promise when\n    *                                                             animating resolving with application.\n    */\n   set(data, { async = false, animateTo = false, duration = 0.1, ease = linear, interpolate = lerp } = {})\n   {\n      if (!isObject(data))\n      {\n         throw new TypeError(`ApplicationState - restore error: 'data' is not an object.`);\n      }\n\n      const application = this.#application;\n\n      if (!isObject(data?.position))\n      {\n         console.warn(`ApplicationState.set warning: 'data.position' is not an object.`);\n         return application;\n      }\n\n      // TODO: TAKE NOTE THAT WE ARE ACCESSING A FOUNDRY APP v1 GETTER HERE TO DETERMINE IF APPLICATION IS RENDERED.\n      // TODO: THIS NEEDS TO BE REFACTORED WHEN CONVERTING TRL TO A GENERIC FRAMEWORK.\n      const rendered = application.rendered;\n\n      if (animateTo && !rendered)\n      {\n         console.warn(`ApplicationState.set warning: Application is not rendered and 'animateTo' is true.`);\n         return application;\n      }\n\n      // Update data directly with no store or inline style updates.\n      if (animateTo)  // Animate to saved data.\n      {\n         // Provide special handling to potentially change transform origin as this parameter is not animated.\n         if (data.position.transformOrigin !== application.position.transformOrigin)\n         {\n            application.position.transformOrigin = data.position.transformOrigin;\n         }\n\n         if (isObject(data?.ui))\n         {\n            const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\n\n            if (application?.reactive?.minimized && !minimized)\n            {\n               application.maximize({ animate: false, duration: 0 });\n            }\n         }\n\n         const promise = application.position.animate.to(data.position,\n          { duration, ease, interpolate }).finished.then((cancelled) =>\n         {\n            if (cancelled) { return application; }\n\n            // Merge in saved options to application.\n            if (isObject(data?.options))\n            {\n               application?.reactive.mergeOptions(data.options);\n            }\n\n            if (isObject(data?.ui))\n            {\n               const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\n\n               // Application is currently minimized and stored state is not, so reset minimized state without\n               // animation.\n               if (!application?.reactive?.minimized && minimized)\n               {\n                  application.minimize({ animate: false, duration: 0 });\n               }\n            }\n\n            if (isObject(data?.beforeMinimized))\n            {\n               application.position.state.set({ name: '#beforeMinimized', ...data.beforeMinimized });\n            }\n\n            return application;\n         });\n\n         // Return a Promise with the application that resolves after animation ends.\n         if (async) { return promise; }\n      }\n      else\n      {\n         if (rendered)\n         {\n            // Merge in saved options to application.\n            if (isObject(data?.options))\n            {\n               application?.reactive.mergeOptions(data.options);\n            }\n\n            if (isObject(data?.ui))\n            {\n               const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\n\n               // Application is currently minimized and stored state is not, so reset minimized state without\n               // animation.\n               if (application?.reactive?.minimized && !minimized)\n               {\n                  application.maximize({ animate: false, duration: 0 });\n               }\n               else if (!application?.reactive?.minimized && minimized)\n               {\n                  application.minimize({ animate: false, duration });\n               }\n            }\n\n            if (isObject(data?.beforeMinimized))\n            {\n               application.position.state.set({ name: '#beforeMinimized', ...data.beforeMinimized });\n            }\n\n            // Default options is to set data for an immediate update.\n            application.position.set(data.position);\n         }\n         else\n         {\n            // When not rendered set position to the 'beforeMinimized' data if it exists otherwise set w/ 'position'.\n            // Currently w/ Foundry core Application API it is impossible to initially render an app in the minimized\n            // state.\n\n            let positionData = data.position;\n\n            if (isObject(data.beforeMinimized))\n            {\n               // Take before minimized data.\n               positionData = data.beforeMinimized;\n\n               // Apply position left / top to before minimized data. This covers the case when an app is minimized,\n               // but then moved. This allows restoration of the before minimized parameters w/ the last position\n               // location.\n               positionData.left = data.position.left;\n               positionData.top = data.position.top;\n            }\n\n            application.position.set(positionData);\n         }\n      }\n\n      return application;\n   }\n}\n\n/**\n * @typedef {object} ApplicationData\n *\n * @property {PositionDataExtended}   position - Application position.\n *\n * @property {object}         beforeMinimized - Any application saved position state for #beforeMinimized\n *\n * @property {object}         options - Application options.\n *\n * @property {object}         ui - Application UI state.\n */\n","/**\n * Provides a helper class for {@link SvelteApplication} by combining all methods that work on the {@link SvelteData[]}\n * of mounted components. This class is instantiated and can be retrieved by the getter `svelte` via SvelteApplication.\n */\nexport class GetSvelteData\n{\n   /**\n    * @type {MountedAppShell[]|null[]}\n    */\n   #applicationShellHolder;\n\n   /**\n    * @type {SvelteData[]}\n    */\n   #svelteData;\n\n   /**\n    * Keep a direct reference to the SvelteData array in an associated {@link SvelteApplication}.\n    *\n    * @param {MountedAppShell[]|null[]}  applicationShellHolder - A reference to the MountedAppShell array.\n    *\n    * @param {SvelteData[]}  svelteData - A reference to the SvelteData array of mounted components.\n    */\n   constructor(applicationShellHolder, svelteData)\n   {\n      this.#applicationShellHolder = applicationShellHolder;\n      this.#svelteData = svelteData;\n   }\n\n   /**\n    * Returns any mounted {@link MountedAppShell}.\n    *\n    * @returns {MountedAppShell|null} Any mounted application shell.\n    */\n   get applicationShell() { return this.#applicationShellHolder[0]; }\n\n   /**\n    * Returns the indexed Svelte component.\n    *\n    * @param {number}   index -\n    *\n    * @returns {object} The loaded Svelte component.\n    */\n   component(index)\n   {\n      const data = this.#svelteData[index];\n      return typeof data === 'object' ? data?.component : void 0;\n   }\n\n   /**\n    * Returns the Svelte component entries iterator.\n    *\n    * @returns {Generator<Array<number|SvelteComponent>>} Svelte component entries iterator.\n    * @yields\n    */\n   *componentEntries()\n   {\n      for (let cntr = 0; cntr < this.#svelteData.length; cntr++)\n      {\n         yield [cntr, this.#svelteData[cntr].component];\n      }\n   }\n\n   /**\n    * Returns the Svelte component values iterator.\n    *\n    * @returns {Generator<SvelteComponent>} Svelte component values iterator.\n    * @yields\n    */\n   *componentValues()\n   {\n      for (let cntr = 0; cntr < this.#svelteData.length; cntr++)\n      {\n         yield this.#svelteData[cntr].component;\n      }\n   }\n\n   /**\n    * Returns the indexed SvelteData entry.\n    *\n    * @param {number}   index -\n    *\n    * @returns {SvelteData} The loaded Svelte config + component.\n    */\n   data(index)\n   {\n      return this.#svelteData[index];\n   }\n\n   /**\n    * Returns the {@link SvelteData} instance for a given component.\n    *\n    * @param {object} component - Svelte component.\n    *\n    * @returns {SvelteData} -  The loaded Svelte config + component.\n    */\n   dataByComponent(component)\n   {\n      for (const data of this.#svelteData)\n      {\n         if (data.component === component) { return data; }\n      }\n\n      return void 0;\n   }\n\n   /**\n    * Returns the SvelteData entries iterator.\n    *\n    * @returns {IterableIterator<[number, SvelteData]>} SvelteData entries iterator.\n    */\n   dataEntries()\n   {\n      return this.#svelteData.entries();\n   }\n\n   /**\n    * Returns the SvelteData values iterator.\n    *\n    * @returns {IterableIterator<SvelteData>} SvelteData values iterator.\n    */\n   dataValues()\n   {\n      return this.#svelteData.values();\n   }\n\n   /**\n    * Returns the length of the mounted Svelte component list.\n    *\n    * @returns {number} Length of mounted Svelte component list.\n    */\n   get length()\n   {\n      return this.#svelteData.length;\n   }\n}\n","import {\n   isApplicationShell,\n   parseSvelteConfig }  from '@typhonjs-fvtt/runtime/svelte/util';\n\n/**\n * Instantiates and attaches a Svelte component to the main inserted HTML.\n *\n * @param {object}            opts - Optional parameters.\n *\n * @param {object}            opts.app - The target application\n *\n * @param {HTMLElement}       opts.template - Any HTML template.\n *\n * @param {object}            opts.config - Svelte component options\n *\n * @param {Function}          opts.elementRootUpdate - A callback to assign to the external context.\n *\n * @returns {SvelteData} The config + instantiated Svelte component.\n */\nexport function loadSvelteConfig({ app, template, config, elementRootUpdate } = {})\n{\n   const svelteOptions = typeof config.options === 'object' ? config.options : {};\n\n   let target;\n\n   // A specific HTMLElement to append Svelte component.\n   if (config.target instanceof HTMLElement)\n   {\n      target = config.target;\n   }\n   // A string target defines a selector to find in existing HTML.\n   else if (template instanceof HTMLElement && typeof config.target === 'string')\n   {\n      target = template.querySelector(config.target);\n   }\n   else                                            // No target defined, create a document fragment.\n   {\n      target = document.createDocumentFragment();\n   }\n\n   if (target === void 0)\n   {\n      console.log(\n       `%c[TRL] loadSvelteConfig error - could not find target selector, '${config.target}', for config:\\n`,\n       'background: rgb(57,34,34)', config);\n\n      throw new Error();\n   }\n\n   const NewSvelteComponent = config.class;\n\n   const svelteConfig = parseSvelteConfig({ ...config, target }, app);\n\n   const externalContext = svelteConfig.context.get('external');\n\n   // Inject the Foundry application instance and `elementRootUpdate` to the external context.\n   externalContext.application = app;\n   externalContext.elementRootUpdate = elementRootUpdate;\n\n   let eventbus;\n\n   // Potentially inject any TyphonJS eventbus and track the proxy in the SvelteData instance.\n   if (typeof app._eventbus === 'object' && typeof app._eventbus.createProxy === 'function')\n   {\n      eventbus = app._eventbus.createProxy();\n      externalContext.eventbus = eventbus;\n   }\n\n   // Create the Svelte component.\n   /**\n    * @type {import('svelte').SvelteComponent}\n    */\n   const component = new NewSvelteComponent(svelteConfig);\n\n   // Set any eventbus to the config.\n   svelteConfig.eventbus = eventbus;\n\n   /**\n    * @type {HTMLElement}\n    */\n   let element;\n\n   // We can directly get the root element from components which follow the application store contract.\n   if (isApplicationShell(component))\n   {\n      element = component.elementRoot;\n   }\n\n   // Detect if target is a synthesized DocumentFragment with a child element. Child elements will be present\n   // if the Svelte component mounts and renders initial content into the document fragment.\n   if (target instanceof DocumentFragment && target.firstElementChild)\n   {\n      if (element === void 0) { element = target.firstElementChild; }\n      template.append(target);\n   }\n   else if (config.target instanceof HTMLElement && element === void 0)\n   {\n      if (config.target instanceof HTMLElement && typeof svelteOptions.selectorElement !== 'string')\n      {\n         console.log(\n          `%c[TRL] loadSvelteConfig error - HTMLElement target with no 'selectorElement' defined.\\n` +\n          `\\nNote: If configuring an application shell and directly targeting a HTMLElement did you bind an` +\n          `'elementRoot' and include '<svelte:options accessors={true}/>'?\\n` +\n          `\\nOffending config:\\n`, 'background: rgb(57,34,34)', config);\n\n         throw new Error();\n      }\n\n      // The target is an HTMLElement so find the Application element from `selectorElement` option.\n      element = target.querySelector(svelteOptions.selectorElement);\n\n      if (element === null || element === void 0)\n      {\n         console.log(\n          `%c[TRL] loadSvelteConfig error - HTMLElement target with 'selectorElement', '${\n           svelteOptions.selectorElement}', not found for config:\\n`,\n          'background: rgb(57,34,34)', config);\n\n         throw new Error();\n      }\n   }\n\n   // If the configuration / original target is an HTML element then do not inject HTML.\n   const injectHTML = !(config.target instanceof HTMLElement);\n\n   return { config: svelteConfig, component, element, injectHTML };\n}\n","import { derived, writable }  from \"svelte/store\";\n\nimport {\n   propertyStore,\n   subscribeIgnoreFirst }     from '@typhonjs-fvtt/runtime/svelte/store';\n\nimport {\n   deepMerge,\n   safeAccess,\n   safeSet }                  from '@typhonjs-fvtt/runtime/svelte/util';\n\n/**\n * Contains the reactive functionality / Svelte stores associated with SvelteApplication.\n */\nexport class SvelteReactive\n{\n   /**\n    * @type {SvelteApplication}\n    */\n   #application;\n\n   /**\n    * @type {boolean}\n    */\n   #initialized = false;\n\n   /**\n    * The Application option store which is injected into mounted Svelte component context under the `external` key.\n    *\n    * @type {StoreAppOptions}\n    */\n   #storeAppOptions;\n\n   /**\n    * Stores the update function for `#storeAppOptions`.\n    *\n    * @type {import('svelte/store').Writable.update}\n    */\n   #storeAppOptionsUpdate;\n\n   /**\n    * Stores the UI state data to make it accessible via getters.\n    *\n    * @type {object}\n    */\n   #dataUIState;\n\n   /**\n    * The UI option store which is injected into mounted Svelte component context under the `external` key.\n    *\n    * @type {StoreUIOptions}\n    */\n   #storeUIState;\n\n   /**\n    * Stores the update function for `#storeUIState`.\n    *\n    * @type {import('svelte/store').Writable.update}\n    */\n   #storeUIStateUpdate;\n\n   /**\n    * Stores the unsubscribe functions from local store subscriptions.\n    *\n    * @type {import('svelte/store').Unsubscriber[]}\n    */\n   #storeUnsubscribe = [];\n\n   /**\n    * @param {SvelteApplication} application - The host Foundry application.\n    */\n   constructor(application)\n   {\n      this.#application = application;\n   }\n\n   /**\n    * Initializes reactive support. Package private for internal use.\n    *\n    * @returns {SvelteStores} Internal methods to interact with Svelte stores.\n    * @package\n    */\n   initialize()\n   {\n      if (this.#initialized) { return; }\n\n      this.#initialized = true;\n\n      this.#storesInitialize();\n\n      return {\n         appOptionsUpdate: this.#storeAppOptionsUpdate,\n         uiOptionsUpdate: this.#storeUIStateUpdate,\n         subscribe: this.#storesSubscribe.bind(this),\n         unsubscribe: this.#storesUnsubscribe.bind(this)\n      };\n   }\n\n// Only reactive getters ---------------------------------------------------------------------------------------------\n\n   /**\n    * Returns the current dragging UI state.\n    *\n    * @returns {boolean} Dragging UI state.\n    */\n   get dragging() { return this.#dataUIState.dragging; }\n\n   /**\n    * Returns the current minimized UI state.\n    *\n    * @returns {boolean} Minimized UI state.\n    */\n   get minimized() { return this.#dataUIState.minimized; }\n\n   /**\n    * Returns the current resizing UI state.\n    *\n    * @returns {boolean} Resizing UI state.\n    */\n   get resizing() { return this.#dataUIState.resizing; }\n\n// Reactive getter / setters -----------------------------------------------------------------------------------------\n\n   /**\n    * Returns the draggable app option.\n    *\n    * @returns {boolean} Draggable app option.\n    */\n   get draggable() { return this.#application?.options?.draggable; }\n\n   /**\n    * Returns the headerButtonNoClose app option.\n    *\n    * @returns {boolean} Remove the close the button in header app option.\n    */\n   get headerButtonNoClose() { return this.#application?.options?.headerButtonNoClose; }\n\n   /**\n    * Returns the headerButtonNoLabel app option.\n    *\n    * @returns {boolean} Remove the labels from buttons in header app option.\n    */\n   get headerButtonNoLabel() { return this.#application?.options?.headerButtonNoLabel; }\n\n   /**\n    * Returns the headerNoTitleMinimized app option.\n    *\n    * @returns {boolean} When true removes the header title when minimized.\n    */\n   get headerNoTitleMinimized() { return this.#application?.options?.headerNoTitleMinimized; }\n\n   /**\n    * Returns the minimizable app option.\n    *\n    * @returns {boolean} Minimizable app option.\n    */\n   get minimizable() { return this.#application?.options?.minimizable; }\n\n   /**\n    * @inheritDoc\n    */\n   get popOut() { return this.#application.popOut; }\n\n   /**\n    * Returns the resizable option.\n    *\n    * @returns {boolean} Resizable app option.\n    */\n   get resizable() { return this.#application?.options?.resizable; }\n\n   /**\n    * Returns the store for app options.\n    *\n    * @returns {StoreAppOptions} App options store.\n    */\n   get storeAppOptions() { return this.#storeAppOptions; }\n\n   /**\n    * Returns the store for UI options.\n    *\n    * @returns {StoreUIOptions} UI options store.\n    */\n   get storeUIState() { return this.#storeUIState; }\n\n   /**\n    * Returns the title accessor from the parent Application class.\n    * TODO: Application v2; note that super.title localizes `this.options.title`; IMHO it shouldn't.\n    *\n    * @returns {string} Title.\n    */\n   get title() { return this.#application.title; }\n\n   /**\n    * Sets `this.options.draggable` which is reactive for application shells.\n    *\n    * @param {boolean}  draggable - Sets the draggable option.\n    */\n   set draggable(draggable)\n   {\n      if (typeof draggable === 'boolean') { this.setOptions('draggable', draggable); }\n   }\n\n   /**\n    * Sets `this.options.headerButtonNoClose` which is reactive for application shells.\n    *\n    * @param {boolean}  headerButtonNoClose - Sets the headerButtonNoClose option.\n    */\n   set headerButtonNoClose(headerButtonNoClose)\n   {\n      if (typeof headerButtonNoClose === 'boolean') { this.setOptions('headerButtonNoClose', headerButtonNoClose); }\n   }\n\n   /**\n    * Sets `this.options.headerButtonNoLabel` which is reactive for application shells.\n    *\n    * @param {boolean}  headerButtonNoLabel - Sets the headerButtonNoLabel option.\n    */\n   set headerButtonNoLabel(headerButtonNoLabel)\n   {\n      if (typeof headerButtonNoLabel === 'boolean') { this.setOptions('headerButtonNoLabel', headerButtonNoLabel); }\n   }\n\n   /**\n    * Sets `this.options.headerNoTitleMinimized` which is reactive for application shells.\n    *\n    * @param {boolean}  headerNoTitleMinimized - Sets the headerNoTitleMinimized option.\n    */\n   set headerNoTitleMinimized(headerNoTitleMinimized)\n   {\n      if (typeof headerNoTitleMinimized === 'boolean')\n      {\n         this.setOptions('headerNoTitleMinimized', headerNoTitleMinimized);\n      }\n   }\n\n   /**\n    * Sets `this.options.minimizable` which is reactive for application shells that are also pop out.\n    *\n    * @param {boolean}  minimizable - Sets the minimizable option.\n    */\n   set minimizable(minimizable)\n   {\n      if (typeof minimizable === 'boolean') { this.setOptions('minimizable', minimizable); }\n   }\n\n   /**\n    * Sets `this.options.popOut` which is reactive for application shells. This will add / remove this application\n    * from `ui.windows`.\n    *\n    * @param {boolean}  popOut - Sets the popOut option.\n    */\n   set popOut(popOut)\n   {\n      if (typeof popOut === 'boolean') { this.setOptions('popOut', popOut); }\n   }\n\n   /**\n    * Sets `this.options.resizable` which is reactive for application shells.\n    *\n    * @param {boolean}  resizable - Sets the resizable option.\n    */\n   set resizable(resizable)\n   {\n      if (typeof resizable === 'boolean') { this.setOptions('resizable', resizable); }\n   }\n\n   /**\n    * Sets `this.options.title` which is reactive for application shells.\n    *\n    * Note: Will set empty string if title is undefined or null.\n    *\n    * @param {string|undefined|null}   title - Application title; will be localized, so a translation key is fine.\n    */\n   set title(title)\n   {\n      if (typeof title === 'string')\n      {\n         this.setOptions('title', title);\n      }\n      else if (title === void 0 || title === null)\n      {\n         this.setOptions('title', '');\n      }\n   }\n\n   /**\n    * Provides a way to safely get this applications options given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * // TODO DOCUMENT the accessor in more detail.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {*}        [defaultValue] - A default value returned if the accessor is not found.\n    *\n    * @returns {*} Value at the accessor.\n    */\n   getOptions(accessor, defaultValue)\n   {\n      return safeAccess(this.#application.options, accessor, defaultValue);\n   }\n\n   /**\n    * Provides a way to merge `options` into this applications options and update the appOptions store.\n    *\n    * @param {object}   options - The options object to merge with `this.options`.\n    */\n   mergeOptions(options)\n   {\n      this.#storeAppOptionsUpdate((instanceOptions) => deepMerge(instanceOptions, options));\n   }\n\n   /**\n    * Provides a way to safely set this applications options given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * Additionally if an application shell Svelte component is mounted and exports the `appOptions` property then\n    * the application options is set to `appOptions` potentially updating the application shell / Svelte component.\n    *\n    * // TODO DOCUMENT the accessor in more detail.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {*}        value - Value to set.\n    */\n   setOptions(accessor, value)\n   {\n      const success = safeSet(this.#application.options, accessor, value);\n\n      // If `this.options` modified then update the app options store.\n      if (success)\n      {\n         this.#storeAppOptionsUpdate(() => this.#application.options);\n      }\n   }\n\n   /**\n    * Initializes the Svelte stores and derived stores for the application options and UI state.\n    *\n    * While writable stores are created the update method is stored in private variables locally and derived Readable\n    * stores are provided for essential options which are commonly used.\n    *\n    * These stores are injected into all Svelte components mounted under the `external` context: `storeAppOptions` and\n    * ` storeUIState`.\n    */\n   #storesInitialize()\n   {\n      const writableAppOptions = writable(this.#application.options);\n\n      // Keep the update function locally, but make the store essentially readable.\n      this.#storeAppOptionsUpdate = writableAppOptions.update;\n\n      /**\n       * Create custom store. The main subscribe method for all app options changes is provided along with derived\n       * writable stores for all reactive options.\n       *\n       * @type {StoreAppOptions}\n       */\n      const storeAppOptions = {\n         subscribe: writableAppOptions.subscribe,\n\n         draggable: propertyStore(writableAppOptions, 'draggable'),\n         headerButtonNoClose: propertyStore(writableAppOptions, 'headerButtonNoClose'),\n         headerButtonNoLabel: propertyStore(writableAppOptions, 'headerButtonNoLabel'),\n         headerNoTitleMinimized: propertyStore(writableAppOptions, 'headerNoTitleMinimized'),\n         minimizable: propertyStore(writableAppOptions, 'minimizable'),\n         popOut: propertyStore(writableAppOptions, 'popOut'),\n         resizable: propertyStore(writableAppOptions, 'resizable'),\n         title: propertyStore(writableAppOptions, 'title')\n      };\n\n      Object.freeze(storeAppOptions);\n\n      this.#storeAppOptions = storeAppOptions;\n\n      this.#dataUIState = {\n         dragging: false,\n         headerButtons: [],\n         minimized: this.#application._minimized,\n         resizing: false\n      };\n\n      // Create a store for UI state data.\n      const writableUIOptions = writable(this.#dataUIState);\n\n      // Keep the update function locally, but make the store essentially readable.\n      this.#storeUIStateUpdate = writableUIOptions.update;\n\n      /**\n       * @type {StoreUIOptions}\n       */\n      const storeUIState = {\n         subscribe: writableUIOptions.subscribe,\n\n         dragging: propertyStore(writableUIOptions, 'dragging'),\n         headerButtons: derived(writableUIOptions, ($options, set) => set($options.headerButtons)),\n         minimized: derived(writableUIOptions, ($options, set) => set($options.minimized)),\n         resizing: propertyStore(writableUIOptions, 'resizing')\n      };\n\n      Object.freeze(storeUIState);\n\n      // Initialize the store with options set in the Application constructor.\n      this.#storeUIState = storeUIState;\n   }\n\n   /**\n    * Registers local store subscriptions for app options. `popOut` controls registering this app with `ui.windows`.\n    * `zIndex` controls the z-index style of the element root.\n    *\n    * @see SvelteApplication._injectHTML\n    */\n   #storesSubscribe()\n   {\n      // Register local subscriptions.\n\n      // Handles updating header buttons to add / remove the close button.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.headerButtonNoClose, (value) =>\n      {\n         this.updateHeaderButtons({ headerButtonNoClose: value });\n      }));\n\n      // Handles updating header buttons to add / remove button labels.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.headerButtonNoLabel, (value) =>\n      {\n         this.updateHeaderButtons({ headerButtonNoLabel: value });\n      }));\n\n      // Handles adding / removing this application from `ui.windows` when popOut changes.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.popOut, (value) =>\n      {\n         if (value && this.#application.rendered)\n         {\n            ui.windows[this.#application.appId] = this.#application;\n         }\n         else\n         {\n            delete ui.windows[this.#application.appId];\n         }\n      }));\n   }\n\n   /**\n    * Unsubscribes from any locally monitored stores.\n    *\n    * @see SvelteApplication.close\n    */\n   #storesUnsubscribe()\n   {\n      this.#storeUnsubscribe.forEach((unsubscribe) => unsubscribe());\n      this.#storeUnsubscribe = [];\n   }\n\n   /**\n    * Updates the UI Options store with the current header buttons. You may dynamically add / remove header buttons\n    * if using an application shell Svelte component. In either overriding `_getHeaderButtons` or responding to the\n    * Hooks fired return a new button array and the uiOptions store is updated and the application shell will render\n    * the new buttons.\n    *\n    * Optionally you can set in the Foundry app options `headerButtonNoClose` to remove the close button and\n    * `headerButtonNoLabel` to true and labels will be removed from the header buttons.\n    *\n    * @param {object} opts - Optional parameters (for internal use)\n    *\n    * @param {boolean} opts.headerButtonNoClose - The value for `headerButtonNoClose`.\n    *\n    * @param {boolean} opts.headerButtonNoLabel - The value for `headerButtonNoLabel`.\n    */\n   updateHeaderButtons({ headerButtonNoClose = this.#application.options.headerButtonNoClose,\n    headerButtonNoLabel = this.#application.options.headerButtonNoLabel } = {})\n   {\n      let buttons = this.#application._getHeaderButtons();\n\n      // Remove close button if this.options.headerButtonNoClose is true;\n      if (typeof headerButtonNoClose === 'boolean' && headerButtonNoClose)\n      {\n         buttons = buttons.filter((button) => button.class !== 'close');\n      }\n\n      // Remove labels if this.options.headerButtonNoLabel is true;\n      if (typeof headerButtonNoLabel === 'boolean' && headerButtonNoLabel)\n      {\n         for (const button of buttons) { button.label = void 0; }\n      }\n\n      this.#storeUIStateUpdate((options) =>\n      {\n         options.headerButtons = buttons;\n         return options;\n      });\n   }\n}\n","// import { Position }           from '@typhonjs-fvtt/runtime/svelte/store';\nimport { Position }           from './position/Position.js';\n\nimport {\n   deepMerge,\n   hasGetter,\n   isApplicationShell,\n   isHMRProxy,\n   outroAndDestroy }          from '@typhonjs-fvtt/runtime/svelte/util';\n\nimport {\n   ApplicationState,\n   GetSvelteData,\n   loadSvelteConfig,\n   SvelteReactive }           from './internal/index.js';\n\n/**\n * Provides a Svelte aware extension to Application to control the app lifecycle appropriately. You can declaratively\n * load one or more components from `defaultOptions`.\n */\nexport class SvelteApplication extends Application\n{\n   /**\n    * Stores the first mounted component which follows the application shell contract.\n    *\n    * @type {MountedAppShell[]|null[]} Application shell.\n    */\n   #applicationShellHolder = [null];\n\n   /**\n    * Stores and manages application state for saving / restoring / serializing.\n    *\n    * @type {ApplicationState}\n    */\n   #applicationState;\n\n   /**\n    * Stores the target element which may not necessarily be the main element.\n    *\n    * @type {HTMLElement}\n    */\n   #elementTarget = null;\n\n   /**\n    * Stores the content element which is set for application shells.\n    *\n    * @type {HTMLElement}\n    */\n   #elementContent = null;\n\n   /**\n    * Stores initial z-index from `_renderOuter` to set to target element / Svelte component.\n    *\n    * @type {number}\n    */\n   #initialZIndex = 95;\n\n   /**\n    * Stores on mount state which is checked in _render to trigger onSvelteMount callback.\n    *\n    * @type {boolean}\n    */\n   #onMount = false;\n\n   /**\n    * The position store.\n    *\n    * @type {Position}\n    */\n   #position;\n\n   /**\n    * Contains the Svelte stores and reactive accessors.\n    *\n    * @type {SvelteReactive}\n    */\n   #reactive;\n\n   /**\n    * Stores SvelteData entries with instantiated Svelte components.\n    *\n    * @type {SvelteData[]}\n    */\n   #svelteData = [];\n\n   /**\n    * Provides a helper class that combines multiple methods for interacting with the mounted components tracked in\n    * {@link SvelteData}.\n    *\n    * @type {GetSvelteData}\n    */\n   #getSvelteData = new GetSvelteData(this.#applicationShellHolder, this.#svelteData);\n\n   /**\n    * Contains methods to interact with the Svelte stores.\n    *\n    * @type {SvelteStores}\n    */\n   #stores;\n\n   /**\n    * @inheritDoc\n    */\n   constructor(options = {})\n   {\n      super(options);\n\n      this.#applicationState = new ApplicationState(this);\n\n      // Initialize Position with the position object set by Application.\n      this.#position = new Position(this, {\n         ...this.position,\n         ...this.options,\n         initial: this.options.positionInitial,\n         ortho: this.options.positionOrtho,\n         validator: this.options.positionValidator\n      });\n\n      // Remove old position field.\n      delete this.position;\n\n      /**\n       * Define accessors to retrieve Position by `this.position`.\n       *\n       * @member {Position} position - Adds accessors to SvelteApplication to get / set the position data.\n       *\n       * @memberof SvelteApplication#\n       */\n      Object.defineProperty(this, 'position', {\n         get: () => this.#position,\n         set: (position) => { if (typeof position === 'object') { this.#position.set(position); } }\n      });\n\n      this.#reactive = new SvelteReactive(this);\n\n      this.#stores = this.#reactive.initialize();\n   }\n\n   /**\n    * Specifies the default options that SvelteApplication supports.\n    *\n    * @returns {object} options - Application options.\n    * @see https://foundryvtt.com/api/Application.html#options\n    */\n   static get defaultOptions()\n   {\n      return deepMerge(super.defaultOptions, {\n         defaultCloseAnimation: true,     // If false the default slide close animation is not run.\n         draggable: true,                 // If true then application shells are draggable.\n         headerButtonNoClose: false,      // If true then the close header button is removed.\n         headerButtonNoLabel: false,      // If true then header button labels are removed for application shells.\n         headerNoTitleMinimized: false,   // If true then header title is hidden when application is minimized.\n         minHeight: MIN_WINDOW_HEIGHT,    // Assigned to position. Number specifying minimum window height.\n         minWidth: MIN_WINDOW_WIDTH,      // Assigned to position. Number specifying minimum window width.\n         positionable: true,              // If false then `position.set` does not take effect.\n         positionInitial: Position.Initial.browserCentered,      // A helper for initial position placement.\n         positionOrtho: true,             // When true Position is optimized for orthographic use.\n         positionValidator: Position.Validators.transformWindow, // A function providing the default validator.\n         transformOrigin: 'top left'      // By default, 'top / left' respects rotation when minimizing.\n      });\n   }\n\n   /**\n    * Returns the content element if an application shell is mounted.\n    *\n    * @returns {HTMLElement} Content element.\n    */\n   get elementContent() { return this.#elementContent; }\n\n   /**\n    * Returns the target element or main element if no target defined.\n    *\n    * @returns {HTMLElement} Target element.\n    */\n   get elementTarget() { return this.#elementTarget; }\n\n   /**\n    * Returns the reactive accessors & Svelte stores for SvelteApplication.\n    *\n    * @returns {SvelteReactive} The reactive accessors & Svelte stores.\n    */\n   get reactive() { return this.#reactive; }\n\n   /**\n    * Returns the application state manager.\n    *\n    * @returns {ApplicationState} The application state manager.\n    */\n   get state() { return this.#applicationState; }\n\n   /**\n    * Returns the Svelte helper class w/ various methods to access mounted Svelte components.\n    *\n    * @returns {GetSvelteData} GetSvelteData\n    */\n   get svelte() { return this.#getSvelteData; }\n\n   /**\n    * In this case of when a template is defined in app options `html` references the inner HTML / template. However,\n    * to activate classic v1 tabs for a Svelte component the element target is passed as an array simulating JQuery as\n    * the element is retrieved immediately and the core listeners use standard DOM queries.\n    *\n    * @inheritDoc\n    * @protected\n    * @ignore\n    */\n   _activateCoreListeners(html)\n   {\n      super._activateCoreListeners(typeof this.options.template === 'string' ? html : [this.#elementTarget]);\n   }\n\n   /**\n    * Provide an override to set this application as the active window regardless of z-index. Changes behaviour from\n    * Foundry core. This is important / used for instance in dialog key handling for left / right button selection.\n    *\n    * @param {object} [opts] - Optional parameters.\n    *\n    * @param {boolean} [opts.force=false] - Force bring to top; will increment z-index by popOut order.\n    *\n    */\n   bringToTop({ force = false } = {})\n   {\n      if (force || this.popOut) { super.bringToTop(); }\n\n      // If the activeElement is not `document.body` and not contained in this app via elementTarget then blur the\n      // current active element and make `document.body`focused. This allows <esc> key to close all open apps / windows.\n      if (document.activeElement !== document.body && !this.elementTarget.contains(document.activeElement))\n      {\n         // Blur current active element.\n         if (document.activeElement instanceof HTMLElement) { document.activeElement.blur(); }\n\n         // Make document body focused.\n         document.body.focus();\n      }\n\n      ui.activeWindow = this;\n   }\n\n   /**\n    * Note: This method is fully overridden and duplicated as Svelte components need to be destroyed manually and the\n    * best visual result is to destroy them after the default slide up animation occurs, but before the element\n    * is removed from the DOM.\n    *\n    * If you destroy the Svelte components before the slide up animation the Svelte elements are removed immediately\n    * from the DOM. The purpose of overriding ensures the slide up animation is always completed before\n    * the Svelte components are destroyed and then the element is removed from the DOM.\n    *\n    * Close the application and un-register references to it within UI mappings.\n    * This function returns a Promise which resolves once the window closing animation concludes\n    *\n    * @param {object}   [options] - Optional parameters.\n    *\n    * @param {boolean}  [options.force] - Force close regardless of render state.\n    *\n    * @returns {Promise<void>}    A Promise which resolves once the application is closed.\n    * @ignore\n    */\n   async close(options = {})\n   {\n      const states = Application.RENDER_STATES;\n      if (!options.force && ![states.RENDERED, states.ERROR].includes(this._state)) { return; }\n\n      // Unsubscribe from any local stores.\n      this.#stores.unsubscribe();\n\n      /**\n       * @ignore\n       */\n      this._state = states.CLOSING;\n\n      /**\n       * Get the element.\n       *\n       * @type {HTMLElement}\n       */\n      const el = this.#elementTarget;\n      if (!el) { return this._state = states.CLOSED; }\n\n      // Make any window content overflow hidden to avoid any scrollbars appearing in default or Svelte outro\n      // transitions.\n      const content = el.querySelector('.window-content');\n      if (content)\n      {\n         content.style.overflow = 'hidden';\n\n         // Set all children of content to overflow hidden as if there is going to be additional scrolling elements\n         // they are likely one level deep.\n         for (let cntr = content.children.length; --cntr >= 0;)\n         {\n            content.children[cntr].style.overflow = 'hidden';\n         }\n      }\n\n      // Dispatch Hooks for closing the base and subclass applications\n      for (const cls of this.constructor._getInheritanceChain())\n      {\n         /**\n          * A hook event that fires whenever this Application is closed.\n          *\n          * @param {Application} app                     The Application instance being closed\n          *\n          * @param {jQuery[]} html                       The application HTML when it is closed\n          *\n          * @function closeApplication\n          *\n          * @memberof hookEvents\n          */\n         Hooks.call(`close${cls.name}`, this, el);\n      }\n\n      // If options `defaultCloseAnimation` is false then do not execute the standard slide up animation.\n      // This allows Svelte components to provide any out transition. Application shells will automatically set\n      // `defaultCloseAnimation` based on any out transition set or unset.\n      const animate = typeof this.options.defaultCloseAnimation === 'boolean' ? this.options.defaultCloseAnimation :\n       true;\n\n      if (animate)\n      {\n         // Set min height for full slide.\n         el.style.minHeight = '0';\n\n         const { paddingBottom, paddingTop } = globalThis.getComputedStyle(el);\n\n         // Slide-up application.\n         await el.animate([\n            { maxHeight: `${el.clientHeight}px`, paddingTop, paddingBottom },\n            { maxHeight: 0, paddingTop: 0, paddingBottom: 0 }\n         ], { duration: 250, easing: 'ease-in', fill: 'forwards' }).finished;\n      }\n\n      // Stores the Promises returned from running outro transitions and destroying each Svelte component.\n      const svelteDestroyPromises = [];\n\n      // Manually invoke the destroy callbacks for all Svelte components.\n      for (const entry of this.#svelteData)\n      {\n         // Use `outroAndDestroy` to run outro transitions before destroying.\n         svelteDestroyPromises.push(outroAndDestroy(entry.component));\n\n         // If any proxy eventbus has been added then remove all event registrations from the component.\n         const eventbus = entry.config.eventbus;\n         if (typeof eventbus === 'object' && typeof eventbus.off === 'function')\n         {\n            eventbus.off();\n            entry.config.eventbus = void 0;\n         }\n      }\n\n      // Await all Svelte components to destroy.\n      await Promise.all(svelteDestroyPromises);\n\n      // Reset SvelteData like this to maintain reference to GetSvelteData / `this.svelte`.\n      this.#svelteData.length = 0;\n\n      // Remove element from the DOM. Most SvelteComponents have already removed it.\n      el.remove();\n\n      // Silently restore any width / height state before minimized as applicable.\n      this.position.state.restore({\n         name: '#beforeMinimized',\n         properties: ['width', 'height'],\n         silent: true,\n         remove: true\n      });\n\n      // Clean up data\n      this.#applicationShellHolder[0] = null;\n      /**\n       * @ignore\n       */\n      this._element = null;\n      this.#elementContent = null;\n      this.#elementTarget = null;\n      delete ui.windows[this.appId];\n      /**\n       * @ignore\n       */\n      this._minimized = false;\n      /**\n       * @ignore\n       */\n      this._scrollPositions = null;\n      this._state = states.CLOSED;\n\n      this.#onMount = false;\n\n      // Update the minimized UI store options.\n      this.#stores.uiOptionsUpdate((storeOptions) => deepMerge(storeOptions, { minimized: this._minimized }));\n   }\n\n   /**\n    * Inject the Svelte components defined in `this.options.svelte`. The Svelte component can attach to the existing\n    * pop-out of Application or provide no template and render into a document fragment which is then attached to the\n    * DOM.\n    *\n    * @param {JQuery} html -\n    *\n    * @inheritDoc\n    * @ignore\n    */\n   _injectHTML(html)\n   {\n      if (this.popOut && html.length === 0 && Array.isArray(this.options.svelte))\n      {\n         throw new Error(\n          'SvelteApplication - _injectHTML - A popout app with no template can only support one Svelte component.');\n      }\n\n      // Make sure the store is updated with the latest header buttons. Also allows filtering buttons before display.\n      this.reactive.updateHeaderButtons();\n\n      // Create a function to generate a callback for Svelte components to invoke to update the tracked elements for\n      // application shells in the rare cases that the main element root changes. The update is only trigged on\n      // successive changes of `elementRoot`. Returns a boolean to indicate the element roots are updated.\n      const elementRootUpdate = () =>\n      {\n         let cntr = 0;\n\n         return (elementRoot) =>\n         {\n            if (elementRoot !== null && elementRoot !== void 0 && cntr++ > 0)\n            {\n               this.#updateApplicationShell();\n               return true;\n            }\n\n            return false;\n         };\n      };\n\n      if (Array.isArray(this.options.svelte))\n      {\n         for (const svelteConfig of this.options.svelte)\n         {\n            const svelteData = loadSvelteConfig({\n               app: this,\n               template: html[0],\n               config: svelteConfig,\n               elementRootUpdate\n            });\n\n            if (isApplicationShell(svelteData.component))\n            {\n               if (this.svelte.applicationShell !== null)\n               {\n                  throw new Error(\n                   `SvelteApplication - _injectHTML - An application shell is already mounted; offending config:\n                    ${JSON.stringify(svelteConfig)}`);\n               }\n\n               this.#applicationShellHolder[0] = svelteData.component;\n\n               // If Vite / HMR / svelte_hmr is enabled then add a hook to receive callbacks when the ProxyComponent\n               // refreshes. Update the element root accordingly and force an update to Position.\n               // See this issue for info about `on_hmr`:\n               // https://github.com/sveltejs/svelte-hmr/issues/57\n               if (isHMRProxy(svelteData.component) && Array.isArray(svelteData.component?.$$?.on_hmr))\n               {\n                  svelteData.component.$$.on_hmr.push(() => () => this.#updateApplicationShell());\n               }\n            }\n\n            this.#svelteData.push(svelteData);\n         }\n      }\n      else if (typeof this.options.svelte === 'object')\n      {\n         const svelteData = loadSvelteConfig({\n            app: this,\n            template: html[0],\n            config: this.options.svelte,\n            elementRootUpdate\n         });\n\n         if (isApplicationShell(svelteData.component))\n         {\n            // A sanity check as shouldn't hit this case as only one component is being mounted.\n            if (this.svelte.applicationShell !== null)\n            {\n               throw new Error(\n                `SvelteApplication - _injectHTML - An application shell is already mounted; offending config:\n                 ${JSON.stringify(this.options.svelte)}`);\n            }\n\n            this.#applicationShellHolder[0] = svelteData.component;\n\n            // If Vite / HMR / svelte_hmr is enabled then add a hook to receive callbacks when the ProxyComponent\n            // refreshes. Update the element root accordingly and force an update to Position.\n            // See this issue for info about `on_hmr`:\n            // https://github.com/sveltejs/svelte-hmr/issues/57\n            if (isHMRProxy(svelteData.component) && Array.isArray(svelteData.component?.$$?.on_hmr))\n            {\n               svelteData.component.$$.on_hmr.push(() => () => this.#updateApplicationShell());\n            }\n         }\n\n         this.#svelteData.push(svelteData);\n      }\n\n      // Detect if this is a synthesized DocumentFragment.\n      const isDocumentFragment = html.length && html[0] instanceof DocumentFragment;\n\n      // If any of the Svelte components mounted directly targets an HTMLElement then do not inject HTML.\n      let injectHTML = true;\n      for (const svelteData of this.#svelteData)\n      {\n         if (!svelteData.injectHTML) { injectHTML = false; break; }\n      }\n      if (injectHTML) { super._injectHTML(html); }\n\n      if (this.svelte.applicationShell !== null)\n      {\n         this._element = $(this.svelte.applicationShell.elementRoot);\n\n         // Detect if the application shell exports an `elementContent` accessor.\n         this.#elementContent = hasGetter(this.svelte.applicationShell, 'elementContent') ?\n          this.svelte.applicationShell.elementContent : null;\n\n         // Detect if the application shell exports an `elementTarget` accessor.\n         this.#elementTarget = hasGetter(this.svelte.applicationShell, 'elementTarget') ?\n          this.svelte.applicationShell.elementTarget : null;\n      }\n      else if (isDocumentFragment) // Set the element of the app to the first child element in order of Svelte components mounted.\n      {\n         for (const svelteData of this.#svelteData)\n         {\n            if (svelteData.element instanceof HTMLElement)\n            {\n               this._element = $(svelteData.element);\n               break;\n            }\n         }\n      }\n\n      // Potentially retrieve a specific target element if `selectorTarget` is defined otherwise make the target the\n      // main element.\n      if (this.#elementTarget === null)\n      {\n         const element = typeof this.options.selectorTarget === 'string' ?\n          this._element.find(this.options.selectorTarget) : this._element;\n\n         this.#elementTarget = element[0];\n      }\n\n      // TODO VERIFY THIS CHECK ESPECIALLY `this.#elementTarget.length === 0`.\n      if (this.#elementTarget === null || this.#elementTarget === void 0 || this.#elementTarget.length === 0)\n      {\n         throw new Error(`SvelteApplication - _injectHTML: Target element '${this.options.selectorTarget}' not found.`);\n      }\n\n      // The initial zIndex may be set in application options or for popOut applications is stored by `_renderOuter`\n      // in `this.#initialZIndex`.\n      if (typeof this.options.positionable === 'boolean' && this.options.positionable)\n      {\n         this.#elementTarget.style.zIndex = typeof this.options.zIndex === 'number' ? this.options.zIndex :\n          this.#initialZIndex ?? 95;\n      }\n\n      // Subscribe to local store handling.\n      this.#stores.subscribe();\n   }\n\n   /**\n    * Provides a mechanism to update the UI options store for maximized.\n    *\n    * Note: the sanity check is duplicated from {@link Application.maximize} the store is updated _before_\n    * performing the rest of animations. This allows application shells to remove / show any resize handlers\n    * correctly. Extra constraint data is stored in a saved position state in {@link SvelteApplication.minimize}\n    * to animate the content area.\n    *\n    * @param {object}   [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.animate=true] - When true perform default maximizing animation.\n    *\n    * @param {number}   [opts.duration=0.1] - Controls content area animation duration in seconds.\n    */\n   async maximize({ animate = true, duration = 0.1 } = {})\n   {\n      if (!this.popOut || [false, null].includes(this._minimized)) { return; }\n\n      this._minimized = null;\n\n      const durationMS = duration * 1000; // For WAAPI.\n\n      // Get content\n      const element = this.elementTarget;\n      const header = element.querySelector('.window-header');\n      const content = element.querySelector('.window-content');\n\n      // Get the complete position before minimized. Used to reset min width & height to initial values later.\n      const positionBefore = this.position.state.get({ name: '#beforeMinimized' });\n\n      // First animate / restore width / async.\n      if (animate)\n      {\n         await this.position.state.restore({\n            name: '#beforeMinimized',\n            async: true,\n            animateTo: true,\n            properties: ['width'],\n            duration: 0.1\n         });\n      }\n\n      // Reset display none on all children of header.\n      for (let cntr = header.children.length; --cntr >= 0;) { header.children[cntr].style.display = null; }\n\n      content.style.display = null;\n\n      let constraints;\n\n      if (animate)\n      {\n         // Next animate / restore height synchronously and remove key. Retrieve constraints data for slide up animation\n         // below.\n         ({ constraints } = this.position.state.restore({\n            name: '#beforeMinimized',\n            animateTo: true,\n            properties: ['height'],\n            remove: true,\n            duration\n         }));\n      }\n      else\n      {\n         ({ constraints } = this.position.state.remove({ name: '#beforeMinimized' }));\n      }\n\n      // Slide down content with stored constraints.\n      await content.animate([\n         { maxHeight: 0, paddingTop: 0, paddingBottom: 0, offset: 0 },\n         { ...constraints, offset: 1 },\n         { maxHeight: '100%', offset: 1 },\n      ], { duration: durationMS, fill: 'forwards' }).finished; // WAAPI in ms.\n\n      // Restore previous min width & height from saved data, app options, or default Foundry values.\n      this.position.set({\n         minHeight: positionBefore.minHeight ?? this.options?.minHeight ?? MIN_WINDOW_HEIGHT,\n         minWidth: positionBefore.minWidth ?? this.options?.minWidth ?? MIN_WINDOW_WIDTH,\n      });\n\n      // Remove inline styles that override any styles assigned to the app.\n      element.style.minWidth = null;\n      element.style.minHeight = null;\n\n      element.classList.remove('minimized');\n\n      this._minimized = false;\n\n      // Using a 50ms timeout prevents any instantaneous display of scrollbars with the above maximize animation.\n      setTimeout(() =>\n      {\n         content.style.overflow = null;\n\n         // Reset all children of content removing overflow hidden.\n         for (let cntr = content.children.length; --cntr >= 0;)\n         {\n            content.children[cntr].style.overflow = null;\n         }\n      }, 50);\n\n      this.#stores.uiOptionsUpdate((options) => deepMerge(options, { minimized: false }));\n   }\n\n   /**\n    * Provides a mechanism to update the UI options store for minimized.\n    *\n    * Note: the sanity check is duplicated from {@link Application.minimize} the store is updated _before_\n    * performing the rest of animations. This allows application shells to remove / show any resize handlers\n    * correctly. Extra constraint data is stored in a saved position state in {@link SvelteApplication.minimize}\n    * to animate the content area.\n    *\n    * @param {object}   [opts] - Optional parameters\n    *\n    * @param {boolean}  [opts.animate=true] - When true perform default minimizing animation.\n    *\n    * @param {number}   [opts.duration=0.1] - Controls content area animation duration in seconds.\n    */\n   async minimize({ animate = true, duration = 0.1 } = {})\n   {\n      if (!this.rendered || !this.popOut || [true, null].includes(this._minimized)) { return; }\n\n      this.#stores.uiOptionsUpdate((options) => deepMerge(options, { minimized: true }));\n\n      this._minimized = null;\n\n      const durationMS = duration * 1000; // For WAAPI.\n\n      const element = this.elementTarget;\n\n      // Get content\n      const header = element.querySelector('.window-header');\n      const content = element.querySelector('.window-content');\n\n      // Save current max / min height & width.\n      const beforeMinWidth = this.position.minWidth;\n      const beforeMinHeight = this.position.minHeight;\n\n      // Set minimized min width & height for header bar.\n      this.position.set({ minWidth: 100, minHeight: 30 });\n\n      // Also set inline styles to override any styles scoped to the app.\n      element.style.minWidth = '100px';\n      element.style.minHeight = '30px';\n\n      if (content)\n      {\n         content.style.overflow = 'hidden';\n\n         // Set all children of content to overflow hidden as if there is going to be additional scrolling elements\n         // they are likely one level deep.\n         for (let cntr = content.children.length; --cntr >= 0;)\n         {\n            content.children[cntr].style.overflow = 'hidden';\n         }\n      }\n\n      const { paddingBottom, paddingTop } = globalThis.getComputedStyle(content);\n\n      // Extra data that is saved with the current position. Used during `maximize`.\n      const constraints = {\n         maxHeight: `${content.clientHeight}px`,\n         paddingTop,\n         paddingBottom\n      };\n\n      // Slide-up content\n      if (animate)\n      {\n         const animation = content.animate([\n            constraints,\n            { maxHeight: 0, paddingTop: 0, paddingBottom: 0 }\n         ], { duration: durationMS, fill: 'forwards' }); // WAAPI in ms.\n\n         // Set display style to none when animation finishes.\n         animation.finished.then(() => content.style.display = 'none');\n      }\n      else\n      {\n         setTimeout(() => content.style.display = 'none', durationMS);\n      }\n\n      // Save current position state and add the constraint data to use in `maximize`.\n      const saved = this.position.state.save({ name: '#beforeMinimized', constraints });\n\n      // Set the initial before min width & height.\n      saved.minWidth = beforeMinWidth;\n      saved.minHeight = beforeMinHeight;\n\n      const headerOffsetHeight = header.offsetHeight;\n\n      // minHeight needs to be adjusted to header height.\n      this.position.minHeight = headerOffsetHeight;\n\n      if (animate)\n      {\n         // First await animation of height upward.\n         await this.position.animate.to({ height: headerOffsetHeight }, { duration }).finished;\n      }\n\n      // Set all header buttons besides close and the window title to display none.\n      for (let cntr = header.children.length; --cntr >= 0;)\n      {\n         const className = header.children[cntr].className;\n\n         if (className.includes('window-title') || className.includes('close') ||\n          className.includes('keep-minimized'))\n         {\n            continue;\n         }\n\n         header.children[cntr].style.display = 'none';\n      }\n\n      if (animate)\n      {\n         // Await animation of width to the left / minimum width.\n         await this.position.animate.to({ width: MIN_WINDOW_WIDTH }, { duration: 0.1 }).finished;\n      }\n\n      element.classList.add('minimized');\n\n      this._minimized = true;\n   }\n\n   /**\n    * Provides a callback after all Svelte components are initialized.\n    *\n    * @param {object}      [opts] - Optional parameters.\n    *\n    * @param {HTMLElement} [opts.element] - HTMLElement container for main application element.\n    *\n    * @param {HTMLElement} [opts.elementContent] - HTMLElement container for content area of application shells.\n    *\n    * @param {HTMLElement} [opts.elementTarget] - HTMLElement container for main application target element.\n    */\n   onSvelteMount({ element, elementContent, elementTarget } = {}) {} // eslint-disable-line no-unused-vars\n\n   /**\n    * Provides a callback after the main application shell is remounted. This may occur during HMR / hot module\n    * replacement or directly invoked from the `elementRootUpdate` callback passed to the application shell component\n    * context.\n    *\n    * @param {object}      [opts] - Optional parameters.\n    *\n    * @param {HTMLElement} [opts.element] - HTMLElement container for main application element.\n    *\n    * @param {HTMLElement} [opts.elementContent] - HTMLElement container for content area of application shells.\n    *\n    * @param {HTMLElement} [opts.elementTarget] - HTMLElement container for main application target element.\n    */\n   onSvelteRemount({ element, elementContent, elementTarget } = {}) {} // eslint-disable-line no-unused-vars\n\n   /**\n    * Override replacing HTML as Svelte components control the rendering process. Only potentially change the outer\n    * application frame / title for pop-out applications.\n    *\n    * @inheritDoc\n    * @ignore\n    */\n   _replaceHTML(element, html)  // eslint-disable-line no-unused-vars\n   {\n      if (!element.length) { return; }\n\n      this.reactive.updateHeaderButtons();\n   }\n\n   /**\n    * Provides an override verifying that a new Application being rendered for the first time doesn't have a\n    * corresponding DOM element already loaded. This is a check that only occurs when `this._state` is\n    * `Application.RENDER_STATES.NONE`. It is useful in particular when SvelteApplication has a static ID\n    * explicitly set in `this.options.id` and long intro / outro transitions are assigned. If a new application\n    * sharing this static ID attempts to open / render for the first time while an existing DOM element sharing\n    * this static ID exists then the initial render is cancelled below rather than crashing later in the render\n    * cycle {@link Position.set}.\n    *\n    * @inheritDoc\n    * @protected\n    * @ignore\n    */\n   async _render(force = false, options = {})\n   {\n      if (this._state === Application.RENDER_STATES.NONE &&\n       document.querySelector(`#${this.id}`) instanceof HTMLElement)\n      {\n         console.warn(`SvelteApplication - _render: A DOM element already exists for CSS ID '${this.id\n         }'. Cancelling initial render for new application with appId '${this.appId}'.`);\n\n         return;\n      }\n\n      await super._render(force, options);\n\n      if (!this.#onMount)\n      {\n         this.onSvelteMount({ element: this._element[0], elementContent: this.#elementContent, elementTarget:\n          this.#elementTarget });\n\n         this.#onMount = true;\n      }\n   }\n\n   /**\n    * Render the inner application content. Only render a template if one is defined otherwise provide an empty\n    * JQuery element per the core Foundry API.\n    *\n    * @param {Object} data         The data used to render the inner template\n    *\n    * @returns {Promise.<JQuery>}   A promise resolving to the constructed jQuery object\n    *\n    * @protected\n    * @ignore\n    */\n   async _renderInner(data)\n   {\n      const html = typeof this.template === 'string' ? await renderTemplate(this.template, data) :\n       document.createDocumentFragment();\n\n      return $(html);\n   }\n\n   /**\n    * Stores the initial z-index set in `_renderOuter` which is used in `_injectHTML` to set the target element\n    * z-index after the Svelte component is mounted.\n    *\n    * @returns {Promise<JQuery>} Outer frame / unused.\n    * @protected\n    * @ignore\n    */\n   async _renderOuter()\n   {\n      const html = await super._renderOuter();\n      this.#initialZIndex = html[0].style.zIndex;\n      return html;\n   }\n\n   /**\n    * All calculation and updates of position are implemented in {@link Position.set}. This allows position to be fully\n    * reactive and in control of updating inline styles for the application.\n    *\n    * This method remains for backward compatibility with Foundry. If you have a custom override quite likely you need\n    * to update to using the {@link Position.validators} functionality.\n    *\n    * @param {PositionDataExtended}   [position] - Position data.\n    *\n    * @returns {Position} The updated position object for the application containing the new values\n    */\n   setPosition(position)\n   {\n      return this.position.set(position);\n   }\n\n   /**\n    * This method is invoked by the `elementRootUpdate` callback that is added to the external context passed to\n    * Svelte components. When invoked it updates the local element roots tracked by SvelteApplication.\n    *\n    * This method may also be invoked by HMR / hot module replacement via `svelte-hmr`.\n    */\n   #updateApplicationShell()\n   {\n      const applicationShell = this.svelte.applicationShell;\n\n      if (applicationShell !== null)\n      {\n         this._element = $(applicationShell.elementRoot);\n\n         // Detect if the application shell exports an `elementContent` accessor.\n         this.#elementContent = hasGetter(applicationShell, 'elementContent') ?\n          applicationShell.elementContent : null;\n\n         // Detect if the application shell exports an `elementTarget` accessor.\n         this.#elementTarget = hasGetter(applicationShell, 'elementTarget') ?\n          applicationShell.elementTarget : null;\n\n         if (this.#elementTarget === null)\n         {\n            const element = typeof this.options.selectorTarget === 'string' ?\n             this._element.find(this.options.selectorTarget) : this._element;\n\n            this.#elementTarget = element[0];\n         }\n\n         // The initial zIndex may be set in application options or for popOut applications is stored by `_renderOuter`\n         // in `this.#initialZIndex`.\n         if (typeof this.options.positionable === 'boolean' && this.options.positionable)\n         {\n            this.#elementTarget.style.zIndex = typeof this.options.zIndex === 'number' ? this.options.zIndex :\n             this.#initialZIndex ?? 95;\n\n            super.bringToTop();\n\n            // Ensure that new root element has inline position styles set.\n            this.position.set(this.position.get());\n         }\n\n         super._activateCoreListeners([this.#elementTarget]);\n\n         this.onSvelteRemount({ element: this._element[0], elementContent: this.#elementContent, elementTarget:\n          this.#elementTarget });\n      }\n   }\n}\n\n/**\n * @typedef {object} SvelteData\n *\n * @property {object}                           config -\n *\n * @property {import('svelte').SvelteComponent} component -\n *\n * @property {HTMLElement}                      element -\n *\n * @property {boolean}                          injectHTML -\n */\n\n/**\n * @typedef {object} SvelteStores\n *\n * @property {import('svelte/store').Writable.update} appOptionsUpdate - Update function for app options store.\n *\n * @property {Function} subscribe - Subscribes to local stores.\n *\n * @property {import('svelte/store').Writable.update} uiOptionsUpdate - Update function for UI options store.\n *\n * @property {Function} unsubscribe - Unsubscribes from local stores.\n */\n","<script>\n   export let warn = false;\n   export let children = void 0;\n</script>\n\n<svelte:options accessors={true}/>\n\n{#if Array.isArray(children)}\n    {#each children as child}\n        <svelte:component this={child.class} {...child.props} />\n    {/each}\n{:else if warn}\n    <p>Container warning: No children.</p>\n{/if}\n\n<style>\n    p {\n        color: red;\n        font-size: 18px;\n    }\n</style>","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n    let len = node.getTotalLength();\n    const style = getComputedStyle(node);\n    if (style.strokeLinecap !== 'butt') {\n        len += parseInt(style.strokeWidth);\n    }\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","import { linear } from 'svelte/easing';\nimport { lerp } from '@typhonjs-fvtt/runtime/svelte/math';\nimport { fade, slide } from 'svelte/transition';\n\n/**\n * Provides a rotate transition. For options `easing` is applied to to the rotate transition. The default easing is\n * linear.\n *\n * Note: that when reversing the transition that time goes from `1 - 0`, so if specific options are applied for\n * rotating out transition then `end` and `initial` are swapped.\n *\n * @param {HTMLElement} node - The transition node.\n *\n * @param {object}      options - Optional parameters.\n *\n * @param {number}      [options.delay] - Delay in ms before start of transition.\n *\n * @param {number}      [options.duration] - Total transition length in ms.\n *\n * @param {Function}    [options.easing=linear] - The easing function to apply to the rotate transition.\n *\n * @param {number}      [options.end=0] - End rotation in degrees.\n *\n * @param {number}      [options.initial=0] - Initial rotation in degrees.\n *\n * @returns {{duration: number, css: (function(*=): string), delay: number, easing: (x: number) => number}}\n *  Transition object.\n */\nfunction rotate(node, options)\n{\n   const easingRotate = options.easing ?? linear;\n\n   const initialDeg = options.initial ?? 0;\n   const endDeg = options.end ?? 0;\n\n   return {\n      delay: options.delay ?? 0,\n      duration: options.duration ?? 500,\n      easing: linear,\n      css: (t) =>\n      {\n         const rotateT = easingRotate(t);\n         return `transform: rotate(${lerp(initialDeg, endDeg, rotateT)}deg)`;\n      }\n   };\n}\n\n/**\n * Combines rotate & fade transitions into a single transition. For options `easing` this is applied to both transitions,\n * however if provided `easingRotate` and / or `easingFade` will take precedence. The default easing is linear.\n *\n * Note: that when reversing the transition that time goes from `1 - 0`, so if specific options are applied for\n * rotating out transition then `end` and `initial` are swapped.\n *\n * @param {HTMLElement} node - The transition node.\n *\n * @param {object}      options - Optional parameters.\n *\n * @param {number}      [options.delay] - Delay in ms before start of transition.\n *\n * @param {number}      [options.duration] - Total transition length in ms.\n *\n * @param {Function}    [options.easing=linear] - The easing function to apply to both slide & fade transitions.\n *\n * @param {Function}    [options.easingFade=linear] - The easing function to apply to the fade transition.\n *\n * @param {Function}    [options.easingRotate=linear] - The easing function to apply to the rotate transition.\n *\n * @param {number}      [options.end=0] - End rotation in degrees.\n *\n * @param {number}      [options.initial=0] - Initial rotation in degrees.\n *\n * @returns {{duration: number, css: (function(*=): string), delay: number, easing: (x: number) => number}}\n *  Transition object.\n */\nfunction rotateFade(node, options)\n{\n   const easingFade = options.easingFade || options.easing || linear;\n   const easingRotate = options.easingRotate || options.easing || linear;\n\n   const fadeTransition = fade(node);\n\n   const initialDeg = options.initial ?? 0;\n   const endDeg = options.end ?? 0;\n\n   return {\n      delay: options.delay ?? 0,\n      duration: options.duration ?? 500,\n      easing: linear,\n      css: (t) =>\n      {\n         const fadeT = easingFade(t);\n         const rotateT = easingRotate(t);\n\n         return `transform: rotate(${lerp(initialDeg, endDeg, rotateT)}deg); ${fadeTransition.css(fadeT, 1 - fadeT)}`;\n      }\n   };\n}\n\n/**\n * Combines slide & fade transitions into a single transition. For options `easing` this is applied to both transitions,\n * however if provided `easingSlide` and / or `easingFade` will take precedence. The default easing is linear.\n *\n * @param {HTMLElement} node - The transition node.\n *\n * @param {object}      options - Optional parameters.\n *\n * @param {number}      [options.delay] - Delay in ms before start of transition.\n *\n * @param {number}      [options.duration] - Total transition length in ms.\n *\n * @param {Function}    [options.easing=linear] - The easing function to apply to both slide & fade transitions.\n *\n * @param {Function}    [options.easingFade=linear] - The easing function to apply to the fade transition.\n *\n * @param {Function}    [options.easingSlide=linear] - The easing function to apply to the slide transition.\n *\n * @returns {{duration: number, css: (function(*=): string), delay: number, easing: (x: number) => number}}\n *  Transition object.\n */\nfunction slideFade(node, options)\n{\n   const fadeEasing = options.easingFade || options.easing || linear;\n   const slideEasing = options.easingSlide || options.easing || linear;\n\n   const fadeTransition = fade(node);\n   const slideTransition = slide(node);\n\n   return {\n      delay: options.delay || 0,\n      duration: options.duration || 500,\n      easing: linear,\n      css: (t) =>\n      {\n         const fadeT = fadeEasing(t);\n         const slideT = slideEasing(t);\n         return `${slideTransition.css(slideT, 1 - slideT)}; ${fadeTransition.css(fadeT, 1 - fadeT)}`;\n      }\n   };\n}\n\n/**\n * Converts a Svelte transition to an animation. Both transitions & animations use the same CSS / styles solution and\n * resulting data so wrap the transition function with the signature of an animation.\n *\n * @param {(node: Element, params?: object) => import('svelte/transition').TransitionConfig} fn - A Svelte transition\n *                                                                                                function.\n *\n * @returns {(node: Element, { from: DOMRect, to: DOMRect }, params?: object) =>\n *  import('svelte/transition').TransitionConfig} Transition function converted to an animation.\n */\nfunction toAnimation(fn) {\n   return (node, animations, params = {}) => fn(node, params);\n}\n\nconst s_DEFAULT_TRANSITION = () => void 0;\nconst s_DEFAULT_TRANSITION_OPTIONS = {};\n\nexport { rotate, rotateFade, s_DEFAULT_TRANSITION, s_DEFAULT_TRANSITION_OPTIONS, slideFade, toAnimation };\n//# sourceMappingURL=index.js.map\n","import { isUpdatableStore, isWritableStore } from '@typhonjs-fvtt/runtime/svelte/store';\nimport { styleParsePixels, debounce, hasSetter } from '@typhonjs-fvtt/runtime/svelte/util';\nimport { cubicOut } from 'svelte/easing';\n\n/**\n * Provides an action to always blur the element when any pointer up event occurs on the element.\n *\n * @param {HTMLElement}   node - The node to handle always blur on pointer up.\n */\nfunction alwaysBlur(node)\n{\n   function blur()\n   {\n      setTimeout(() => { if (document.activeElement === node) { node.blur(); } }, 0);\n   }\n\n   node.addEventListener('pointerup', blur);\n\n   return {\n      destroy: () => node.removeEventListener('pointerup', blur)\n   };\n}\n\n/**\n * Provides an action to monitor the given HTMLElement node with `ResizeObserver` posting width / height changes\n * to the target in various ways depending on the shape of the target. The target can be one of the following and the\n * precedence order is listed from top to bottom:\n *\n * - has a `resizeObserved` function as attribute; offset then content width / height are passed as parameters.\n * - has a `setContentBounds` function as attribute; content width / height are passed as parameters.\n * - has a `setDimension` function as attribute; offset width / height are passed as parameters.\n * - target is an object; offset and content width / height attributes are directly set on target.\n * - target is a function; the function is invoked with offset then content width / height parameters.\n * - has a writable store `resizeObserved` as an attribute; updated with offset & content width / height.\n * - has an object 'stores' that has a writable store `resizeObserved` as an attribute; updated with offset &\n *   content width / height.\n *\n * Note: Svelte currently uses an archaic IFrame based workaround to monitor offset / client width & height changes.\n * A more up to date way to do this is with ResizeObserver. To track when Svelte receives ResizeObserver support\n * monitor this issue: {@link https://github.com/sveltejs/svelte/issues/4233}\n *\n * Can-I-Use: {@link https://caniuse.com/resizeobserver}\n *\n * @param {HTMLElement}          node - The node associated with the action.\n *\n * @param {ResizeObserverTarget} target - An object or function to update with observed width & height changes.\n *\n * @returns {{update: Function, destroy: Function}} The action lifecycle methods.\n * @see {@link https://github.com/sveltejs/svelte/issues/4233}\n */\nfunction resizeObserver(node, target)\n{\n   ResizeObserverManager.add(node, target);\n\n   return {\n      update: (newTarget) =>\n      {\n         ResizeObserverManager.remove(node, target);\n         target = newTarget;\n         ResizeObserverManager.add(node, target);\n      },\n\n      destroy: () =>\n      {\n         ResizeObserverManager.remove(node, target);\n      }\n   };\n}\n\n/**\n * Provides a function that when invoked with an element updates the cached styles for each subscriber of the element.\n *\n * The style attributes cached to calculate offset height / width include border & padding dimensions. You only need\n * to update the cache if you change border or padding attributes of the element.\n *\n * @param {HTMLElement} el - An HTML element.\n */\nresizeObserver.updateCache = function(el)\n{\n   if (!(el instanceof HTMLElement)) { throw new TypeError(`resizeObserverUpdate error: 'el' is not an HTMLElement.`); }\n\n   const subscribers = s_MAP.get(el);\n\n   if (Array.isArray(subscribers))\n   {\n      const computed = globalThis.getComputedStyle(el);\n\n      // Cache styles first from any inline styles then computed styles defaulting to 0 otherwise.\n      // Used to create the offset width & height values from the context box ResizeObserver provides.\n      const borderBottom = styleParsePixels(el.style.borderBottom) ?? styleParsePixels(computed.borderBottom) ?? 0;\n      const borderLeft = styleParsePixels(el.style.borderLeft) ?? styleParsePixels(computed.borderLeft) ?? 0;\n      const borderRight = styleParsePixels(el.style.borderRight) ?? styleParsePixels(computed.borderRight) ?? 0;\n      const borderTop = styleParsePixels(el.style.borderTop) ?? styleParsePixels(computed.borderTop) ?? 0;\n      const paddingBottom = styleParsePixels(el.style.paddingBottom) ?? styleParsePixels(computed.paddingBottom) ?? 0;\n      const paddingLeft = styleParsePixels(el.style.paddingLeft) ?? styleParsePixels(computed.paddingLeft) ?? 0;\n      const paddingRight = styleParsePixels(el.style.paddingRight) ?? styleParsePixels(computed.paddingRight) ?? 0;\n      const paddingTop = styleParsePixels(el.style.paddingTop) ?? styleParsePixels(computed.paddingTop) ?? 0;\n\n      const additionalWidth = borderLeft + borderRight + paddingLeft + paddingRight;\n      const additionalHeight = borderTop + borderBottom + paddingTop + paddingBottom;\n\n      for (const subscriber of subscribers)\n      {\n         subscriber.styles.additionalWidth = additionalWidth;\n         subscriber.styles.additionalHeight = additionalHeight;\n         s_UPDATE_SUBSCRIBER(subscriber, subscriber.contentWidth, subscriber.contentHeight);\n      }\n   }\n};\n\n// Below is the static ResizeObserverManager ------------------------------------------------------------------------\n\nconst s_MAP = new Map();\n\n/**\n * Provides a static / single instance of ResizeObserver that can notify listeners in different ways.\n *\n * The action, {@link resizeObserver}, utilizes ResizeObserverManager for automatic registration and removal\n * via Svelte.\n */\nclass ResizeObserverManager\n{\n   /**\n    * Add an HTMLElement and ResizeObserverTarget instance for monitoring. Create cached style attributes for the\n    * given element include border & padding dimensions for offset width / height calculations.\n    *\n    * @param {HTMLElement}    el - The element to observe.\n    *\n    * @param {ResizeObserverTarget} target - A target that contains one of several mechanisms for updating resize data.\n    */\n   static add(el, target)\n   {\n      const updateType = s_GET_UPDATE_TYPE(target);\n\n      if (updateType === 0)\n      {\n         throw new Error(`'target' does not match supported ResizeObserverManager update mechanisms.`);\n      }\n\n      const computed = globalThis.getComputedStyle(el);\n\n      // Cache styles first from any inline styles then computed styles defaulting to 0 otherwise.\n      // Used to create the offset width & height values from the context box ResizeObserver provides.\n      const borderBottom = styleParsePixels(el.style.borderBottom) ?? styleParsePixels(computed.borderBottom) ?? 0;\n      const borderLeft = styleParsePixels(el.style.borderLeft) ?? styleParsePixels(computed.borderLeft) ?? 0;\n      const borderRight = styleParsePixels(el.style.borderRight) ?? styleParsePixels(computed.borderRight) ?? 0;\n      const borderTop = styleParsePixels(el.style.borderTop) ?? styleParsePixels(computed.borderTop) ?? 0;\n      const paddingBottom = styleParsePixels(el.style.paddingBottom) ?? styleParsePixels(computed.paddingBottom) ?? 0;\n      const paddingLeft = styleParsePixels(el.style.paddingLeft) ?? styleParsePixels(computed.paddingLeft) ?? 0;\n      const paddingRight = styleParsePixels(el.style.paddingRight) ?? styleParsePixels(computed.paddingRight) ?? 0;\n      const paddingTop = styleParsePixels(el.style.paddingTop) ?? styleParsePixels(computed.paddingTop) ?? 0;\n\n      const data = {\n         updateType,\n         target,\n\n         // Stores most recent contentRect.width and contentRect.height values from ResizeObserver.\n         contentWidth: 0,\n         contentHeight: 0,\n\n         // Convenience data for total border & padding for offset width & height calculations.\n         styles: {\n            additionalWidth: borderLeft + borderRight + paddingLeft + paddingRight,\n            additionalHeight: borderTop + borderBottom + paddingTop + paddingBottom\n         }\n      };\n\n      if (s_MAP.has(el))\n      {\n         const subscribers = s_MAP.get(el);\n         subscribers.push(data);\n      }\n      else\n      {\n         s_MAP.set(el, [data]);\n      }\n\n      s_RESIZE_OBSERVER.observe(el);\n   }\n\n   /**\n    * Removes all targets from monitoring when just an element is provided otherwise removes a specific target\n    * from the monitoring map. If no more targets remain then the element is removed from monitoring.\n    *\n    * @param {HTMLElement}          el - Element to remove from monitoring.\n    *\n    * @param {ResizeObserverTarget} [target] - A specific target to remove from monitoring.\n    */\n   static remove(el, target = void 0)\n   {\n      const subscribers = s_MAP.get(el);\n      if (Array.isArray(subscribers))\n      {\n         const index = subscribers.findIndex((entry) => entry.target === target);\n         if (index >= 0)\n         {\n            // Update target subscriber with undefined values.\n            s_UPDATE_SUBSCRIBER(subscribers[index], void 0, void 0);\n\n            subscribers.splice(index, 1);\n         }\n\n         // Remove element monitoring if last target removed.\n         if (subscribers.length === 0)\n         {\n            s_MAP.delete(el);\n            s_RESIZE_OBSERVER.unobserve(el);\n         }\n      }\n   }\n}\n\n/**\n * Defines the various shape / update type of the given target.\n *\n * @type {Record<string, number>}\n */\nconst s_UPDATE_TYPES = {\n   none: 0,\n   attribute: 1,\n   function: 2,\n   resizeObserved: 3,\n   setContentBounds: 4,\n   setDimension: 5,\n   storeObject: 6,\n   storesObject: 7\n};\n\nconst s_RESIZE_OBSERVER = new ResizeObserver((entries) =>\n{\n   for (const entry of entries)\n   {\n      const subscribers = s_MAP.get(entry?.target);\n\n      if (Array.isArray(subscribers))\n      {\n         const contentWidth = entry.contentRect.width;\n         const contentHeight = entry.contentRect.height;\n\n         for (const subscriber of subscribers)\n         {\n            s_UPDATE_SUBSCRIBER(subscriber, contentWidth, contentHeight);\n         }\n      }\n   }\n});\n\n/**\n * Determines the shape of the target instance regarding valid update mechanisms to set width & height changes.\n *\n * @param {*}  target - The target instance.\n *\n * @returns {number} Update type value.\n */\nfunction s_GET_UPDATE_TYPE(target)\n{\n   if (target?.resizeObserved instanceof Function) { return s_UPDATE_TYPES.resizeObserved; }\n   if (target?.setDimension instanceof Function) { return s_UPDATE_TYPES.setDimension; }\n   if (target?.setContentBounds instanceof Function) { return s_UPDATE_TYPES.setContentBounds; }\n\n   const targetType = typeof target;\n\n   // Does the target have resizeObserved writable store?\n   if ((targetType === 'object' || targetType === 'function'))\n   {\n      if (isUpdatableStore(target.resizeObserved))\n      {\n         return s_UPDATE_TYPES.storeObject;\n      }\n\n      // Now check for a child stores object which is a common TRL pattern for exposing stores.\n      const stores = target?.stores;\n      if (typeof stores === 'object' || typeof stores === 'function')\n      {\n         if (isUpdatableStore(stores.resizeObserved))\n         {\n            return s_UPDATE_TYPES.storesObject;\n         }\n      }\n   }\n\n   if (targetType === 'object') { return s_UPDATE_TYPES.attribute; }\n\n   if (targetType === 'function') { return s_UPDATE_TYPES.function; }\n\n   return s_UPDATE_TYPES.none;\n}\n\n/**\n * Updates a subscriber target with given content width & height values. Offset width & height is calculated from\n * the content values + cached styles.\n *\n * @param {object}            subscriber - Internal data about subscriber.\n *\n * @param {number|undefined}  contentWidth - ResizeObserver contentRect.width value or undefined.\n *\n * @param {number|undefined}  contentHeight - ResizeObserver contentRect.height value or undefined.\n */\nfunction s_UPDATE_SUBSCRIBER(subscriber, contentWidth, contentHeight)\n{\n   const styles = subscriber.styles;\n\n   subscriber.contentWidth = contentWidth;\n   subscriber.contentHeight = contentHeight;\n\n   const offsetWidth = Number.isFinite(contentWidth) ? contentWidth + styles.additionalWidth : void 0;\n   const offsetHeight = Number.isFinite(contentHeight) ? contentHeight + styles.additionalHeight : void 0;\n\n   const target = subscriber.target;\n\n   switch (subscriber.updateType)\n   {\n      case s_UPDATE_TYPES.attribute:\n         target.contentWidth = contentWidth;\n         target.contentHeight = contentHeight;\n         target.offsetWidth = offsetWidth;\n         target.offsetHeight = offsetHeight;\n         break;\n\n      case s_UPDATE_TYPES.function:\n         target?.(offsetWidth, offsetHeight, contentWidth, contentHeight);\n         break;\n\n      case s_UPDATE_TYPES.resizeObserved:\n         target.resizeObserved?.(offsetWidth, offsetHeight, contentWidth, contentHeight);\n         break;\n\n      case s_UPDATE_TYPES.setContentBounds:\n         target.setContentBounds?.(contentWidth, contentHeight);\n         break;\n\n      case s_UPDATE_TYPES.setDimension:\n         target.setDimension?.(offsetWidth, offsetHeight);\n         break;\n\n      case s_UPDATE_TYPES.storeObject:\n         target.resizeObserved.update((object) =>\n         {\n            object.contentHeight = contentHeight;\n            object.contentWidth = contentWidth;\n            object.offsetHeight = offsetHeight;\n            object.offsetWidth = offsetWidth;\n\n            return object;\n         });\n         break;\n\n      case s_UPDATE_TYPES.storesObject:\n         target.stores.resizeObserved.update((object) =>\n         {\n            object.contentHeight = contentHeight;\n            object.contentWidth = contentWidth;\n            object.offsetHeight = offsetHeight;\n            object.offsetWidth = offsetWidth;\n\n            return object;\n         });\n         break;\n   }\n}\n\n/**\n * @typedef {object | Function} ResizeObserverTarget\n *\n * @property {number} [contentHeight] -\n *\n * @property {number} [contentWidth] -\n *\n * @property {number} [offsetHeight] -\n *\n * @property {number} [offsetWidth] -\n *\n * @property {Writable<object> | Function} [resizedObserver] - Either a function or a writable store.\n *\n * @property {Function} [setContentSize] - A function that is invoked with content width & height changes.\n *\n * @property {Function} [setDimension] - A function that is invoked with offset width & height changes.\n *\n * @property {{resizedObserver: Writable<object>}} [stores] - An object with a writable store.\n */\n\n/**\n * Provides an action to save `scrollTop` of an element with a vertical scrollbar. This action should be used on the\n * scrollable element and must include a writable store that holds the active store for the current `scrollTop` value.\n * You may switch the stores externally and this action will set the `scrollTop` based on the newly set store. This is\n * useful for instance providing a select box that controls the scrollable container.\n *\n * @param {HTMLElement} element - The target scrollable HTML element.\n *\n * @param {import('svelte/store').Writable<number>}   store - A writable store that stores the element scrollTop.\n */\nfunction applyScrolltop(element, store)\n{\n   if (!isWritableStore(store))\n   {\n      throw new TypeError(`applyScrolltop error: 'store' must be a writable Svelte store.`);\n   }\n\n   function storeUpdate(value)\n   {\n      if (!Number.isFinite(value)) { return; }\n\n      // For some reason for scrollTop to take on first update from a new element setTimeout is necessary.\n      setTimeout(() => element.scrollTop = value, 0);\n   }\n\n   let unsubscribe = store.subscribe(storeUpdate);\n\n   const resizeControl = resizeObserver(element, debounce(() => {\n      if (element.isConnected) { store.set(element.scrollTop); }\n   }, 500));\n\n   /**\n    * Save target `scrollTop` to the current set store.\n    *\n    * @param {Event} event -\n    */\n   function onScroll(event)\n   {\n      store.set(event.target.scrollTop);\n   }\n\n   const debounceFn = debounce((e) => onScroll(e), 500);\n\n   element.addEventListener('scroll', debounceFn);\n\n   return {\n      update: (newStore) =>\n      {\n         unsubscribe();\n         store = newStore;\n\n         if (!isWritableStore(store))\n         {\n            throw new TypeError(`applyScrolltop.update error: 'store' must be a writable Svelte store.`);\n         }\n\n         unsubscribe = store.subscribe(storeUpdate);\n      },\n\n      destroy: () =>\n      {\n         element.removeEventListener('scroll', debounceFn);\n         unsubscribe();\n         resizeControl.destroy();\n      }\n   };\n}\n\n/**\n * Provides an action to apply style properties provided as an object.\n *\n * @param {HTMLElement} node - Target element\n *\n * @param {object}      properties - Key / value object of properties to set.\n *\n * @returns {Function} Update function.\n */\nfunction applyStyles(node, properties)\n{\n   /** Sets properties on node. */\n   function setProperties()\n   {\n      if (typeof properties !== 'object') { return; }\n\n      for (const prop of Object.keys(properties))\n      {\n         node.style.setProperty(`${prop}`, properties[prop]);\n      }\n   }\n\n   setProperties();\n\n   return {\n      update(newProperties)\n      {\n         properties = newProperties;\n         setProperties();\n      }\n   };\n}\n\n/**\n * Provides an action to blur the element when any pointer down event occurs outside the element. This can be useful\n * for input elements including select to blur / unfocus the element when any pointer down occurs outside the element.\n *\n * @param {HTMLElement}   node - The node to handle automatic blur on focus loss.\n */\nfunction autoBlur(node)\n{\n   function blur() { document.body.removeEventListener('pointerdown', onPointerDown); }\n   function focus() { document.body.addEventListener('pointerdown', onPointerDown); }\n\n   /**\n    * Blur the node if a pointer down event happens outside the node.\n    * @param {PointerEvent} event\n    */\n   function onPointerDown(event)\n   {\n      if (event.target === node || node.contains(event.target)) { return; }\n\n      if (document.activeElement === node) { node.blur(); }\n   }\n\n   node.addEventListener('blur', blur);\n   node.addEventListener('focus', focus);\n\n   return {\n      destroy: () =>\n      {\n         document.body.removeEventListener('pointerdown', onPointerDown);\n         node.removeEventListener('blur', blur);\n         node.removeEventListener('focus', focus);\n      }\n   };\n}\n\n/**\n * Provides an action to apply a Position instance to a HTMLElement and invoke `position.parent`\n *\n * @param {HTMLElement}       node - The node associated with the action.\n *\n * @param {Position}          position - A position instance.\n *\n * @returns {{update: Function, destroy: Function}} The action lifecycle methods.\n */\nfunction applyPosition(node, position)\n{\n   if (hasSetter(position, 'parent')) { position.parent = node; }\n\n   return {\n      update: (newPosition) =>\n      {\n         // Sanity case to short circuit update if positions are the same instance.\n         if (newPosition === position && newPosition.parent === position.parent) { return; }\n\n         if (hasSetter(position)) { position.parent = void 0; }\n\n         position = newPosition;\n\n         if (hasSetter(position, 'parent')) { position.parent = node; }\n      },\n\n      destroy: () => { if (hasSetter(position, 'parent')) { position.parent = void 0; } }\n   };\n}\n\n/**\n * Provides an action to enable pointer dragging of an HTMLElement and invoke `position.set` on a given {@link Position}\n * instance provided. When the attached boolean store state changes the draggable action is enabled or disabled.\n *\n * @param {HTMLElement}       node - The node associated with the action.\n *\n * @param {object}            params - Required parameters.\n *\n * @param {Position}          params.position - A position instance.\n *\n * @param {boolean}           [params.active=true] - A boolean value; attached to a readable store.\n *\n * @param {number}            [params.button=0] - MouseEvent button; {@link https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button}.\n *\n * @param {Writable<boolean>} [params.storeDragging] - A writable store that tracks \"dragging\" state.\n *\n * @param {boolean}           [params.ease=true] - When true easing is enabled.\n *\n * @param {object}            [params.easeOptions] - Gsap `to / `quickTo` vars object.\n *\n * @returns {{update: Function, destroy: Function}} The action lifecycle methods.\n */\nfunction draggable(node, { position, active = true, button = 0, storeDragging = void 0, ease = false,\n easeOptions = { duration: 0.1, ease: cubicOut } })\n{\n   /**\n    * Duplicate the app / Positionable starting position to track differences.\n    *\n    * @type {object}\n    */\n   let initialPosition = null;\n\n   /**\n    * Stores the initial X / Y on drag down.\n    *\n    * @type {object}\n    */\n   let initialDragPoint = {};\n\n   /**\n    * Stores the current dragging state and gates the move pointer as the dragging store is not\n    * set until the first pointer move.\n    *\n    * @type {boolean}\n    */\n   let dragging = false;\n\n   /**\n    * Stores the quickTo callback to use for optimized tweening when easing is enabled.\n    *\n    * @type {quickToCallback}\n    */\n   let quickTo = position.animate.quickTo(['top', 'left'], easeOptions);\n\n   /**\n    * Remember event handlers associated with this action so they may be later unregistered.\n    *\n    * @type {object}\n    */\n   const handlers = {\n      dragDown: ['pointerdown', (e) => onDragPointerDown(e), false],\n      dragMove: ['pointermove', (e) => onDragPointerChange(e), false],\n      dragUp: ['pointerup', (e) => onDragPointerUp(e), false]\n   };\n\n   /**\n    * Activates listeners.\n    */\n   function activateListeners()\n   {\n      // Drag handlers\n      node.addEventListener(...handlers.dragDown);\n      node.classList.add('draggable');\n   }\n\n   /**\n    * Removes listeners.\n    */\n   function removeListeners()\n   {\n      if (typeof storeDragging?.set === 'function') { storeDragging.set(false); }\n\n      // Drag handlers\n      node.removeEventListener(...handlers.dragDown);\n      node.removeEventListener(...handlers.dragMove);\n      node.removeEventListener(...handlers.dragUp);\n      node.classList.remove('draggable');\n   }\n\n   if (active)\n   {\n      activateListeners();\n   }\n\n   /**\n    * Handle the initial pointer down that activates dragging behavior for the positionable.\n    *\n    * @param {PointerEvent} event - The pointer down event.\n    */\n   function onDragPointerDown(event)\n   {\n      if (event.button !== button || !event.isPrimary) { return; }\n\n      event.preventDefault();\n\n      dragging = false;\n\n      // Record initial position.\n      initialPosition = position.get();\n      initialDragPoint = { x: event.clientX, y: event.clientY };\n\n      // Add move and pointer up handlers.\n      node.addEventListener(...handlers.dragMove);\n      node.addEventListener(...handlers.dragUp);\n\n      node.setPointerCapture(event.pointerId);\n   }\n\n   /**\n    * Move the positionable.\n    *\n    * @param {PointerEvent} event - The pointer move event.\n    */\n   function onDragPointerChange(event)\n   {\n      // See chorded button presses for pointer events:\n      // https://www.w3.org/TR/pointerevents3/#chorded-button-interactions\n      // TODO: Support different button configurations for PointerEvents.\n      if ((event.buttons & 1) === 0)\n      {\n         onDragPointerUp(event);\n         return;\n      }\n\n      if (event.button !== -1 || !event.isPrimary) { return; }\n\n      event.preventDefault();\n\n      // Only set store dragging on first move event.\n      if (!dragging && typeof storeDragging?.set === 'function')\n      {\n         dragging = true;\n         storeDragging.set(true);\n      }\n\n      /** @type {number} */\n      const newLeft = initialPosition.left + (event.clientX - initialDragPoint.x);\n      /** @type {number} */\n      const newTop = initialPosition.top + (event.clientY - initialDragPoint.y);\n\n      if (ease)\n      {\n         quickTo(newTop, newLeft);\n      }\n      else\n      {\n         s_POSITION_DATA.left = newLeft;\n         s_POSITION_DATA.top = newTop;\n\n         position.set(s_POSITION_DATA);\n      }\n   }\n\n   /**\n    * Finish dragging and set the final position and removing listeners.\n    *\n    * @param {PointerEvent} event - The pointer up event.\n    */\n   function onDragPointerUp(event)\n   {\n      event.preventDefault();\n\n      dragging = false;\n      if (typeof storeDragging?.set === 'function') { storeDragging.set(false); }\n\n      node.removeEventListener(...handlers.dragMove);\n      node.removeEventListener(...handlers.dragUp);\n   }\n\n   return {\n      // The default of active being true won't automatically add listeners twice.\n      update: (options) =>\n      {\n         if (typeof options.active === 'boolean')\n         {\n            active = options.active;\n            if (active) { activateListeners(); }\n            else { removeListeners(); }\n         }\n\n         if (typeof options.button === 'number')\n         {\n            button = options.button;\n         }\n\n         if (options.position !== void 0 && options.position !== position)\n         {\n            position = options.position;\n            quickTo = position.animate.quickTo(['top', 'left'], easeOptions);\n         }\n\n         if (typeof options.ease === 'boolean') { ease = options.ease; }\n\n         if (typeof options.easeOptions === 'object')\n         {\n            easeOptions = options.easeOptions;\n            quickTo.options(easeOptions);\n         }\n      },\n\n      destroy: () => removeListeners()\n   };\n}\n\nclass DraggableOptions\n{\n   #ease = false;\n\n   #easeOptions = { duration: 0.1, ease: cubicOut };\n\n   /**\n    * Stores the subscribers.\n    *\n    * @type {(function(DraggableOptions): void)[]}\n    */\n   #subscriptions = [];\n\n   constructor({ ease, easeOptions } = {})\n   {\n      // Define the following getters directly on this instance and make them enumerable. This allows them to be\n      // picked up w/ `Object.assign`.\n      Object.defineProperty(this, 'ease', {\n         get: () => { return this.#ease; },\n         set: (newEase) =>\n         {\n            if (typeof newEase !== 'boolean') { throw new TypeError(`'ease' is not a boolean.`); }\n\n            this.#ease = newEase;\n            this.#updateSubscribers();\n         },\n         enumerable: true\n      });\n\n      Object.defineProperty(this, 'easeOptions', {\n         get: () => { return this.#easeOptions; },\n         set: (newEaseOptions) =>\n         {\n            if (newEaseOptions === null || typeof newEaseOptions !== 'object')\n            {\n               throw new TypeError(`'easeOptions' is not an object.`);\n            }\n\n            if (newEaseOptions.duration !== void 0)\n            {\n               if (!Number.isFinite(newEaseOptions.duration))\n               {\n                  throw new TypeError(`'easeOptions.duration' is not a finite number.`);\n               }\n\n               if (newEaseOptions.duration < 0) { throw new Error(`'easeOptions.duration' is less than 0.`); }\n\n               this.#easeOptions.duration = newEaseOptions.duration;\n            }\n\n            if (newEaseOptions.ease !== void 0)\n            {\n               if (typeof newEaseOptions.ease !== 'function' && typeof newEaseOptions.ease !== 'string')\n               {\n                  throw new TypeError(`'easeOptions.ease' is not a function or string.`);\n               }\n\n               this.#easeOptions.ease = newEaseOptions.ease;\n            }\n\n            this.#updateSubscribers();\n         },\n         enumerable: true\n      });\n\n      // Set default options.\n      if (ease !== void 0) { this.ease = ease; }\n      if (easeOptions !== void 0) { this.easeOptions = easeOptions; }\n   }\n\n\n   /**\n    * @returns {number} Get ease duration\n    */\n   get easeDuration() { return this.#easeOptions.duration; }\n\n   /**\n    * @returns {string|Function} Get easing function value.\n    */\n   get easeValue() { return this.#easeOptions.ease; }\n\n\n   /**\n    * @param {number}   duration - Set ease duration.\n    */\n   set easeDuration(duration)\n   {\n      if (!Number.isFinite(duration))\n      {\n         throw new TypeError(`'duration' is not a finite number.`);\n      }\n\n      if (duration < 0) { throw new Error(`'duration' is less than 0.`); }\n\n      this.#easeOptions.duration = duration;\n      this.#updateSubscribers();\n   }\n\n   /**\n    * @param {string|Function} value - Get easing function value.\n    */\n   set easeValue(value)\n   {\n      if (typeof value !== 'function' && typeof value !== 'string')\n      {\n         throw new TypeError(`'value' is not a function or string.`);\n      }\n\n      this.#easeOptions.ease = value;\n      this.#updateSubscribers();\n   }\n\n   /**\n    * Resets all options data to default values.\n    */\n   reset()\n   {\n      this.#ease = false;\n      this.#easeOptions = { duration: 0.1, ease: cubicOut };\n      this.#updateSubscribers();\n   }\n\n   /**\n    * Resets easing options to default values.\n    */\n   resetEase()\n   {\n      this.#easeOptions = { duration: 0.1, ease: cubicOut };\n      this.#updateSubscribers();\n   }\n\n   /**\n    *\n    * @param {function(DraggableOptions): void} handler - Callback function that is invoked on update / changes.\n    *                                                 Receives the DraggableOptions object / instance.\n    *\n    * @returns {(function(): void)} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\n\n      handler(this);                     // call handler with current value\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n\n   #updateSubscribers()\n   {\n      const subscriptions = this.#subscriptions;\n\n      // Early out if there are no subscribers.\n      if (subscriptions.length > 0)\n      {\n         for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](this); }\n      }\n   }\n}\n\n/**\n * Define a function to get a DraggableOptions instance.\n *\n * @returns {DraggableOptions} A new options instance.\n */\ndraggable.options = (options) => new DraggableOptions(options);\n\n/**\n * Used for direct call to `position.set`.\n *\n * @type {{top: number, left: number}}\n */\nconst s_POSITION_DATA = { left: 0, top: 0 };\n\nexport { alwaysBlur, applyPosition, applyScrolltop, applyStyles, autoBlur, draggable, resizeObserver };\n//# sourceMappingURL=index.js.map\n","/**\n * A helper to create a set of radio checkbox input elements in a named set.\n * The provided keys are the possible radio values while the provided values are human readable labels.\n *\n * @param {string} name         The radio checkbox field name\n *\n * @param {object} choices      A mapping of radio checkbox values to human readable labels\n *\n * @param {object} options      Options which customize the radio boxes creation\n *\n * @param {string} options.checked    Which key is currently checked?\n *\n * @param {boolean} options.localize  Pass each label through string localization?\n *\n * @returns {string} HTML for radio boxes.\n *\n * @example <caption>The provided input data</caption>\n * let groupName = \"importantChoice\";\n * let choices = {a: \"Choice A\", b: \"Choice B\"};\n * let chosen = \"a\";\n *\n * @example <caption>The template HTML structure</caption>\n * <div class=\"form-group\">\n *   <label>Radio Group Label</label>\n *   <div class=\"form-fields\">\n *     {@html radioBoxes(groupName, choices, { checked: chosen, localize: true})}\n *   </div>\n * </div>\n */\nfunction radioBoxes(name, choices, options)\n{\n   const checked = options['checked'] || null;\n   const localize = options['localize'] || false;\n   let html = '';\n\n   for (let [key, label] of Object.entries(choices)) // eslint-disable-line prefer-const\n   {\n      if (localize) { label = game.i18n.localize(label); }\n      const isChecked = checked === key;\n      html += `<label class=\"checkbox\"><input type=\"radio\" name=\"${name}\" value=\"${key}\" ${\n       isChecked ? 'checked' : ''}> ${label}</label>`;\n   }\n\n   return html;\n}\n\n/**\n * Converts the `selectOptions` Handlebars helper to be Svelte compatible. This is useful when initially converting\n * over an app to Svelte and for essential usage to several dialogs that mirror the core Foundry experience. For\n * an example of usage see {@link TJSFolderPermissions}.\n *\n * A helper to create a set of <option> elements in a <select> block based on a provided dictionary.\n * The provided keys are the option values while the provided values are human-readable labels.\n * This helper supports both single-select as well as multi-select input fields.\n *\n * @param {object} choices                     A mapping of radio checkbox values to human readable labels\n *\n * @param {object} options                     Helper options\n *\n * @param {string|string[]} [options.selected] Which key or array of keys that are currently selected?\n *\n * @param {boolean} [options.localize=false]   Pass each label through string localization?\n *\n * @param {string} [options.blank]             Add a blank option as the first option with this label\n *\n * @param {string} [options.nameAttr]          Look up a property in the choice object values to use as the option value\n *\n * @param {string} [options.labelAttr]         Look up a property in the choice object values to use as the option label\n *\n * @param {boolean} [options.inverted=false]   Use the choice object value as the option value, and the key as the label\n *                                             instead of vice-versa\n *\n * @returns {string} The <options> HTML element(s).\n *\n * @example <caption>The provided input data</caption>\n * let choices = {a: 'Choice A', b: 'Choice B'};\n * let value = 'a';\n *\n * @example <caption>The template HTML structure</caption>\n * <select name=\"importantChoice\">\n *   {@html selectOptions(choices { selected: value, localize: true })}\n * </select>\n *\n * @example <caption>The resulting HTML</caption>\n * <select name=\"importantChoice\">\n *   <option value=\"a\" selected>Choice A</option>\n *   <option value=\"b\">Choice B</option>\n * </select>\n *\n * @example <caption>Using inverted</caption>\n * let choices = {'Choice A': 'a', 'Choice B': 'b'};\n * let value = 'a';\n *\n * @example <caption>The template HTML structure</caption>\n * <select name=\"importantChoice\">\n *   {@html selectOptions(choices, { selected: value, inverted: true })}\n * </select>\n *\n * @example <caption>Using nameAttr and labelAttr with objects</caption>\n * let choices = {foo: {key: 'a', label: 'Choice A'}, bar: {key: 'b', label: 'Choice B'}};\n * let value = 'b';\n *\n * @example <caption>The template HTML structure</caption>\n * <select name=\"importantChoice\">\n *   {@html selectOptions(choices, { selected: value, nameAttr: 'key', labelAttr: 'label' })}\n * </select>\n *\n * @example <caption>Using nameAttr and labelAttr with arrays</caption>\n * let choices = [{key: 'a', label: 'Choice A'}, {key: 'b', label: 'Choice B'}];\n * let value = 'b';\n *\n * @example <caption>The template HTML structure</caption>\n * <select name=\"importantChoice\">\n *   {@html selectOptions(choices, { selected: value, nameAttr: 'key', labelAttr: 'label' })}\n * </select>\n */\nfunction selectOptions(choices, options)\n{\n   const localize = options['localize'] ?? false;\n   let selected = options['selected'] ?? null;\n   const blank = options['blank'] ?? null;\n   const nameAttr = options['nameAttr'];\n   const labelAttr = options['labelAttr'];\n   const inverted = !!options['inverted'];\n\n   selected = selected instanceof Array ? selected.map(String) : [String(selected)];\n\n   // Create an option\n   const option = (name, label) =>\n   {\n      if (localize) { label = game.i18n.localize(label); }\n      const isSelected = selected.includes(String(name));\n\n      html += `<option value=\"${name}\" ${isSelected ? \"selected\" : \"\"}>${label}</option>`;\n   };\n\n   // Create the options\n   let html = '';\n   if (blank !== null) { option('', blank); }\n\n   // Options as an Array\n   if (choices instanceof Array)\n   {\n      for (const choice of choices) { option(choice[nameAttr], choice[labelAttr]); }\n   }\n\n   // Choices as an Object\n   else\n   {\n      for (const choice of Object.entries(choices))\n      {\n         let [key, value] = inverted ? choice.reverse() : choice;\n         if (nameAttr) { key = value[nameAttr]; }\n         if (labelAttr) { value = value[labelAttr]; }\n         option(key, value);\n      }\n   }\n\n   return html;\n}\n\n/**\n * Localize a string including variable formatting for input arguments. Provide a string ID which defines the localized\n * template. Variables can be included in the template enclosed in braces and will be substituted using those named\n * keys.\n *\n * @param {string}   stringId - The string ID to translate.\n *\n * @param {object}   [data] - Provided input data.\n *\n * @returns {string} The translated and formatted string\n */\nfunction localize(stringId, data)\n{\n   const result = typeof data !== 'object' ? game.i18n.localize(stringId) : game.i18n.format(stringId, data);\n   return result !== void 0 ? result : '';\n}\n\nexport { localize, radioBoxes, selectOptions };\n//# sourceMappingURL=index.js.map\n","<script>\n   /**\n    * Provides an app header button conforming to the Foundry {@link ApplicationHeaderButton} type. Additionally a\n    * `title` field is supported to give a tool tip for the button. The `onclick` function if defined is invoked when\n    * the button is clicked and state is updated accordingly.\n    */\n   import { applyStyles }   from '@typhonjs-fvtt/runtime/svelte/action';\n   import { localize }      from '@typhonjs-fvtt/runtime/svelte/helper';\n\n   export let button = void 0;\n\n   const s_REGEX_HTML = /^\\s*<.*>$/;\n\n   let icon, label, title, styles\n\n   $: if (button)\n   {\n      title = typeof button.title === 'string' ? localize(button.title) : '';\n\n      // Handle icon and treat bare strings as the icon class; otherwise assume the icon is fully formed HTML.\n      icon = typeof button.icon !== 'string' ? void 0 : s_REGEX_HTML.test(button.icon) ? button.icon :\n       `<i class=\"${button.icon}\" title=\"${title}\"></i>`;\n\n      label = typeof button.label === 'string' ? localize(button.label) : '';\n\n      styles = typeof button.styles === 'object' ? button.styles : void 0;\n   }\n\n   function onClick(event)\n   {\n      // Accept either callback or onclick as the function / data to invoke.\n      const invoke = button.callback ?? button.onclick;\n\n      if (typeof invoke === 'function')\n      {\n         invoke.call(button, event);\n         button = button; // This provides a reactive update if button data changes.\n      }\n   }\n\n</script>\n\n<svelte:options accessors={true}/>\n\n<!-- Need to capture pointerdown / dblclick to prevent further action by TJSApplicationHeader -->\n<a on:click|capture|preventDefault|stopPropagation={onClick}\n   on:pointerdown|capture|preventDefault|stopPropagation={()=>null}\n   on:mousedown|capture|preventDefault|stopPropagation={()=>null}\n   on:dblclick|capture|preventDefault|stopPropagation={()=>null}\n   use:applyStyles={styles}\n   class=\"header-button {button.class}\">\n    {@html icon}{label}\n</a>\n","<script>\n   import { getContext }            from 'svelte';\n   import { cubicOut }              from 'svelte/easing';\n\n   import {\n      draggable as dragDefault }    from '@typhonjs-fvtt/runtime/svelte/action';\n\n   import { localize }              from '@typhonjs-fvtt/runtime/svelte/helper';\n\n   import { isSvelteComponent }     from '@typhonjs-fvtt/runtime/svelte/util';\n\n   import TJSHeaderButton           from './TJSHeaderButton.svelte';\n\n   export let draggable = void 0;\n   export let draggableOptions = void 0;\n\n   const application = getContext('external').application;\n\n   const storeTitle = application.reactive.storeAppOptions.title;\n   const storeDraggable = application.reactive.storeAppOptions.draggable;\n   const storeDragging = application.reactive.storeUIState.dragging;\n   const storeHeaderButtons = application.reactive.storeUIState.headerButtons;\n   const storeHeaderNoTitleMinimized = application.reactive.storeAppOptions.headerNoTitleMinimized;\n   const storeMinimizable = application.reactive.storeAppOptions.minimizable;\n   const storeMinimized = application.reactive.storeUIState.minimized;\n\n   let dragOptions;\n\n   $: draggable = typeof draggable === 'function' ? draggable : dragDefault;\n\n   // Combines external options with defaults for TJSApplicationHeader.\n   // $: dragOptions = Object.assign({}, typeof draggableOptions === 'object' ? draggableOptions : {},\n   //  { position: application.position, active: $storeDraggable, storeDragging });\n\n   // Combines external options with defaults for TJSApplicationHeader. By default, easing is turned on w/ duration of\n   // 0.1 and cubicOut, but can be overridden by any provided `draggableOptions`. `position`, `active`, and\n   // `storeDragging` are always overridden by application position / stores.\n   $: dragOptions = Object.assign({}, { ease: true, easeOptions: { duration: 0.1, ease: cubicOut } },\n    typeof draggableOptions === 'object' ? draggableOptions : {}, { position: application.position, active:\n     $storeDraggable, storeDragging });\n\n   let displayHeaderTitle;\n\n   $: displayHeaderTitle = $storeHeaderNoTitleMinimized && $storeMinimized ? 'none' : null;\n\n   let buttons;\n\n   $:\n   {\n      buttons = $storeHeaderButtons.reduce((array, button) =>\n      {\n         // If the button is a SvelteComponent set it as the class otherwise use `TJSHeaderButton` w/ button as props.\n         array.push(isSvelteComponent(button) ? { class: button, props: {} } :\n          { class: TJSHeaderButton, props: { button } });\n\n         return array;\n      }, []);\n   }\n\n   function minimizable(node, booleanStore)\n   {\n      const callback = application._onToggleMinimize.bind(application);\n\n      function activateListeners() { node.addEventListener('dblclick', callback); }\n      function removeListeners() { node.removeEventListener('dblclick', callback); }\n\n      if (booleanStore) { activateListeners(); }\n\n      return {\n         update: (booleanStore) =>  // eslint-disable-line no-shadow\n         {\n            if (booleanStore) { activateListeners(); }\n            else { removeListeners(); }\n         },\n\n         destroy: () => removeListeners()\n      };\n   }\n</script>\n\n{#key draggable}\n   <header class=\"window-header flexrow\"\n           use:draggable={dragOptions}\n           use:minimizable={$storeMinimizable}>\n      <h4 class=window-title style:display={displayHeaderTitle}>{localize($storeTitle)}</h4>\n      {#each buttons as button}\n         <svelte:component this={button.class} {...button.props} />\n      {/each}\n   </header>\n{/key}\n\n<style>\n   .window-title {\n      text-overflow: ellipsis;\n      overflow: hidden;\n      white-space: nowrap;\n   }\n</style>\n","<script>\n   import { getContext }         from 'svelte';\n\n   export let isResizable = false;\n\n   const application = getContext('external').application;\n\n   // Allows retrieval of the element root at runtime.\n   const storeElementRoot = getContext('storeElementRoot');\n\n   const storeResizable = application.reactive.storeAppOptions.resizable;\n\n   const storeMinimized = application.reactive.storeUIState.minimized;\n   const storeResizing = application.reactive.storeUIState.resizing;\n\n   let elementResize;\n\n   $: if (elementResize)\n   {\n      // Instead of creating a derived store it is easier to use isResizable and the minimized store below.\n      elementResize.style.display = isResizable && !$storeMinimized ? 'block' : 'none';\n\n      // Add / remove `resizable` class from element root.\n      const elementRoot = $storeElementRoot;\n      if (elementRoot) { elementRoot.classList[isResizable ? 'add' : 'remove']('resizable'); }\n   }\n\n   /**\n    * Provides an action to handle resizing the application shell based on the resizable app option.\n    *\n    * @param {HTMLElement}       node - The node associated with the action.\n    *\n    * @param {object}            [opts] - Optional parameters.\n    *\n    * @param {boolean}           [opts.active=true] - A boolean value; attached to a readable store.\n    *\n    * @param {Writable<boolean>} [opts.storeResizing] - A writable store that tracks \"resizing\" state.\n    *\n    * @returns {{update: Function, destroy: Function}} The action lifecycle methods.\n    */\n   function resizable(node, { active = true, storeResizing = void 0 } = {})\n   {\n      /**\n       * Duplicate the app / Positionable starting position to track differences.\n       *\n       * @type {object}\n       */\n      let position = null;\n\n      /**\n       * Stores the initial X / Y on drag down.\n       *\n       * @type {object}\n       */\n      let initialPosition = {};\n\n      /**\n       * Stores the current resizing state and gates the move pointer as the resizing store is not\n       * set until the first pointer move.\n       *\n       * @type {boolean}\n       */\n      let resizing = false;\n\n      /**\n       * Remember event handlers associated with this action so they may be later unregistered.\n       *\n       * @type {Object}\n       */\n      const handlers = {\n         resizeDown: ['pointerdown', (e) => onResizePointerDown(e), false],\n         resizeMove: ['pointermove', (e) => onResizePointerMove(e), false],\n         resizeUp: ['pointerup', (e) => onResizePointerUp(e), false]\n      };\n\n      /**\n       * Activates listeners.\n       */\n      function activateListeners()\n      {\n         // Resize handlers\n         node.addEventListener(...handlers.resizeDown);\n\n         isResizable = true;\n\n         node.style.display = 'block';\n      }\n\n      /**\n       * Removes listeners.\n       */\n      function removeListeners()\n      {\n         if (typeof storeResizing?.set === 'function') { storeResizing.set(false); }\n\n         // Resize handlers\n         node.removeEventListener(...handlers.resizeDown);\n         node.removeEventListener(...handlers.resizeMove);\n         node.removeEventListener(...handlers.resizeUp);\n\n         node.style.display = 'none';\n\n         isResizable = false;\n      }\n\n      // On mount if resizable is true then activate listeners otherwise set element display to `none`.\n      if (active)\n      {\n         activateListeners();\n      }\n      else\n      {\n         node.style.display = 'none';\n      }\n\n      /**\n       * Handle the initial pointer down that activates resizing capture.\n       */\n      function onResizePointerDown(event)\n      {\n         event.preventDefault();\n\n         resizing = false;\n\n         // Record initial position\n         position = application.position.get();\n\n         if (position.height === 'auto') { position.height = $storeElementRoot.clientHeight; }\n         if (position.width === 'auto') { position.width = $storeElementRoot.clientWidth; }\n\n         initialPosition = { x: event.clientX, y: event.clientY };\n\n         // Add temporary handlers\n         node.addEventListener(...handlers.resizeMove);\n         node.addEventListener(...handlers.resizeUp);\n\n         node.setPointerCapture(event.pointerId);\n      }\n\n      /**\n       * Sets the width / height of the positionable application.\n       */\n      function onResizePointerMove(event)\n      {\n         event.preventDefault();\n\n         if (!resizing && typeof storeResizing?.set === 'function')\n         {\n            resizing = true;\n            storeResizing.set(true);\n         }\n\n         application.position.set({\n            width: position.width + (event.clientX - initialPosition.x),\n            height: position.height + (event.clientY - initialPosition.y)\n         });\n      }\n\n      /**\n       * Conclude the dragging behavior when the pointer is released setting the final position and\n       * removing listeners.\n       */\n      function onResizePointerUp(event)\n      {\n         resizing = false;\n         if (typeof storeResizing?.set === 'function') { storeResizing.set(false); }\n\n         event.preventDefault();\n         node.removeEventListener(...handlers.resizeMove);\n         node.removeEventListener(...handlers.resizeUp);\n\n         application._onResize(event);\n      }\n\n      return {\n         update: ({ active }) =>  // eslint-disable-line no-shadow\n         {\n            if (active) { activateListeners(); }\n            else { removeListeners(); }\n         },\n\n         destroy: () => removeListeners()\n      };\n   }\n\n</script>\n\n<div class=\"window-resizable-handle\"\n     use:resizable={{active: $storeResizable, storeResizing}}\n     bind:this={elementResize}>\n   <i class=\"fas fa-arrows-alt-h\"></i>\n</div>\n","<script>\n   import { getContext, setContext }    from 'svelte';\n   import { writable }                  from 'svelte/store';\n\n   import {\n      applyStyles,\n      resizeObserver }                  from '@typhonjs-fvtt/runtime/svelte/action';\n\n   import TJSApplicationHeader          from './TJSApplicationHeader.svelte';\n   import TJSContainer                  from '../TJSContainer.svelte';\n   import ResizableHandle               from './ResizableHandle.svelte';\n\n   import {\n      s_DEFAULT_TRANSITION,\n      s_DEFAULT_TRANSITION_OPTIONS }    from '@typhonjs-fvtt/runtime/svelte/transition';\n\n   // Bound to the content and root elements. Can be used by parent components. SvelteApplication will also\n   // use 'elementRoot' to set the element of the Application. You can also provide `elementContent` and\n   // `elementTarget`. Please see SvelteApplication lifecycle documentation.\n   export let elementContent = void 0;\n   export let elementRoot = void 0;\n\n   // Allows custom draggable implementations to be forwarded to TJSApplicationHeader.\n   export let draggable = void 0;\n   export let draggableOptions = void 0;\n\n   // The children array can be specified by a parent via prop or is read below from the external context.\n   export let children = void 0;\n\n   // Explicit style overrides for the main app and content elements. Uses action `applyStyles`.\n   export let stylesApp = void 0;\n   export let stylesContent = void 0;\n\n   // If a parent component binds and sets `appOffsetHeight` to true then a resizeObserver action is enabled on the\n   // outer application `div`. Additionally, the SvelteApplication position resizeObserved store is updated.\n   export let appOffsetHeight = false;\n   export let appOffsetWidth = false;\n\n   // Set to `resizeObserver` if either of the above props are truthy otherwise a null operation.\n   const appResizeObserver = !!appOffsetHeight || !!appOffsetWidth ? resizeObserver : () => null;\n\n   // If a parent component binds and sets `contentOffsetHeight` or `contentOffsetWidth` to true then a\n   // resizeObserver action is enabled on the content `section`.\n   export let contentOffsetHeight = false;\n   export let contentOffsetWidth = false;\n\n   // Set to `resizeObserver` if either of the above props are truthy otherwise a null operation.\n   const contentResizeObserver = !!contentOffsetHeight || !!contentOffsetWidth ? resizeObserver : () => null;\n\n   // If the application is a popOut application then when clicked bring to top. Bound to on pointerdown.\n   const bringToTop = (event) =>\n   {\n      if (typeof application.options.popOut === 'boolean' && application.options.popOut)\n      {\n         if (application !== ui?.activeWindow) { application.bringToTop.call(application); }\n\n         // If the activeElement is not `document.body` and the event target isn't the activeElement then blur the\n         // current active element and make `document.body` focused. This allows <esc> key to close all open apps /\n         // windows.\n         if (document.activeElement !== document.body && event.target !== document.activeElement)\n         {\n            // Blur current active element.\n            if (document.activeElement instanceof HTMLElement) { document.activeElement.blur(); }\n\n            // Make document body focused.\n            document.body.focus();\n         }\n      }\n   }\n\n   // Use a writable store to make `elementContent` and `elementRoot` accessible. A store is used in the case when\n   // One root component with an `elementRoot` is replaced with another. Due to timing issues and the onDestroy / outro\n   // transitions either of these may be set to null. I will investigate more and file a bug against Svelte.\n   if (!getContext('storeElementContent')) { setContext('storeElementContent', writable(elementContent)); }\n   if (!getContext('storeElementRoot')) { setContext('storeElementRoot', writable(elementRoot)); }\n\n   // Only update the `elementContent` store if the new `elementContent` is not null or undefined.\n   $: if (elementContent !== void 0 && elementContent !== null)\n   {\n      getContext('storeElementContent').set(elementContent);\n   }\n\n   // Only update the `elementRoot` store if the new `elementRoot` is not null or undefined.\n   $: if (elementRoot !== void 0 && elementRoot !== null)\n   {\n      getContext('storeElementRoot').set(elementRoot);\n   }\n\n   const context = getContext('external');\n\n   // Store Foundry Application reference.\n   const application = context.application;\n\n   // This component can host multiple children defined via props or in the TyphonJS SvelteData configuration object\n   // that are potentially mounted in the content area. If no children defined then this component mounts any slotted\n   // child.\n   const allChildren = Array.isArray(children) ? children :\n    typeof context === 'object' ? context.children : void 0;\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   // The following block is somewhat complex, but allows transition options to be updated reactively during\n   // runtime execution.\n\n   // Exports properties to set a transition w/ in / out options.\n   export let transition = void 0;\n   export let inTransition = s_DEFAULT_TRANSITION;\n   export let outTransition = s_DEFAULT_TRANSITION;\n\n   // Exports properties to set options for any transitions.\n   export let transitionOptions = void 0;\n   export let inTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS;\n   export let outTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS;\n\n   // Tracks last transition state.\n   let oldTransition = void 0;\n   let oldTransitionOptions = void 0\n\n   // Run this reactive block when the last transition state is not equal to the current state.\n   $: if (oldTransition !== transition)\n   {\n      // If transition is defined and not the default transition then set it to both in and out transition otherwise\n      // set the default transition to both in & out transitions.\n      const newTransition = s_DEFAULT_TRANSITION !== transition && typeof transition === 'function' ? transition :\n       s_DEFAULT_TRANSITION;\n\n      inTransition = newTransition;\n      outTransition = newTransition;\n\n      oldTransition = newTransition;\n   }\n\n   // Run this reactive block when the last transition options state is not equal to the current options state.\n   $: if (oldTransitionOptions !== transitionOptions)\n   {\n      const newOptions = transitionOptions !== s_DEFAULT_TRANSITION_OPTIONS && typeof transitionOptions === 'object' ?\n       transitionOptions : s_DEFAULT_TRANSITION_OPTIONS;\n\n      inTransitionOptions = newOptions;\n      outTransitionOptions = newOptions;\n\n      oldTransitionOptions = newOptions;\n   }\n\n   // Handle cases if inTransition is unset; assign noop default transition function.\n   $: if (typeof inTransition !== 'function') { inTransition = s_DEFAULT_TRANSITION; }\n\n   $:\n   {\n      // Handle cases if outTransition is unset; assign noop default transition function.\n      if (typeof outTransition !== 'function') { outTransition = s_DEFAULT_TRANSITION; }\n\n      // Set jquery close animation to either run or not when an out transition is changed.\n      if (application && typeof application?.options?.defaultCloseAnimation === 'boolean')\n      {\n         application.options.defaultCloseAnimation = outTransition === s_DEFAULT_TRANSITION;\n      }\n   }\n\n   // Handle cases if inTransitionOptions is unset; assign empty default transition options.\n   $: if (typeof inTransitionOptions !== 'object') { inTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS; }\n\n   // Handle cases if outTransitionOptions is unset; assign empty default transition options.\n   $: if (typeof outTransitionOptions !== 'object') { outTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS; }\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   /**\n    * Callback for content resizeObserver action. This is enabled when contentOffsetHeight or contentOffsetWidth is\n    * bound.\n    *\n    * @param {number}   offsetWidth - Observed offsetWidth.\n    *\n    * @param {number}   offsetHeight - Observed offsetHeight\n    */\n   function resizeObservedContent(offsetWidth, offsetHeight)\n   {\n      contentOffsetWidth = offsetWidth;\n      contentOffsetHeight = offsetHeight;\n   }\n\n   /**\n    * Callback for app resizeObserver action. This is enabled when appOffsetHeight or appOffsetWidth is\n    * bound. Additionally, the Application position resizeObserved store is updated.\n    *\n    * @param {number}   contentWidth - Observed contentWidth.\n    * @param {number}   contentHeight - Observed contentHeight\n    * @param {number}   offsetWidth - Observed offsetWidth.\n    * @param {number}   offsetHeight - Observed offsetHeight\n    */\n   function resizeObservedApp(offsetWidth, offsetHeight, contentWidth, contentHeight)\n   {\n      application.position.stores.resizeObserved.update((object) =>\n      {\n         object.contentWidth = contentWidth;\n         object.contentHeight = contentHeight;\n         object.offsetWidth = offsetWidth;\n         object.offsetHeight = offsetHeight;\n\n         return object;\n      });\n\n      appOffsetHeight = offsetHeight;\n      appOffsetWidth = offsetWidth;\n   }\n</script>\n\n<svelte:options accessors={true}/>\n\n<div id={application.id}\n    class=\"tjs-app tjs-window-app {application.options.classes.join(' ')}\"\n    data-appid={application.appId}\n    bind:this={elementRoot}\n    in:inTransition={inTransitionOptions}\n    out:outTransition={outTransitionOptions}\n    on:pointerdown|capture={bringToTop}\n    use:applyStyles={stylesApp}\n    use:appResizeObserver={resizeObservedApp}>\n   <TJSApplicationHeader {draggable} {draggableOptions} />\n   <section class=window-content\n            bind:this={elementContent}\n            use:applyStyles={stylesContent}\n            use:contentResizeObserver={resizeObservedContent}>\n       {#if Array.isArray(allChildren)}\n           <TJSContainer children={allChildren} />\n       {:else}\n           <slot />\n       {/if}\n   </section>\n   <ResizableHandle />\n</div>\n\n<style>\n    /**\n     * Defines styles that mimic a Foundry popout Application. `:global` is used to preserve the unused CSS in the\n     * template above. A primary benefit of a separate application shell implementation is that the styles are not\n     * overridden by any given game system / modules that might alter the standard Foundry Application CSS. This allows\n     * separate and unique styles to be given to this application regardless of game system / module modifications.\n     */\n    :global(.tjs-app) {\n        max-height: 100%;\n        background: url(/ui/denim075.png) repeat;\n        border-radius: 5px;\n        box-shadow: 0 0 20px #000;\n        margin: 3px 0;\n        padding: 0.5em;\n        color: #f0f0e0;\n        z-index: 95;\n        overflow: inherit;\n    }\n\n    :global(.tjs-window-app) {\n        display: flex;\n        flex-direction: column;\n        flex-wrap: nowrap;\n        justify-content: flex-start;\n        position: absolute;\n        box-shadow: 0 0 20px #000;\n        padding: 0;\n        z-index: 95;\n    }\n\n    :global(.tjs-window-app > *) {\n        flex: 1;\n    }\n\n    :global(.tjs-window-app > .flex0) {\n        display: block;\n        flex: 0;\n    }\n\n    :global(.tjs-window-app > .flex1) {\n        flex: 1;\n    }\n\n    :global(.tjs-window-app > .flex2) {\n        flex: 2;\n    }\n\n    :global(.tjs-window-app > .flex3) {\n        flex: 3;\n    }\n\n    :global(.tjs-window-app .window-header) {\n        flex: 0 0 30px;\n        overflow: hidden;\n        padding: 0 8px;\n        line-height: 30px;\n        border-bottom: 1px solid #000;\n    }\n\n    :global(.tjs-window-app .window-header .window-title) {\n        margin: 0;\n        word-break: break-all;\n    }\n\n    :global(.tjs-window-app .window-header a) {\n        flex: none;\n        margin: 0 0 0 8px;\n    }\n\n    :global(.tjs-window-app .window-header i[class^=fa]) {\n        margin-right: 3px;\n    }\n\n    :global(.tjs-window-app.minimized .window-header) {\n        border: 1px solid #000;\n    }\n\n    :global(.tjs-window-app .window-content) {\n        display: flex;\n        flex-direction: column;\n        flex-wrap: nowrap;\n        justify-content: flex-start;\n        background: none;\n        padding: 8px;\n        color: #191813;\n        overflow-y: auto;\n        overflow-x: hidden;\n    }\n\n    /* Note: this is different than stock Foundry that sets `flex: 1`. This greatly aids control of content */\n    /*:global(.tjs-window-app .window-content > *) {*/\n    /*    flex: none;*/\n    /*}*/\n\n    /*:global(.tjs-window-app .window-content > .flex0) {*/\n    /*    display: block;*/\n    /*    flex: 0;*/\n    /*}*/\n\n    /*:global(.tjs-window-app .window-content > .flex1) {*/\n    /*    flex: 1;*/\n    /*}*/\n\n    /*:global(.tjs-window-app .window-content > .flex2) {*/\n    /*    flex: 2;*/\n    /*}*/\n\n    /*:global(.tjs-window-app .window-content > .flex3) {*/\n    /*    flex: 3;*/\n    /*}*/\n\n    :global(.tjs-window-app.zhover) {\n        z-index: calc(var(--z-index-window) + 1);\n    }\n\n    :global(.tjs-window-app .window-resizable-handle) {\n        width: 20px;\n        height: 20px;\n        position: absolute;\n        bottom: -1px;\n        right: 0;\n        background: #444;\n        padding: 2px;\n        border: 1px solid #111;\n        border-radius: 4px 0 0 0;\n    }\n\n    :global(.tjs-window-app .window-resizable-handle i.fas) {\n        transform: rotate(45deg);\n    }\n\n    /*:global(.tjs-window-app.minimized .window-resizable-handle) {*/\n    /*    display: none;*/\n    /*}*/\n</style>\n","import { writable } from '../store/index.mjs';\nimport { now, loop, assign } from '../internal/index.mjs';\nimport { linear } from '../easing/index.mjs';\n\nfunction is_date(obj) {\n    return Object.prototype.toString.call(obj) === '[object Date]';\n}\n\nfunction tick_spring(ctx, last_value, current_value, target_value) {\n    if (typeof current_value === 'number' || is_date(current_value)) {\n        // @ts-ignore\n        const delta = target_value - current_value;\n        // @ts-ignore\n        const velocity = (current_value - last_value) / (ctx.dt || 1 / 60); // guard div by 0\n        const spring = ctx.opts.stiffness * delta;\n        const damper = ctx.opts.damping * velocity;\n        const acceleration = (spring - damper) * ctx.inv_mass;\n        const d = (velocity + acceleration) * ctx.dt;\n        if (Math.abs(d) < ctx.opts.precision && Math.abs(delta) < ctx.opts.precision) {\n            return target_value; // settled\n        }\n        else {\n            ctx.settled = false; // signal loop to keep ticking\n            // @ts-ignore\n            return is_date(current_value) ?\n                new Date(current_value.getTime() + d) : current_value + d;\n        }\n    }\n    else if (Array.isArray(current_value)) {\n        // @ts-ignore\n        return current_value.map((_, i) => tick_spring(ctx, last_value[i], current_value[i], target_value[i]));\n    }\n    else if (typeof current_value === 'object') {\n        const next_value = {};\n        for (const k in current_value) {\n            // @ts-ignore\n            next_value[k] = tick_spring(ctx, last_value[k], current_value[k], target_value[k]);\n        }\n        // @ts-ignore\n        return next_value;\n    }\n    else {\n        throw new Error(`Cannot spring ${typeof current_value} values`);\n    }\n}\nfunction spring(value, opts = {}) {\n    const store = writable(value);\n    const { stiffness = 0.15, damping = 0.8, precision = 0.01 } = opts;\n    let last_time;\n    let task;\n    let current_token;\n    let last_value = value;\n    let target_value = value;\n    let inv_mass = 1;\n    let inv_mass_recovery_rate = 0;\n    let cancel_task = false;\n    function set(new_value, opts = {}) {\n        target_value = new_value;\n        const token = current_token = {};\n        if (value == null || opts.hard || (spring.stiffness >= 1 && spring.damping >= 1)) {\n            cancel_task = true; // cancel any running animation\n            last_time = now();\n            last_value = new_value;\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        else if (opts.soft) {\n            const rate = opts.soft === true ? .5 : +opts.soft;\n            inv_mass_recovery_rate = 1 / (rate * 60);\n            inv_mass = 0; // infinite mass, unaffected by spring forces\n        }\n        if (!task) {\n            last_time = now();\n            cancel_task = false;\n            task = loop(now => {\n                if (cancel_task) {\n                    cancel_task = false;\n                    task = null;\n                    return false;\n                }\n                inv_mass = Math.min(inv_mass + inv_mass_recovery_rate, 1);\n                const ctx = {\n                    inv_mass,\n                    opts: spring,\n                    settled: true,\n                    dt: (now - last_time) * 60 / 1000\n                };\n                const next_value = tick_spring(ctx, last_value, value, target_value);\n                last_time = now;\n                last_value = value;\n                store.set(value = next_value);\n                if (ctx.settled) {\n                    task = null;\n                }\n                return !ctx.settled;\n            });\n        }\n        return new Promise(fulfil => {\n            task.promise.then(() => {\n                if (token === current_token)\n                    fulfil();\n            });\n        });\n    }\n    const spring = {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe,\n        stiffness,\n        damping,\n        precision\n    };\n    return spring;\n}\n\nfunction get_interpolator(a, b) {\n    if (a === b || a !== a)\n        return () => a;\n    const type = typeof a;\n    if (type !== typeof b || Array.isArray(a) !== Array.isArray(b)) {\n        throw new Error('Cannot interpolate values of different type');\n    }\n    if (Array.isArray(a)) {\n        const arr = b.map((bi, i) => {\n            return get_interpolator(a[i], bi);\n        });\n        return t => arr.map(fn => fn(t));\n    }\n    if (type === 'object') {\n        if (!a || !b)\n            throw new Error('Object cannot be null');\n        if (is_date(a) && is_date(b)) {\n            a = a.getTime();\n            b = b.getTime();\n            const delta = b - a;\n            return t => new Date(a + t * delta);\n        }\n        const keys = Object.keys(b);\n        const interpolators = {};\n        keys.forEach(key => {\n            interpolators[key] = get_interpolator(a[key], b[key]);\n        });\n        return t => {\n            const result = {};\n            keys.forEach(key => {\n                result[key] = interpolators[key](t);\n            });\n            return result;\n        };\n    }\n    if (type === 'number') {\n        const delta = b - a;\n        return t => a + t * delta;\n    }\n    throw new Error(`Cannot interpolate ${type} values`);\n}\nfunction tweened(value, defaults = {}) {\n    const store = writable(value);\n    let task;\n    let target_value = value;\n    function set(new_value, opts) {\n        if (value == null) {\n            store.set(value = new_value);\n            return Promise.resolve();\n        }\n        target_value = new_value;\n        let previous_task = task;\n        let started = false;\n        let { delay = 0, duration = 400, easing = linear, interpolate = get_interpolator } = assign(assign({}, defaults), opts);\n        if (duration === 0) {\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        const start = now() + delay;\n        let fn;\n        task = loop(now => {\n            if (now < start)\n                return true;\n            if (!started) {\n                fn = interpolate(value, new_value);\n                if (typeof duration === 'function')\n                    duration = duration(value, new_value);\n                started = true;\n            }\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            const elapsed = now - start;\n            if (elapsed > duration) {\n                store.set(value = new_value);\n                return false;\n            }\n            // @ts-ignore\n            store.set(value = fn(easing(elapsed / duration)));\n            return true;\n        });\n        return task.promise;\n    }\n    return {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe\n    };\n}\n\nexport { spring, tweened };\n","<script>\r\n\r\n    import { tweened } from \"svelte/motion\";\r\n    import { cubicOut } from \"svelte/easing\";\r\n\r\n    export let data;\r\n    export let progress;\r\n\r\n    export let progressBar = tweened(0, {\r\n        duration: data.ease ?? 200,\r\n        easing: cubicOut,\r\n    });\r\n\r\n    export let progressBarGhost = tweened(0, {\r\n        duration: data.ghostEase ?? 1500,\r\n        easing: cubicOut,\r\n    });\r\n\r\n    progressBar.set(progress);\r\n    progressBarGhost.set(progress);\r\n\r\n    $: {\r\n        progressBar.set(progress);\r\n        progressBarGhost.set(progress);\r\n    }\r\n\r\n    const styles = {\r\n        ghostColor: \"rgba(217, 49, 49, 0.40)\",\r\n        color: \"rgba(217, 49, 49, 1)\"\r\n    }\r\n\r\n</script>\r\n\r\n<div class=\"progress-bar\" style=\"--ghost-color:{styles.ghostColor};--color:{styles.color}\">\r\n    {#if !data.hideGhost}\r\n        <div class=\"progress-ghost\" style=\"width:{$progressBarGhost*100}%;\"></div>\r\n    {/if}\r\n    <div class=\"progress\" style=\"width:{$progressBar*100}%;\"></div>\r\n    {#if !data.hideOverlay}\r\n        <div class=\"overlay\"></div>\r\n    {/if}\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n\r\n  .progress-bar {\r\n    width: 100%;\r\n    height: 15px;\r\n    border-radius: 9999px;\r\n    overflow: hidden;\r\n    position: relative;\r\n\r\n    > div {\r\n      height: 100%;\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n    }\r\n\r\n    .progress-ghost {\r\n      z-index: 1;\r\n      background-color: var(--ghost-color);\r\n    }\r\n\r\n    .progress {\r\n      z-index: 2;\r\n      background-color: var(--color);\r\n      box-shadow: -5px 0 5px 0 inset rgb(0 0 0 / 25%);\r\n    }\r\n\r\n    .overlay {\r\n      z-index: 3;\r\n      width: 100%;\r\n      box-shadow: 0 0 2px 2px inset rgb(0 0 0 / 50%);\r\n    }\r\n  }\r\n\r\n</style>","<script>\r\n    import { applyStyles } from \"@typhonjs-fvtt/runtime/svelte/action\";\r\n    export let data;\r\n</script>\r\n\r\n<img src=\"{data.src}\" use:applyStyles={data.styles}/>\r\n\r\n<style lang=\"scss\">\r\n  img {\r\n    position: fixed;\r\n    border: 0;\r\n  }\r\n</style>","<script>\r\n\r\n    import { TJSDocument } from '@typhonjs-fvtt/runtime/svelte/store';\r\n    import ProgressBar from \"./ProgressBar.svelte\";\r\n\r\n    export let data;\r\n\r\n    let pips = data.pips ?? 10;\r\n\r\n    let progress;\r\n    let HP = getProperty(data.actor.data, 'data.attributes.hp');\r\n\r\n    const doc = new TJSDocument(data.actor);\r\n    $: {\r\n        $doc;\r\n        const hpUpdate = getProperty(doc.updateOptions, \"data.data.attributes.hp\");\r\n        if (hpUpdate) {\r\n            HP = getProperty(data.actor.data, 'data.attributes.hp');\r\n        }\r\n    }\r\n\r\n    $: {\r\n        const rawProgress = HP.value / HP.max;\r\n        progress = Math.ceil(rawProgress * pips) / pips;\r\n    }\r\n\r\n    const numPips = Array.from(Array(pips-1).keys())\r\n\r\n</script>\r\n\r\n<div>\r\n    <div class=\"container\">\r\n    {#each numPips as pip, index (index)}\r\n        <img src=\"{data.pipSrc}\" style=\"position:absolute; left: calc({100/(pips/(index+1))}% - 9px);\">\r\n    {/each}\r\n    </div>\r\n    <ProgressBar data={data} bind:progress=\"{progress}\"></ProgressBar>\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n    .container{\r\n      position:relative;\r\n      width:100%;\r\n      z-index:10;\r\n    }\r\n    img {\r\n      border: 0;\r\n    }\r\n</style>","<script>\r\n    import { applyStyles } from \"@typhonjs-fvtt/runtime/svelte/action\";\r\n    export let data;\r\n\r\n</script>\r\n\r\n<div use:applyStyles={data.styles}>{data.text}</div>\r\n\r\n<style lang=\"scss\">\r\n  div {\r\n    position: fixed;\r\n  }\r\n</style>","<script>\r\n\r\n    import { applyStyles } from \"@typhonjs-fvtt/runtime/svelte/action\";\r\n    export let data;\r\n\r\n    let styles;\r\n\r\n    $: {\r\n        styles = {\r\n            \"background-image\": `url(${data.src})`,\r\n            \"background-repeat\": \"repeat-x\",\r\n            ...data.styles\r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n<div use:applyStyles={styles}></div>\r\n\r\n<style lang=\"scss\">\r\n\r\n  div {\r\n    position: fixed;\r\n  }\r\n\r\n</style>","<script>\r\n    import { applyStyles } from \"@typhonjs-fvtt/runtime/svelte/action\";\r\n    import { TJSDocument } from '@typhonjs-fvtt/runtime/svelte/store';\r\n    export let data;\r\n\r\n    let text = getProperty(data.actor.data, data.attribute);\r\n\r\n    const doc = new TJSDocument(data.actor);\r\n    $: {\r\n        $doc;\r\n        const attributeUpdate = getProperty(doc.updateOptions, \"data.\" + data.attribute);\r\n        if (attributeUpdate) {\r\n            text = getProperty(data.actor.data, data.attribute);\r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n<div use:applyStyles={data.styles}>{text}</div>\r\n\r\n<style lang=\"scss\">\r\n  div {\r\n    position: fixed;\r\n  }\r\n</style>","<script>\r\n    import { getContext }   from 'svelte';\r\n    import { scale }        from 'svelte/transition';\r\n\r\n    import {\r\n       applyPosition,\r\n       draggable }          from '@typhonjs-fvtt/runtime/svelte/action';\r\n\r\n    import {\r\n       Image,\r\n       PipBar,\r\n       Text,\r\n       TilingBackground,\r\n       AttributeText }   from '../components';\r\n\r\n    export let elementRoot;\r\n    export let actor;\r\n\r\n    const { application } = getContext('external');\r\n\r\n    const position = application.position;\r\n\r\n    let components = [];\r\n\r\n    function loadComponents(){\r\n\r\n        components = [\r\n            {\r\n                class: Image,\r\n                position: position,\r\n                src: \"modules/bossbar/src/assets/left-cap.png\",\r\n                styles: {\r\n                    \"left\": -7,\r\n                    \"top\": -5\r\n                }\r\n            },\r\n            {\r\n                class: Image,\r\n                position: position,\r\n                src: \"modules/bossbar/src/assets/right-cap.png\",\r\n                styles: {\r\n                    \"left\": position.width - 7,\r\n                    \"top\": -5,\r\n                    \"width\": 15,\r\n                    \"height\": 26\r\n                }\r\n            },\r\n            {\r\n                class: TilingBackground,\r\n                position: position,\r\n                src: \"modules/bossbar/src/assets/tiling-middle.png\",\r\n                styles: {\r\n                    \"top\": -5,\r\n                    \"left\": 7,\r\n                    \"width\": position.width - 14,\r\n                    \"height\": 26\r\n                }\r\n            },\r\n            {\r\n                class: Text,\r\n                position: position,\r\n                text: \"Static Text\",\r\n                styles: {\r\n                    \"top\": -55,\r\n                    \"left\": 0,\r\n                    \"width\": position.width,\r\n                    \"color\": \"white\",\r\n                    \"font-size\": \"3rem\",\r\n                    \"font-family\": `\"Modesto Condensed\", \"Palatino Linotype\", serif`,\r\n                    \"font-weight\": \"900\",\r\n                    \"text-align\": \"center\",\r\n                    \"text-shadow\": \"-1px 1px 0 #000, 1px 1px 0 #000, 1px -1px 0 #000, -1px -1px 0 #000\"\r\n                }\r\n            },\r\n            {\r\n                class: AttributeText,\r\n                position: position,\r\n                actor: actor,\r\n                attribute: \"name\",\r\n                styles: {\r\n                    \"top\": 50,\r\n                    \"left\": 0,\r\n                    \"width\": position.width,\r\n                    \"color\": \"white\",\r\n                    \"font-size\": \"3rem\",\r\n                    \"font-family\": `\"Modesto Condensed\", \"Palatino Linotype\", serif`,\r\n                    \"font-weight\": \"900\",\r\n                    \"text-align\": \"center\",\r\n                    \"text-shadow\": \"-1px 1px 0 #000, 1px 1px 0 #000, 1px -1px 0 #000, -1px -1px 0 #000\"\r\n                }\r\n            },\r\n            {\r\n                class: PipBar,\r\n                position: position,\r\n                actor: actor,\r\n                pips: 5,\r\n                pipSrc: \"modules/bossbar/src/assets/pip.png\",\r\n                styles: {\r\n                    top: 0,\r\n                    left: 0\r\n                }\r\n            }\r\n        ]\r\n\r\n        const dimensionKeys = [\"top\", \"left\", \"width\", \"height\"];\r\n        components = components.map(component => {\r\n            dimensionKeys.forEach(key => {\r\n                if(component?.styles?.[key]){\r\n                    component.styles[key] += \"px\";\r\n                }\r\n            })\r\n            return component;\r\n        })\r\n    }\r\n\r\n    loadComponents();\r\n\r\n    $: {\r\n        $position;\r\n        loadComponents();\r\n    }\r\n\r\n    console.log(application.options);\r\n    application.options.positionable = false;\r\n\r\n</script>\r\n\r\n<svelte:options accessors={true}/>\r\n\r\n<div class=\"root\"\r\n     bind:this={elementRoot}\r\n     use:applyPosition={position}\r\n     use:draggable={{position}}\r\n     transition:scale>\r\n    <div class=\"container\">\r\n        {#each components as data, index (index)}\r\n            <svelte:component this={data.class} bind:data={data}/>\r\n        {/each}\r\n    </div>\r\n    <div class=\"button-container\">\r\n        <div class=\"ui-button\"\r\n             on:click|stopPropagation={() => { application.close() }}\r\n             on:pointerdown|preventDefault|stopPropagation={()=>null}>\r\n            <i class=\"fas fa-times-circle\"></i>\r\n        </div>\r\n        <div class=\"ui-button\"\r\n             on:click|stopPropagation={() => { }}\r\n             on:pointerdown|preventDefault|stopPropagation={()=>null}>\r\n            <i class=\"fas fa-cog\"></i>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n\r\n  .root {\r\n    position: absolute;\r\n\r\n    .container {\r\n      position: relative;\r\n    }\r\n\r\n    .button-container{\r\n      position: absolute;\r\n      display: flex;\r\n      top: -45px;\r\n      z-index: 20;\r\n      opacity: 0;\r\n      padding: 5px 7px;\r\n      background-color: rgba(255, 255, 255, 0.75);\r\n      border-radius: 5px;\r\n    }\r\n\r\n    &:hover .button-container {\r\n      transition: opacity 0.15s;\r\n      -webkit-transition: opacity 0.15s;\r\n      opacity: 1;\r\n    }\r\n\r\n    .ui-button {\r\n      position: relative;\r\n      transition: opacity 0.15s;\r\n      -webkit-transition: opacity 0.15s;\r\n      opacity: 0.6;\r\n      font-size:1rem;\r\n      cursor: pointer;\r\n\r\n      &:not(:last-child){\r\n        margin-right:0.5rem;\r\n      }\r\n\r\n      &:hover{\r\n        opacity: 1.0;\r\n        transition: opacity 0.15s;\r\n        -webkit-transition: opacity 0.15s;\r\n      }\r\n    }\r\n  }\r\n\r\n</style>\r\n","import { SvelteApplication } from '@typhonjs-fvtt/runtime/svelte/application';\r\nimport BossBarShell from \"./BossBarShell.svelte\";\r\n\r\nexport default class BossBarApp extends SvelteApplication {\r\n\r\n    constructor(actor, options) {\r\n        super(options);\r\n        this.actor = actor;\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return foundry.utils.mergeObject(super.defaultOptions, {\r\n            closeOnSubmit: false,\r\n            width: 500,\r\n            height: \"auto\",\r\n            defaultCloseAnimation: false, // Allow Svelte outro transition\r\n            transformOrigin: 'center',    // Rotation / scale from center\r\n            positionOrtho: false,         // Required for intro transition to take.\r\n\r\n            svelte: {\r\n                class: BossBarShell,\r\n                target: document.body,\r\n                intro: true,\r\n                props: function() {       // You can use a function with `this` as the application.\r\n                    return { actor: this.actor };\r\n                }\r\n            },\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Show a boss bar for the given actor. By default, if there is an existing boss bar for the given actor\r\n     * it will be rendered unless `force` option is true then multiple bars for the same actor will be shown.\r\n     *\r\n     * @param {foundry.abstract.Document} actor - Actor document.\r\n     *\r\n     * @param {boolean} force - When true a multiple boss bars will show even for the same actor.\r\n     *\r\n     * @returns {BossBarApp}\r\n     */\r\n    static show(actor, force = false) {\r\n        const apps = Object.values(ui.windows).filter(app => app instanceof this);\r\n\r\n        let existingLeft = null;\r\n        let existingTop = 100;\r\n\r\n        for (const app of apps) {\r\n            if (!force && app.actor === actor) {\r\n                app.render(true, { focus: true });\r\n                return this;\r\n            }\r\n\r\n            const appTop = app.position.top;\r\n\r\n            if (appTop >= existingTop)\r\n            {\r\n                existingTop = app.position.top + 150;\r\n                existingLeft = app.position.left;\r\n            }\r\n        }\r\n\r\n        // Reset boss bar to top / center as it is lower than 75% of the browser window.\r\n        // Note: all further boss bars will be in the top center position.\r\n        if (existingTop > globalThis.innerHeight * 0.75)\r\n        {\r\n            existingLeft = null;\r\n            existingTop = 100;\r\n        }\r\n\r\n        return new this(actor, {\r\n            top: existingTop,\r\n            left: existingLeft\r\n        }).render(true);\r\n    }\r\n\r\n    update(options){\r\n        console.log(options);\r\n    }\r\n}\r\n","import { HOOKS } from \"./constants.js\";\r\nimport BossBar from \"./applications/boss-bar/boss-bar-app.js\";\r\n\r\nexport default function registerHooks() {\r\n\r\n    /**\r\n     * Closes all boss bars for a specific actor.\r\n     */\r\n    Hooks.on(HOOKS.CLOSE, async (options) => {\r\n        const actor = await getActor(options, 'close');\r\n\r\n        const app = Object.values(ui.windows).filter(app => app instanceof BossBar);\r\n\r\n        for (const app of apps) {\r\n            if (app.actor === actor) {\r\n                await app.close();\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Closes all boss bars.\r\n     */\r\n    Hooks.on(HOOKS.CLOSE_ALL, async () => {\r\n        const apps = Object.values(ui.windows).filter(app => app instanceof BossBar);\r\n\r\n        for (const app of apps) {\r\n            await app.close();\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Shows a boss bar for a given actor - add `force: true` to show multiple boss bars for same actor.\r\n     */\r\n    Hooks.on(HOOKS.SHOW, async (options) => {\r\n        const actor = await getActor(options, 'show');\r\n\r\n        const force = typeof options.force === 'boolean' ? options.force : false;\r\n\r\n        BossBar.show(actor, force);\r\n    });\r\n\r\n    /**\r\n     * Updates the boss bar for a given actor, if one can be found.\r\n     */\r\n    Hooks.on(HOOKS.UPDATE, async (options) => {\r\n        const actor = await getActor(options, 'show');\r\n\r\n        const apps = Object.values(ui.windows).filter(app => app instanceof BossBar);\r\n\r\n        for (const app of apps) {\r\n            if (app.actor === actor && (!options.name || options.name === app.id)) {\r\n                app.update(options);\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     *\r\n     * @param {object}  options\r\n     * @param {object}  [options.id] - Actor ID for `game.actors.get`.\r\n     * @param {object}  [options.name] - Actor name for `game.actors.getName`.\r\n     * @param {object}  [options.uuid] - Actor UUID for `fromUUID`.\r\n     * @param {string}  hookName - Name of hook getActor invoked from for error messages\r\n     *\r\n     * @returns {Promise<foundry.abstract.Document|void>}\r\n     */\r\n    async function getActor(options, hookName) {\r\n        if (options === null || typeof options !== 'object') {\r\n            ui.notifications.error(\r\n                `BossBar ${hookName} hook error: required 'options' is not an object.`)\r\n            return;\r\n        }\r\n\r\n        let actor;\r\n        let lookupType;\r\n\r\n        if (typeof options.uuid === 'string') {\r\n            try {\r\n                const target = await fromUuid(options.uuid);\r\n                // In case a token was given, get the actor from the token.\r\n                actor = target?.actor ?? target;\r\n            } catch (err) { /**/\r\n            } // Swallow error as error message is printed below.\r\n            lookupType = 'uuid'\r\n        } else if (typeof options.id === 'string') {\r\n            actor = game.actors.get(options.id);\r\n            lookupType = 'id'\r\n        } else if (typeof options.name === 'string') {\r\n            actor = game.actors.getName(options.name);\r\n            lookupType = 'name'\r\n        } else {\r\n            ui.notifications.error(`BossBar ${\r\n                hookName} hook error: required 'options' does not contain an 'id', 'name', or 'uuid' string property.`);\r\n            return;\r\n        }\r\n\r\n        if (actor === void 0 || actor === null) {\r\n            ui.notifications.error(\r\n                `BossBar ${hookName} hook error: Could not retrieve actor for 'options.${lookupType}' (${\r\n                    options[lookupType]}).`);\r\n\r\n            return;\r\n        }\r\n\r\n        return actor;\r\n    }\r\n\r\n}","import { CONSTANTS, HOOKS } from \"./constants.js\";\r\nimport registerHooks from \"./hooks.js\";\r\nlet socket;\r\n\r\nexport default class API {\r\n\r\n    static initialize(){\r\n        registerHooks();\r\n        socket = socketlib.registerModule(CONSTANTS.MODULE_NAME);\r\n        socket.register(\"call_hook\", (...args) => Hooks.call(...args));\r\n    }\r\n\r\n    static getActorUuid(target){\r\n        if(!target){\r\n            throw new Error(\"A target must be given.\")\r\n        }\r\n        if(target instanceof Actor){\r\n            return target.uuid;\r\n        }\r\n        return target.actor.uuid;\r\n    }\r\n\r\n    static getUsers(users){\r\n        if(typeof users === \"string\"){\r\n            users = [users];\r\n        }\r\n        if(!Array.isArray(users)){\r\n            return game.users.filter(user => user.active).map(user => user.id);\r\n        }\r\n        return users.map(user => {\r\n            if(typeof user === \"string\"){\r\n                return game.users.getName(user) || game.users.get(user);\r\n            }\r\n            return (user instanceof User) ? user : false;\r\n        }).filter(Boolean).filter(user => user.active).map(user => user.id);\r\n    }\r\n\r\n    static _executeSocketAction(hook, users, ...args){\r\n        return socket.executeForUsers(\"call_hook\", this.getUsers(users), hook, ...args);\r\n    }\r\n\r\n    static showBar(target, { users = null, options = {} }={}){\r\n        if(!game.user.isGM) return;\r\n        return this._executeSocketAction(HOOKS.SHOW, users, { uuid: this.getActorUuid(target), ...options });\r\n    }\r\n\r\n    static updateBar(target, { options={} }={}){\r\n        if(!game.user.isGM) return;\r\n        return this._executeSocketAction(HOOKS.UPDATE, null, { uuid: this.getActorUuid(target), ...options });\r\n    }\r\n\r\n    static closeBar(target, { users = null, options = {} }={}){\r\n        if(!game.user.isGM) return;\r\n        return this._executeSocketAction(HOOKS.CLOSE, users, { uuid: this.getActorUuid(target), ...options });\r\n    }\r\n\r\n    static closeAllBars({ users = null, options = {} }={}){\r\n        if(!game.user.isGM) return;\r\n        return this._executeSocketAction(HOOKS.CLOSE_ALL, users, options);\r\n    }\r\n\r\n}","import { writable }   from 'svelte/store';\n\nimport { Position }        from '@typhonjs-fvtt/runtime/svelte/application';\n\nlet idCntr = 0;\n\nlet savedComponentData;\n\nconst validator = new Position.Validators.TransformBounds({ constrain: false });\n\nfunction getRandomInt(min, max)\n{\n   min = Math.ceil(min);\n   max = Math.floor(max);\n   return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction getRandomColor()\n{\n   return `rgba(${getRandomInt(100, 255)}, ${getRandomInt(100, 255)}, ${getRandomInt(100, 255)}, 0.5)`;\n}\n\nfunction getPosition(width, height)\n{\n   const bounds = getRandomInt(90, 140);\n\n   const position = new Position({\n      top: getRandomInt(0, height),\n      left: getRandomInt(0, width),\n      width: bounds,\n      height: bounds,\n      validator\n   });\n\n   // Store initial bounds to swap between `auto` and `bounds`.\n   position._initialBounds = bounds;\n\n   return position;\n}\n\n/** @type {{id: number, position: Position, color: string}[]} */\nlet data = [];\n\nconst boxStore = writable(data);\n\nboxStore.validator = writable(true);\n\nboxStore.add = (count = 1) =>\n{\n   const width = validator.width;\n   const height = validator.height;\n\n   boxStore.update((array) =>\n   {\n      for (let cntr = count; --cntr >= 0;)\n      {\n         array.push({ id: idCntr++, position: getPosition(width, height), color: getRandomColor() });\n      }\n\n      return array;\n   });\n};\n\nboxStore.save = (componentData) =>\n{\n   savedComponentData = componentData;\n};\n\nboxStore.restore = () =>\n{\n   if (typeof savedComponentData === 'object')\n   {\n      const newData = [];\n\n      for (const component of savedComponentData.components)\n      {\n         // Must add a new Position and a new unique ID.\n         const position = new Position({ ...component.position, validator });\n         newData.push({ ...component, id: idCntr++, position });\n      }\n\n      boxStore.set(newData);\n      data = newData;\n   }\n};\n\n\nboxStore.setValidatorEnabled = (enabled) =>\n{\n   validator.enabled = enabled;\n\n   // When the validator is turned on and there is box data then force a set on each box position to update validation.\n   if (enabled && data.length > 0)\n   {\n      for (const box of data) { box.position.set(); }\n   }\n};\n\n\nexport { boxStore, validator };","import * as svelteEasingFunc from 'svelte/easing';\nimport { TJSVelocityTrack } from '@typhonjs-fvtt/runtime/svelte/math';\nimport { Position } from '@typhonjs-fvtt/runtime/svelte/application';\nimport { isPlainObject, isIterable } from '@typhonjs-fvtt/runtime/svelte/util';\n\nlet gsap = void 0;\n\n/**\n * Note usage of `globalThis.location.origin` as this is the origin of the importing location which is necessary for\n * connecting to the Foundry server when the package is located on a CDN.\n *\n * @type {string}\n */\nconst modulePath = `${globalThis.location.origin}${foundry.utils.getRoute(`/scripts/greensock/esm/index.js`)}`;\n\n// Basic core GSAP eases.\nconst easingList = [\n   'back.in(1)',\n   'back.inOut(1)',\n   'back.out(1)',\n   'back.in(10)',\n   'back.inOut(10)',\n   'back.out(10)',\n   'bounce.in',\n   'bounce.inOut',\n   'bounce.out',\n   'circ.in',\n   'circ.inOut',\n   'circ.out',\n   'elastic.in(1, 0.5)',\n   'elastic.inOut(1, 0.5)',\n   'elastic.out(1, 0.5)',\n   'elastic.in(10, 5)',\n   'elastic.inOut(10, 5)',\n   'elastic.out(10, 5)',\n   'expo.in',\n   'expo.inOut',\n   'expo.out',\n   'linear', // same as 'none'\n   'power1.in',\n   'power1.inOut',\n   'power1.out',\n   'power2.in',\n   'power2.inOut',\n   'power2.out',\n   'power3.in',\n   'power3.inOut',\n   'power3.out',\n   'power4.in',\n   'power4.inOut',\n   'power4.out',\n   'sine.in',\n   'sine.inOut',\n   'sine.out',\n   'steps(10)',\n   'steps(100)'\n];\n\nconst easingFunc = {};\n\ntry\n{\n   const module = await import(/* @vite-ignore */modulePath);\n   gsap = module.gsap;\n\n   for (const entry of easingList)\n   {\n      easingFunc[entry] = entry === 'linear' ? (t) => t : gsap.parseEase(entry);\n   }\n\n   // Load Svelte easing functions by prepending them w/ `svelte-`; `linear` becomes `svelte-linear`, etc.\n   for (const prop of Object.keys(svelteEasingFunc))\n   {\n      const name = `svelte-${prop}`;\n      easingList.push(name);\n      easingFunc[name] = svelteEasingFunc[prop];\n      gsap.registerEase(name, svelteEasingFunc[prop]);\n   }\n}\ncatch (error)\n{\n   console.error(`TyphonJS Runtime Library error; Could not load GSAP module from: '${modulePath}'`);\n   console.error(error);\n}\n\neasingList.sort();\n\nObject.freeze(easingFunc);\nObject.freeze(easingList);\n\n/**\n * Internal helper class for timeline implementation. Performs error checking before applying any timeline actions.\n */\nclass TimelineImpl\n{\n   static add(timeline, entry, cntr)\n   {\n      const child = entry.child;\n      const position = entry.position;\n\n      if (child === void 0)\n      {\n         throw new TypeError(`GsapCompose.timeline error: gsapData[${cntr}] missing 'child' property.`);\n      }\n\n      if (position !== void 0 && !Number.isFinite(position) && typeof position !== 'string')\n      {\n         throw new TypeError(`GsapCompose.timeline error: gsapData[${cntr}] 'position' is not a number or string.`);\n      }\n\n      timeline.add(child, position);\n   }\n\n   static addLabel(timeline, entry, cntr)\n   {\n      const label = entry.label;\n      const position = entry.position;\n\n      if (typeof label !== 'string')\n      {\n         throw new TypeError(`GsapCompose.timeline error: gsapData[${cntr}] 'label' is not a string.`);\n      }\n\n      if (position !== void 0 && !Number.isFinite(position) && typeof position !== 'string')\n      {\n         throw new TypeError(`GsapCompose.timeline error: gsapData[${cntr}] 'position' is not a number or string.`);\n      }\n\n      timeline.addLabel(label, position);\n   }\n\n   static addPause(timeline, entry, cntr)\n   {\n      const position = entry.position;\n      const callback = entry.callback;\n      const params = entry.params;\n\n      if (position !== void 0 && !Number.isFinite(position) && typeof position !== 'string')\n      {\n         throw new TypeError(`GsapCompose.timeline error: gsapData[${cntr}] 'position' is not a number or string.`);\n      }\n\n      if (callback !== void 0 && typeof callback !== 'function')\n      {\n         throw new TypeError(`GsapCompose.timeline error: gsapData[${cntr}] 'callback' is not a function.`);\n      }\n\n      if (params !== void 0 && !Array.isArray(params))\n      {\n         throw new TypeError(`GsapCompose.timeline error: gsapData[${cntr}] 'params' is not an array.`);\n      }\n\n      timeline.addPause(position, callback, params);\n   }\n\n   static call(timeline, entry, cntr)\n   {\n      const callback = entry.callback;\n      const params = entry.params;\n      const position = entry.position;\n\n      if (typeof callback !== 'function')\n      {\n         throw new TypeError(`GsapCompose.timeline error: gsapData[${cntr}] 'callback' is not a function.`);\n      }\n\n      if (params !== void 0 && !Array.isArray(params))\n      {\n         throw new TypeError(`GsapCompose.timeline error: gsapData[${cntr}] 'params' is not an array.`);\n      }\n\n      if (position !== void 0 && !Number.isFinite(position) && typeof position !== 'string')\n      {\n         throw new TypeError(`GsapCompose.timeline error: gsapData[${cntr}] 'position' is not a number or string.`);\n      }\n\n      timeline.call(callback, params, position);\n   }\n}\n\n/**\n * Stores the entry types that potentially use the generated initial position data.\n *\n * @type {Set<string>}\n */\nconst s_TYPES_POSITION = new Set(['from', 'fromTo', 'set', 'to']);\n\n/**\n * Stores the Position properties in order to create the minimum update data object when animating.\n *\n * @type {Set<string>}\n */\nconst s_POSITION_KEYS = new Set([\n // Main keys\n 'left', 'top', 'maxWidth', 'maxHeight', 'minWidth', 'minHeight', 'width', 'height',\n  'rotateX', 'rotateY', 'rotateZ', 'scale', 'translateX', 'translateY', 'translateZ', 'zIndex',\n\n // Aliases\n 'rotation'\n]);\n\n/**\n * Stores the seen Position properties when building the minimum update data object when animating.\n *\n * @type {Set<string>}\n */\nconst s_POSITION_PROPS = new Set();\n\n/**\n * Defines the options for {@link Position.get}.\n *\n * @type {{keys: Set<string>, numeric: boolean}}\n */\nconst s_POSITION_GET_OPTIONS = {\n   keys: s_POSITION_PROPS,\n   numeric: true\n};\n\n/**\n * Provides a data driven ways to connect a {@link Position} instance with a GSAP timeline and tweens.\n *\n * {@link GsapPosition.timeline} supports the following types: 'add', 'addLabel', 'addPause', 'call', 'from',\n * 'fromTo', 'set', 'to'.\n */\nclass GsapPosition\n{\n   /**\n    * @param {Position} tjsPosition - Position instance.\n    *\n    * @param {GsapPositionOptions} [options] - Options for filtering and initial data population.\n    *\n    * @param {object}   vars - GSAP vars object for `from`.\n    *\n    * @returns {object} GSAP tween\n    */\n   static from(tjsPosition, options, vars)\n   {\n      if (options !== void 0 && typeof options !== 'object')\n      {\n         throw new TypeError(`GsapCompose.from error: 'options' is not an object.`);\n      }\n\n      const filter = options?.filter;\n      const initialProps = options?.initialProps;\n\n      // Only retrieve the Position keys that are in vars.\n      s_POSITION_PROPS.clear();\n\n      // Add any initial props if defined.\n      if (isIterable(initialProps))\n      {\n         for (const prop of initialProps) { s_POSITION_PROPS.add(prop); }\n      }\n\n      for (const prop in vars)\n      {\n         if (s_POSITION_KEYS.has(prop)) { s_POSITION_PROPS.add(prop); }\n      }\n\n      const positionData = s_GET_POSITIONINFO(tjsPosition, vars, filter).positionData;\n\n      return gsap.from(positionData, vars);\n   }\n\n   /**\n    * @param {Position} tjsPosition - Position instance.\n    *\n    * @param {GsapPositionOptions} [options] - Options for filtering and initial data population.\n    *\n    * @param {object}   fromVars - GSAP fromVars object for `fromTo`\n    *\n    * @param {object}   toVars - GSAP toVars object for `fromTo`.\n    *\n    * @returns {object} GSAP tween\n    */\n   static fromTo(tjsPosition, options, fromVars, toVars)\n   {\n      if (options !== void 0 && typeof options !== 'object')\n      {\n         throw new TypeError(`GsapCompose.from error: 'options' is not an object.`);\n      }\n\n      const filter = options?.filter;\n      const initialProps = options?.initialProps;\n\n      // Only retrieve the Position keys that are in vars.\n      s_POSITION_PROPS.clear();\n\n      // Add any initial props if defined.\n      if (isIterable(initialProps))\n      {\n         for (const prop of initialProps) { s_POSITION_PROPS.add(prop); }\n      }\n\n      for (const prop in fromVars)\n      {\n         if (s_POSITION_KEYS.has(prop)) { s_POSITION_PROPS.add(prop); }\n      }\n\n      for (const prop in toVars)\n      {\n         if (s_POSITION_KEYS.has(prop)) { s_POSITION_PROPS.add(prop); }\n      }\n\n      const positionData = s_GET_POSITIONINFO(tjsPosition, toVars, filter).positionData;\n\n      return gsap.fromTo(positionData, fromVars, toVars);\n   }\n\n   /**\n    * @param {Position} tjsPosition - Position instance.\n    *\n    * @param {GsapPositionOptions} [options] - Options for filtering and initial data population.\n    *\n    * @param {string}   key - Property of position to manipulate.\n    *\n    * @param {object}   vars - GSAP vars object for `quickTo`.\n    *\n    * @returns {Function}  GSAP quickTo function.\n    */\n   static quickTo(tjsPosition, options, key, vars)\n   {\n      if (options !== void 0 && typeof options !== 'object')\n      {\n         throw new TypeError(`GsapCompose.from error: 'options' is not an object.`);\n      }\n\n      const filter = options?.filter;\n      const initialProps = options?.initialProps;\n\n      // Only retrieve the Position keys that are in vars.\n      s_POSITION_PROPS.clear();\n\n      // Add any initial props if defined.\n      if (isIterable(initialProps))\n      {\n         for (const prop of initialProps) { s_POSITION_PROPS.add(prop); }\n      }\n\n      // Add specific key specified to initial `positionData`.\n      if (s_POSITION_KEYS.has(key)) { s_POSITION_PROPS.add(key); }\n\n      const positionData = s_GET_POSITIONINFO(tjsPosition, vars, filter).positionData;\n\n      return gsap.quickTo(positionData, key, vars);\n   }\n\n   /**\n    * @param {Position|Iterable<Position>}   tjsPosition - Position instance.\n    *\n    * @param {object|GsapData}               arg1 - Either an object defining timelineOptions or GsapData.\n    *\n    * @param {GsapData|GsapPositionOptions}  [arg2] - When arg1 is defined as an object; arg2 defines GsapData.\n    *\n    * @param {GsapPositionOptions}           [arg3] - Options for filtering and initial data population.\n    *\n    * @returns {object} GSAP timeline\n    */\n   static timeline(tjsPosition, arg1, arg2, arg3)\n   {\n      // Load the variable arguments from arg1 / arg2.\n      // If arg1 is an object then take it as the timelineOptions.\n      const timelineOptions = typeof arg1 === 'object' ? arg1 : {};\n\n      // If arg1 is an array then take it as `gsapData` otherwise select arg2.\n      const gsapData = isIterable(arg1) || typeof arg1 === 'function' ? arg1 : arg2;\n\n      /** @type {GsapPositionOptions} */\n      const options = gsapData === arg1 ? arg2 : arg3;\n\n      if (typeof timelineOptions !== 'object')\n      {\n         throw new TypeError(`GsapCompose.timeline error: 'timelineOptions' is not an object.`);\n      }\n\n      if (!isIterable(gsapData) && typeof gsapData !== 'function')\n      {\n         throw new TypeError(`GsapCompose.timeline error: 'gsapData' is not an iterable list or function.`);\n      }\n\n      if (options !== void 0 && typeof options !== 'object')\n      {\n         throw new TypeError(`GsapCompose.from error: 'options' is not an object.`);\n      }\n\n      const filter = options?.filter;\n      const initialProps = options?.initialProps;\n\n      s_POSITION_PROPS.clear();\n\n      // Add any initial props if defined.\n      if (isIterable(initialProps))\n      {\n         for (const prop of initialProps) { s_POSITION_PROPS.add(prop); }\n      }\n\n      const positionInfo = s_GET_POSITIONINFO(tjsPosition, timelineOptions, filter, gsapData);\n\n      const optionPosition = options?.position;\n\n      const timeline = gsap.timeline(timelineOptions);\n\n      // If the passed in gsapData is a function then we know we are working w/ individual positions, so create\n      // sub timelines for each position instance.\n      if (typeof gsapData === 'function')\n      {\n         if (typeof optionPosition === 'function')\n         {\n            const positionCallbackData = {\n               index: void 0,\n               position: void 0,\n               positionData: void 0,\n               data: void 0,\n               element: void 0,\n               gsapData: void 0\n            };\n\n            for (let index = 0; index < positionInfo.gsapData.length; index++)\n            {\n               const subTimeline = gsap.timeline();\n\n               positionCallbackData.index = index;\n               positionCallbackData.position = positionInfo.position[index];\n               positionCallbackData.positionData = positionInfo.positionData[index];\n               positionCallbackData.data = positionInfo.data[index];\n               positionCallbackData.element = positionInfo.elements[index];\n               positionCallbackData.gsapData = positionInfo.gsapData[index];\n\n               const positionTimeline = optionPosition(positionCallbackData);\n\n               TimelinePositionImpl.handleGsapData(positionInfo.gsapData[index], subTimeline,\n                positionInfo.positionData[index], positionInfo.elements[index]);\n\n               timeline.add(subTimeline, positionTimeline);\n            }\n         }\n         else\n         {\n            for (let index = 0; index < positionInfo.gsapData.length; index++)\n            {\n               const subTimeline = gsap.timeline();\n\n               TimelinePositionImpl.handleGsapData(positionInfo.gsapData[index], subTimeline,\n                positionInfo.positionData[index], positionInfo.elements[index]);\n\n               timeline.add(subTimeline, optionPosition);\n            }\n         }\n      }\n      else\n      {\n         const gsapDataSingle = positionInfo.gsapData[0];\n\n         // If `position` option is defined then handle each Position instance as a sub-timeline.\n         if (typeof optionPosition !== void 0)\n         {\n            let index = 0;\n\n            const positionCallbackData = {\n               index,\n               position: void 0,\n               positionData: void 0,\n               data: void 0,\n               element: void 0,\n               gsapData: void 0     // Note: When using JSON.stringify `gsapData` will cause a circular structure.\n            };\n\n            const isFunction = typeof optionPosition === 'function';\n\n            for (;index < positionInfo.position.length; index++)\n            {\n               if (isFunction)\n               {\n                  positionCallbackData.index = index;\n                  positionCallbackData.position = positionInfo.position[index];\n                  positionCallbackData.positionData = positionInfo.positionData[index];\n                  positionCallbackData.data = positionInfo.data[index];\n                  positionCallbackData.element = positionInfo.elements[index];\n                  positionCallbackData.gsapData = gsapDataSingle;\n\n                  const positionTimeline = optionPosition(positionCallbackData);\n\n                  const subTimeline = gsap.timeline();\n\n                  TimelinePositionImpl.handleGsapData(gsapDataSingle, subTimeline, positionInfo.positionData[index],\n                   positionInfo.elements[index]);\n\n                  timeline.add(subTimeline, positionTimeline);\n               }\n               else\n               {\n                  const subTimeline = gsap.timeline();\n\n                  TimelinePositionImpl.handleGsapData(gsapDataSingle, subTimeline, positionInfo.positionData[index],\n                   positionInfo.elements[index]);\n\n                  timeline.add(subTimeline, optionPosition);\n               }\n            }\n         }\n         else\n         {\n            TimelinePositionImpl.handleGsapData(gsapDataSingle, timeline, positionInfo.positionData,\n             positionInfo.elements);\n         }\n      }\n\n      return timeline;\n   }\n\n   /**\n    * @param {Position|Position[]} tjsPosition - Position instance.\n    *\n    * @param {GsapPositionOptions} [options] - Options for filtering and initial data population.\n    *\n    * @param {object}   vars - GSAP vars object for `to`.\n    *\n    * @returns {object} GSAP tween\n    */\n   static to(tjsPosition, options, vars)\n   {\n      if (options !== void 0 && typeof options !== 'object')\n      {\n         throw new TypeError(`GsapCompose.from error: 'options' is not an object.`);\n      }\n\n      const filter = options?.filter;\n      const initialProps = options?.initialProps;\n\n      // Only retrieve the Position keys that are in vars.\n      s_POSITION_PROPS.clear();\n\n      // Add any initial props if defined.\n      if (isIterable(initialProps))\n      {\n         for (const prop of initialProps) { s_POSITION_PROPS.add(prop); }\n      }\n\n      for (const prop in vars)\n      {\n         if (s_POSITION_KEYS.has(prop)) { s_POSITION_PROPS.add(prop); }\n      }\n\n      const positionData = s_GET_POSITIONINFO(tjsPosition, vars, filter).positionData;\n\n      return gsap.to(positionData, vars);\n   }\n}\n\n/**\n * Internal helper class for timeline implementation. Performs error checking before applying any timeline actions.\n */\nclass TimelinePositionImpl\n{\n   /**\n    * Gets the target from GSAP data entry.\n    *\n    * @param {PositionDataExtended|PositionDataExtended[]}  positionData - PositionInfo data.\n    *\n    * @param {HTMLElement|HTMLElement[]}  elements - One or more HTMLElements.\n    *\n    * @param {object}         entry - Gsap data entry.\n    *\n    * @param {number}         cntr - Current GSAP data entry index.\n    *\n    * @returns {PositionDataExtended|PositionDataExtended[]|HTMLElement|HTMLElement[]} The target object or HTMLElement.\n    */\n   static getTarget(positionData, elements, entry, cntr)\n   {\n      const target = entry.target ?? 'position';\n\n      switch (target)\n      {\n         case 'position':\n            return positionData;\n         case 'element':\n            return elements;\n         default:\n            throw new Error(`GsapCompose.timeline error: 'gsapData[${cntr}]' unknown 'target' - '${target}'.`);\n      }\n   }\n\n   static handleGsapData(gsapData, timeline, positionData, elements)\n   {\n      let index = 0;\n\n      for (const entry of gsapData)\n      {\n         const type = entry.type;\n\n         switch (type)\n         {\n            case 'add':\n               TimelineImpl.add(timeline, entry, index);\n               break;\n\n            case 'addLabel':\n               TimelineImpl.addLabel(timeline, entry, index);\n               break;\n\n            case 'addPause':\n               TimelineImpl.addPause(timeline, entry, index);\n               break;\n\n            case 'call':\n               TimelineImpl.call(timeline, entry, index);\n               break;\n\n            case 'from':\n               timeline.from(this.getTarget(positionData, elements, entry, index), entry.vars, entry.position);\n               break;\n\n            case 'fromTo':\n               timeline.fromTo(this.getTarget(positionData, elements, entry, index), entry.fromVars, entry.toVars,\n                entry.position);\n               break;\n\n            case 'set':\n               timeline.set(this.getTarget(positionData, elements, entry, index), entry.vars, entry.position);\n               break;\n\n            case 'to':\n               timeline.to(this.getTarget(positionData, elements, entry, index), entry.vars, entry.position);\n               break;\n\n            default:\n               throw new Error(`GsapCompose.timeline error: gsapData[${index}] unknown 'type' - '${type}'`);\n         }\n\n         index++;\n      }\n   }\n\n   /**\n    * Validates data for Position related properties: 'from', 'fromTo', 'set', 'to'. Also adds all properties found\n    * in Gsap entry data to s_POSITION_PROPS, so that just the properties being animated are added to animated\n    * `positionData`.\n    *\n    * @param {object}   entry - Gsap entry data.\n    *\n    * @param {number}   cntr - Current index.\n    */\n   static validatePositionProp(entry, cntr)\n   {\n      const position = entry.position;\n\n      if (position !== void 0 && !Number.isFinite(position) && typeof position !== 'string')\n      {\n         throw new TypeError(\n          `GsapCompose.timeline error: gsapData[${cntr}] 'position' is not a number or string.`);\n      }\n\n      switch (entry.type)\n      {\n         case 'from':\n         case 'to':\n         case 'set':\n         {\n            const vars = entry.vars;\n\n            if (typeof vars !== 'object')\n            {\n               throw new TypeError(`GsapCompose.timeline error: gsapData[${cntr}] missing 'vars' object.`);\n            }\n\n            // Only retrieve the Position keys that are in vars.\n            for (const prop in vars)\n            {\n               if (s_POSITION_KEYS.has(prop)) { s_POSITION_PROPS.add(prop); }\n            }\n\n            break;\n         }\n\n         case 'fromTo':\n         {\n            const fromVars = entry.fromVars;\n            const toVars = entry.toVars;\n\n            if (typeof fromVars !== 'object')\n            {\n               throw new TypeError(`GsapCompose.timeline error: gsapData[${cntr}] missing 'fromVars' object.`);\n            }\n\n            if (typeof toVars !== 'object')\n            {\n               throw new TypeError(`GsapCompose.timeline error: gsapData[${cntr}] missing 'toVars' object.`);\n            }\n\n            // Only retrieve the Position keys that are in fromVars / toVars.\n            for (const prop in fromVars)\n            {\n               if (s_POSITION_KEYS.has(prop)) { s_POSITION_PROPS.add(prop); }\n            }\n\n            for (const prop in toVars)\n            {\n               if (s_POSITION_KEYS.has(prop)) { s_POSITION_PROPS.add(prop); }\n            }\n\n            break;\n         }\n      }\n   }\n}\n\n/**\n * @param {Position|Iterable<Position>}   tjsPositions -\n *\n * @param {object}                        vars -\n *\n * @param {Function}                      filter -\n *\n * @param {object[]|Function}             [gsapData] -\n *\n * @returns {PositionInfo} A PositionInfo instance.\n */\nfunction s_GET_POSITIONINFO(tjsPositions, vars, filter, gsapData)\n{\n   /** @type {PositionInfo} */\n   const positionInfo = {\n      position: [],\n      positionData: [],\n      data: [],\n      elements: [],\n      gsapData: [],\n   };\n\n   // If gsapData is a function invoke it w/ the current Position instance and position data to retrieve a unique\n   // gsapData object. If null / undefined is returned this entry is ignored.\n   if (typeof gsapData === 'function')\n   {\n      let index = 0;\n\n      const gsapDataOptions = {\n         index,\n         position: void 0,\n         data: void 0\n      };\n\n      const populateData = (entry) =>\n      {\n         const isPosition = entry instanceof Position;\n\n         gsapDataOptions.index = index++;\n         gsapDataOptions.position = isPosition ? entry : entry.position;\n         gsapDataOptions.data = isPosition ? void 0 : entry;\n\n         const finalGsapData = gsapData(gsapDataOptions);\n\n         if (typeof finalGsapData !== 'object')\n         {\n            throw new TypeError(\n             `GsapCompose error: gsapData callback function iteration(${index - 1}) failed to return an object.`);\n         }\n\n         s_VALIDATE_GSAPDATA_ENTRY(finalGsapData);\n\n         positionInfo.gsapData.push(finalGsapData);\n      };\n\n      if (isIterable(tjsPositions))\n      {\n         for (const entry of tjsPositions) { populateData(entry); }\n      }\n      else\n      {\n         populateData(tjsPositions);\n      }\n   }\n   else if (isIterable(gsapData))\n   {\n      s_VALIDATE_GSAPDATA_ENTRY(gsapData);\n\n      positionInfo.gsapData.push(gsapData);\n   }\n\n   const existingOnUpdate = vars.onUpdate;\n\n   if (isIterable(tjsPositions))\n   {\n      for (const entry of tjsPositions)\n      {\n         const isPosition = entry instanceof Position;\n\n         const position = isPosition ? entry : entry.position;\n         const data = isPosition ? void 0 : entry;\n         const positionData = position.get({ immediateElementUpdate: true }, s_POSITION_GET_OPTIONS);\n\n         positionInfo.position.push(position);\n         positionInfo.positionData.push(positionData);\n         positionInfo.data.push(data);\n         positionInfo.elements.push(position.element);\n      }\n   }\n   else\n   {\n      const isPosition = tjsPositions instanceof Position;\n\n      const position = isPosition ? tjsPositions : tjsPositions.position;\n      const data = isPosition ? void 0 : tjsPositions;\n      const positionData = position.get({ immediateElementUpdate: true }, s_POSITION_GET_OPTIONS);\n\n      positionInfo.position.push(position);\n      positionInfo.positionData.push(positionData);\n      positionInfo.data.push(data);\n      positionInfo.elements.push(position.element);\n   }\n\n   if (typeof filter === 'function')\n   {\n      // Preserve invoking existing onUpdate function.\n      if (typeof existingOnUpdate === 'function')\n      {\n         vars.onUpdate = () =>\n         {\n            for (let cntr = 0; cntr < positionInfo.position.length; cntr++)\n            {\n               positionInfo.position[cntr].set(filter(positionInfo.positionData[cntr]));\n            }\n            existingOnUpdate();\n         };\n      }\n      else\n      {\n         vars.onUpdate = () =>\n         {\n            for (let cntr = 0; cntr < positionInfo.position.length; cntr++)\n            {\n               positionInfo.position[cntr].set(filter(positionInfo.positionData[cntr]));\n            }\n         };\n      }\n   }\n   else\n   {\n      // Preserve invoking existing onUpdate function.\n      if (typeof existingOnUpdate === 'function')\n      {\n         vars.onUpdate = () =>\n         {\n            for (let cntr = 0; cntr < positionInfo.position.length; cntr++)\n            {\n               positionInfo.position[cntr].set(positionInfo.positionData[cntr]);\n            }\n            existingOnUpdate();\n         };\n      }\n      else\n      {\n         vars.onUpdate = () =>\n         {\n            for (let cntr = 0; cntr < positionInfo.position.length; cntr++)\n            {\n               positionInfo.position[cntr].set(positionInfo.positionData[cntr]);\n            }\n         };\n      }\n   }\n\n   return positionInfo;\n}\n\n/**\n * Validates `gsapData` entries.\n *\n * @param {Iterable<object>} gsapData - GsapData array.\n */\nfunction s_VALIDATE_GSAPDATA_ENTRY(gsapData)\n{\n   let index = 0;\n\n   for (const entry of gsapData)\n   {\n      if (typeof entry !== 'object')\n      {\n         throw new TypeError(`GsapCompose.timeline error: 'gsapData[${index}]' is not an object.`);\n      }\n\n      // Determine if any of the entries has a position related type and targets position by explicit value or by\n      // default. Build up only the position properties that are being modified by all entries. This allows maximum\n      // composability when animating multiple non-overlapping properties in a timeline.\n      if (s_TYPES_POSITION.has(entry.type) && (entry.target === void 0 || entry.target === 'position'))\n      {\n         TimelinePositionImpl.validatePositionProp(entry, index);\n      }\n\n      index++;\n   }\n}\n\n/**\n * @typedef {object} PositionInfo\n *\n * @property {Position[]}              position -\n *\n * @property {PositionDataExtended[]}  positionData -\n *\n * @property {object[]}                data - Contains the full data object when a list of object w/ position is used.\n *\n * @property {HTMLElement[]}           elements -\n *\n * @property {Array<object[]>}         gsapData -\n */\n\n/**\n * Provides a data driven ways to connect a {@link Position} instance with a GSAP timeline and tweens.\n *\n * {@link GsapPosition.timeline} supports the following types: 'add', 'addLabel', 'addPause', 'call', 'from',\n * 'fromTo', 'set', 'to'.\n */\nclass GsapCompose\n{\n   /**\n    * @param {GSAPTarget} target - A standard GSAP target or Position.\n    *\n    * @param {object}   vars - GSAP vars object for `from`.\n    *\n    * @param {GsapPositionOptions} [options] - Options for filtering and initial data population for Position tweens.\n    *\n    * @returns {object} GSAP tween\n    */\n   static from(target, vars, options)\n   {\n      if (typeof vars !== 'object')\n      {\n         throw new TypeError(`GsapCompose.from error: 'vars' is not an object.`);\n      }\n\n      // If target is Position related attempt to dispatch to GsapPosition.\n      const positionTween = s_DISPATCH_POSITION('from', target, options, vars);\n\n      return positionTween !== void 0 ? positionTween : gsap.from(target, vars);\n   }\n\n   /**\n    * @param {GSAPTarget} target - A standard GSAP target or Position.\n    *\n    * @param {object}   fromVars - GSAP fromVars object for `fromTo`\n    *\n    * @param {object}   toVars - GSAP toVars object for `fromTo`.\n    *\n    * @param {GsapPositionOptions} [options] - Options for filtering and initial data population.\n    *\n    * @returns {object} GSAP tween\n    */\n   static fromTo(target, fromVars, toVars, options)\n   {\n      if (typeof fromVars !== 'object')\n      {\n         throw new TypeError(`GsapCompose.fromTo error: 'fromVars' is not an object.`);\n      }\n\n      if (typeof toVars !== 'object')\n      {\n         throw new TypeError(`GsapCompose.fromTo error: 'toVars' is not an object.`);\n      }\n\n      // If target is Position related attempt to dispatch to GsapPosition.\n      const positionTween = s_DISPATCH_POSITION('fromTo', target, options, fromVars, toVars);\n\n      return positionTween !== void 0 ? positionTween : gsap.fromTo(target, fromVars, toVars);\n   }\n\n   /**\n    * Checks the `gsap` module instance for existence of a method and GsapCompose for the same method name. This\n    * is helpful to determine which new features are available. Ex. `quickTo` is not available until GSAP `3.10+`.\n    *\n    * @param {string}   name - Name of method to check.\n    *\n    * @returns {boolean} Gsap and GsapCompose support the given method.\n    */\n   static hasMethod(name)\n   {\n      return typeof gsap[name] === 'function' && typeof this[name] === 'function';\n   }\n\n   /**\n    * @param {GSAPTarget} target - A standard GSAP target or Position.\n    *\n    * @param {string}   key - Property of position to manipulate.\n    *\n    * @param {object}   vars - GSAP vars object for `quickTo`.\n    *\n    * @param {GsapPositionOptions} [options] - Options for filtering and initial data population.\n    *\n    * @returns {Function}  GSAP quickTo function.\n    */\n   static quickTo(target, key, vars, options)\n   {\n      if (typeof key !== 'string')\n      {\n         throw new TypeError(`GsapCompose.quickTo error: 'key' is not a string.`);\n      }\n\n      if (typeof vars !== 'object')\n      {\n         throw new TypeError(`GsapCompose.quickTo error: 'vars' is not an object.`);\n      }\n\n      // If target is Position related attempt to dispatch to GsapPosition.\n      const positionQuickTo = s_DISPATCH_POSITION('quickTo', target, options, key, vars);\n\n      return positionQuickTo !== void 0 ? positionQuickTo : gsap.quickTo(target, key, vars);\n   }\n\n   /**\n    * Defers to `gsap` module to register an easing function.\n    *\n    * @param {string}   name - Easing name.\n    *\n    * @param {Function} ease - An easing function.\n    */\n   static registerEase(name, ease)\n   {\n      gsap.registerEase(name, ease);\n   }\n\n   /**\n    * Defers to `gsap` module to register a plugin.\n    *\n    * @param {...Function} args - A list of plugins.\n    */\n   static registerPlugin(...args)\n   {\n      gsap.registerPlugin(...args);\n   }\n\n   /**\n    * @param {GSAPTarget} target - A standard GSAP target or Position.\n    *\n    * @param {object|GsapData}   [arg1] - Either an object defining timeline options or GsapData.\n    *\n    * @param {GsapData|GsapPositionOptions} [arg2] - When arg1 is defined as an object; arg2 defines GsapData.\n    *\n    * @param {GsapPositionOptions} [arg3] - Options for filtering and initial data population.\n    *\n    * @returns {object} GSAP timeline\n    */\n   static timeline(target, arg1, arg2, arg3)\n   {\n      // When an object and not iterable assume an object literal as timeline options.\n      // This allows through `GsapCompose.timeline()` and `GsapCompose.timeline({ <TIMELINE_OPTIONS> })`.\n      if (target === void 0 || (isPlainObject(target) && arg1 === void 0))\n      {\n         return gsap.timeline(target);\n      }\n\n      // If target is Position related attempt to dispatch to GsapPosition.\n      const positionTimeline = s_DISPATCH_POSITION('timeline', target, arg1, arg2, arg3);\n      if (positionTimeline !== void 0) { return positionTimeline; }\n\n      // Load the variable arguments from arg1 / arg2.\n      // If arg1 is an object then take it as the timelineOptions.\n      const timelineOptions = typeof arg1 === 'object' ? arg1 : {};\n\n      // If arg1 is an array then take it as `gsapData` otherwise select arg2.\n      const gsapData = isIterable(arg1) ? arg1 : arg2;\n\n      /** @type {GsapPositionOptions} */\n      const options = gsapData === arg1 ? arg2 : arg3;\n\n      if (typeof timelineOptions !== 'object')\n      {\n         throw new TypeError(`GsapCompose.timeline error: 'timelineOptions' is not an object.`);\n      }\n\n      if (!isIterable(gsapData))\n      {\n         throw new TypeError(`GsapCompose.timeline error: 'gsapData' is not an iterable list.`);\n      }\n\n      if (options !== void 0 && typeof options !== 'object')\n      {\n         throw new TypeError(`GsapCompose.from error: 'options' is not an object.`);\n      }\n\n      // Validate gsapData.\n      let index = 0;\n\n      for (const entry of gsapData)\n      {\n         if (typeof entry !== 'object')\n         {\n            throw new TypeError(`GsapCompose.timeline error: 'gsapData[${index}]' is not an object.`);\n         }\n\n         s_VALIDATE_OPTIONS(entry, index);\n\n         index++;\n      }\n\n      index = 0;\n\n      const timeline = gsap.timeline(timelineOptions);\n\n      for (const entry of gsapData)\n      {\n         const type = entry.type;\n\n         switch (type)\n         {\n            case 'add':\n               TimelineImpl.add(timeline, entry, index);\n               break;\n\n            case 'addLabel':\n               TimelineImpl.addLabel(timeline, entry, index);\n               break;\n\n            case 'addPause':\n               TimelineImpl.addPause(timeline, entry, index);\n               break;\n\n            case 'call':\n               TimelineImpl.call(timeline, entry, index);\n               break;\n\n            case 'from':\n               timeline.from(target, entry.vars, entry.position);\n               break;\n\n            case 'fromTo':\n               timeline.fromTo(target, entry.fromVars, entry.toVars, entry.position);\n               break;\n\n            case 'set':\n               timeline.set(target, entry.vars, entry.position);\n               break;\n\n            case 'to':\n               timeline.to(target, entry.vars, entry.position);\n               break;\n\n            default:\n               throw new Error(`GsapCompose.timeline error: gsapData[${index}] unknown 'type' - '${type}'`);\n         }\n\n         index++;\n      }\n\n      return timeline;\n   }\n\n   /**\n    * @param {GSAPTarget} target - A standard GSAP target or Position.\n    *\n    * @param {object}   vars - GSAP vars object for `to`.\n    *\n    * @param {GsapPositionOptions} [options] - Options for filtering and initial data population.\n    *\n    * @returns {object} GSAP tween\n    */\n   static to(target, vars, options)\n   {\n      if (typeof vars !== 'object')\n      {\n         throw new TypeError(`GsapCompose.to error: 'vars' is not an object.`);\n      }\n\n      // If target is Position related attempt to dispatch to GsapPosition.\n      const positionTween = s_DISPATCH_POSITION('to', target, options, vars);\n\n      return positionTween !== void 0 ? positionTween : gsap.to(target, vars);\n   }\n}\n\nfunction s_DISPATCH_POSITION(operation, target, options, arg1, arg2)\n{\n   if (target instanceof Position)\n   {\n      return GsapPosition[operation](target, options, arg1, arg2);\n   }\n   else if (typeof target === 'object' && target.position instanceof Position)\n   {\n      return GsapPosition[operation](target.position, options, arg1, arg2);\n   }\n   else if (isIterable(target))\n   {\n      let hasPosition = false;\n      let allPosition = true;\n\n      for (const entry of target)\n      {\n         const isPosition = entry instanceof Position || entry?.position instanceof Position;\n\n         hasPosition |= isPosition;\n         if (!isPosition) { allPosition = false; }\n      }\n\n      if (hasPosition)\n      {\n         if (!allPosition)\n         {\n            throw new TypeError(\n             `GsapCompose.${operation} error: 'target' is an array but all entries are not a Position instance.`);\n         }\n         else\n         {\n            return GsapPosition[operation](target, options, arg1, arg2);\n         }\n      }\n   }\n\n   return void 0;\n}\n\n/**\n * Validates data for Position related properties: 'from', 'fromTo', 'set', 'to'. Also adds all properties found\n * in Gsap entry data to s_POSITION_PROPS, so that just the properties being animated are added to animated\n * `positionData`.\n *\n * @param {object}   entry - Gsap entry data.\n *\n * @param {number}   cntr - Current index.\n */\nfunction s_VALIDATE_OPTIONS(entry, cntr)\n{\n   const position = entry.position;\n\n   if (position !== void 0 && !Number.isFinite(position) && typeof position !== 'string')\n   {\n      throw new TypeError(\n       `GsapCompose.timeline error: gsapData[${cntr}] 'position' is not a number or string.`);\n   }\n\n   switch (entry.type)\n   {\n      case 'from':\n      case 'to':\n      case 'set':\n      {\n         const vars = entry.vars;\n\n         if (typeof vars !== 'object')\n         {\n            throw new TypeError(`GsapCompose.timeline error: gsapData[${cntr}] missing 'vars' object.`);\n         }\n\n         break;\n      }\n\n      case 'fromTo':\n      {\n         const fromVars = entry.fromVars;\n         const toVars = entry.toVars;\n\n         if (typeof fromVars !== 'object')\n         {\n            throw new TypeError(`GsapCompose.timeline error: gsapData[${cntr}] missing 'fromVars' object.`);\n         }\n\n         if (typeof toVars !== 'object')\n         {\n            throw new TypeError(`GsapCompose.timeline error: gsapData[${cntr}] missing 'toVars' object.`);\n         }\n\n         break;\n      }\n   }\n}\n\n/**\n * @typedef {Iterable<object>|Function} GsapData\n */\n\n/**\n * @typedef {object} GsapPositionOptions\n *\n * @property {Function} [filter] - An optional filter function to adjust position data in `onUpdate` callbacks. This is\n *                                 useful if you need to transform any data from GSAP / plugins into data Position can\n *                                 utilize.\n *\n * @property {Iterable<string>} [initialProps] - Provides an iterable of property keys to assign to initial position\n *                                               data. This is useful when you are using GSAP plugins that manipulate\n *                                               data automatically; Ex. MotionPathPlugin\n */\n\n/**\n * @typedef {string|object|Position|Iterable<Position>|Array<HTMLElement|object>} GSAPTarget\n */\n\n// const s_HAS_QUICK_TO = GsapCompose.hasMethod('quickTo');\n\n/**\n * Provides an action to enable pointer dragging of an HTMLElement using GSAP `to` or `quickTo` to invoke `position.set`\n * on a given {@link Position} instance provided. You may provide a `easeOptions` object sent to the tween to modify the\n * duration / easing. When the attached boolean store state changes the draggable action is enabled or disabled.\n *\n * Note: Requires GSAP `3.10+` for `quickTo` support.\n *\n * @param {HTMLElement}       node - The node associated with the action.\n *\n * @param {object}            params - Required parameters.\n *\n * @param {Position}          params.position - A position instance.\n *\n * @param {boolean}           [params.active=true] - A boolean value; attached to a readable store.\n *\n * @param {number}            [params.button=0] - MouseEvent button; {@link https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button}.\n *\n * @param {Writable<boolean>} [params.storeDragging] - A writable store that tracks \"dragging\" state.\n *\n * @param {boolean}           [params.ease=true] - When true easing is enabled.\n *\n * @param {boolean}           [params.inertia=false] - When true inertia easing is enabled.\n *\n * @param {object}            [params.easeOptions] - Gsap `to / `quickTo` vars object.\n *\n * @param {object}            [params.inertiaOptions] - Inertia Options.\n *\n * @returns {{update: Function, destroy: Function}} The action lifecycle methods.\n */\nfunction draggableGsap(node, { position, active = true, button = 0, storeDragging = void 0, ease = true, inertia = false,\n easeOptions = { duration: 0.1, ease: 'power3.out' },\n  inertiaOptions = { end: void 0, duration: { min: 0, max: 3 }, resistance: 1000, velocityScale: 1 } })\n{\n   /**\n    * Duplicate the app / Positionable starting position to track differences.\n    *\n    * @type {object}\n    */\n   let initialPosition = null;\n\n   /**\n    * Stores the initial X / Y on drag down.\n    *\n    * @type {object}\n    */\n   const initialDragPoint = { x: 0, y: 0 };\n\n   /**\n    * Stores the current dragging state and gates the move pointer as the dragging store is not\n    * set until the first pointer move.\n    *\n    * @type {boolean}\n    */\n   let dragging = false;\n\n   /**\n    * Stores the inertia GSAP tween.\n    *\n    * @type {object}\n    */\n   let inertiaTween;\n\n   /**\n    * Tracks velocity for inertia tween.\n    */\n   const velocityTrack = new TJSVelocityTrack();\n\n   /**\n    * Event handlers associated with this action for addition / removal.\n    *\n    * @type {object}\n    */\n   const handlers = {\n      dragDown: ['pointerdown', (e) => onDragPointerDown(e), false],\n      dragMove: ['pointermove', (e) => onDragPointerChange(e), false],\n      dragUp: ['pointerup', (e) => onDragPointerUp(e), false]\n   };\n\n   /**\n    * Stores the ease tween.\n    *\n    * @type {object}\n    */\n   let tweenTo;\n\n   /**\n    * Activates listeners.\n    */\n   function activateListeners()\n   {\n      // Drag handlers\n      node.addEventListener(...handlers.dragDown);\n      node.classList.add('draggable');\n   }\n\n   /**\n    * Removes listeners.\n    */\n   function removeListeners()\n   {\n      if (typeof storeDragging?.set === 'function') { storeDragging.set(false); }\n\n      // Drag handlers\n      node.removeEventListener(...handlers.dragDown);\n      node.removeEventListener(...handlers.dragMove);\n      node.removeEventListener(...handlers.dragUp);\n      node.classList.remove('draggable');\n   }\n\n   if (active)\n   {\n      activateListeners();\n   }\n\n   /**\n    * Handle the initial pointer down that activates dragging behavior for the positionable.\n    *\n    * @param {PointerEvent} event - The pointer down event.\n    */\n   function onDragPointerDown(event)\n   {\n      if (event.button !== button || !event.isPrimary) { return; }\n\n      event.preventDefault();\n\n      dragging = false;\n\n      // Record initial position.\n      initialPosition = position.get();\n      initialDragPoint.x = event.clientX;\n      initialDragPoint.y = event.clientY;\n\n      // Reset velocity tracking when inertia is enabled.\n      if (inertia)\n      {\n         // Reset any existing inertia tween.\n         if (inertiaTween)\n         {\n            inertiaTween.kill();\n            inertiaTween = void 0;\n         }\n\n         velocityTrack.reset(event.clientX, event.clientY);\n      }\n\n      // Add move and pointer up handlers.\n      node.addEventListener(...handlers.dragMove);\n      node.addEventListener(...handlers.dragUp);\n\n      node.setPointerCapture(event.pointerId);\n   }\n\n   /**\n    * Move the positionable.\n    *\n    * @param {PointerEvent} event - The pointer move event.\n    */\n   function onDragPointerChange(event)\n   {\n      // See chorded button presses for pointer events:\n      // https://www.w3.org/TR/pointerevents3/#chorded-button-interactions\n      // TODO: Support different button configurations for PointerEvents.\n      if ((event.buttons & 1) === 0)\n      {\n         onDragPointerUp(event);\n         return;\n      }\n\n      if (event.button !== -1 || !event.isPrimary) { return; }\n\n      event.preventDefault();\n\n      // Only set store dragging on first move event.\n      if (!dragging && typeof storeDragging?.set === 'function')\n      {\n         dragging = true;\n         storeDragging.set(true);\n      }\n\n      /** @type {number} */\n      const newLeft = initialPosition.left + (event.clientX - initialDragPoint.x);\n      /** @type {number} */\n      const newTop = initialPosition.top + (event.clientY - initialDragPoint.y);\n\n      if (inertia) { velocityTrack.update(event.clientX, event.clientY); }\n\n      if (ease)\n      {\n         // Update application position.\n         {\n            if (tweenTo) { tweenTo.kill(); }\n\n            tweenTo = GsapCompose.to(position, { left: newLeft, top: newTop, ...easeOptions });\n         }\n      }\n      else\n      {\n         s_POSITION_DATA.left = newLeft;\n         s_POSITION_DATA.top = newTop;\n\n         position.set(s_POSITION_DATA);\n      }\n   }\n\n   /**\n    * Finish dragging and set the final position and removing listeners.\n    *\n    * @param {PointerEvent} event - The pointer up event.\n    */\n   function onDragPointerUp(event)\n   {\n      event.preventDefault();\n\n      dragging = false;\n      if (typeof storeDragging?.set === 'function') { storeDragging.set(false); }\n\n      node.removeEventListener(...handlers.dragMove);\n      node.removeEventListener(...handlers.dragUp);\n\n      if (inertia)\n      {\n         // Kill any existing ease / tween before inertia tween.\n         {\n            if (tweenTo)\n            {\n               tweenTo.kill();\n               tweenTo = void 0;\n            }\n         }\n\n         const opts = inertiaOptions;\n\n         const velScale = opts.velocityScale ?? 1;\n         const tweenDuration = opts.duration ?? { min: 0, max: 3 };\n         const tweenEnd = opts.end ?? void 0;\n         const tweenResistance = opts.resistance ?? 1000;\n\n         const velocity = velocityTrack.update(event.clientX, event.clientY);\n\n         inertiaTween = GsapCompose.to(position, {\n            inertia: {\n               left: Object.assign({ velocity: velocity.x * velScale }, tweenEnd ? { end: tweenEnd } : {}),\n               top: Object.assign({ velocity: velocity.y * velScale }, tweenEnd ? { end: tweenEnd } : {}),\n               duration: tweenDuration,\n               resistance: tweenResistance,\n               linkedProps: 'top,left'\n            }\n         }, s_INTERTIA_GC_OPTIONS);\n      }\n   }\n\n   return {\n      // The default of active being true won't automatically add listeners twice.\n      update: (options) =>\n      {\n         if (typeof options.active === 'boolean')\n         {\n            active = options.active;\n            if (active) { activateListeners(); }\n            else { removeListeners(); }\n         }\n\n         if (typeof options.button === 'number')\n         {\n            button = options.button;\n         }\n\n         if (typeof options.ease === 'boolean') { ease = options.ease; }\n         if (typeof options.inertia === 'boolean') { inertia = options.inertia; }\n\n         if (typeof options.easeOptions === 'object')\n         {\n            easeOptions = options.easeOptions;\n         }\n\n         if (typeof options.inertiaOptions === 'object')\n         {\n            inertiaOptions = options.inertiaOptions;\n         }\n      },\n\n      destroy: () => removeListeners()\n   };\n}\n\n/**\n * Provides a store / object to make updating / setting draggableGsap options much easier.\n */\nclass DraggableGsapOptions\n{\n   #ease = false;\n\n   #easeOptions = { duration: 0.1, ease: 'power3.out' };\n\n   #inertia = false;\n\n   #inertiaOptions = { end: void 0, duration: { min: 0, max: 3 }, resistance: 1000, velocityScale: 1 };\n\n   /**\n    * Stores the subscribers.\n    *\n    * @type {(function(DraggableGsapOptions): void)[]}\n    */\n   #subscriptions = [];\n\n   constructor({ ease, easeOptions, inertia, inertiaOptions } = {})\n   {\n      // Define the following getters directly on this instance and make them enumerable. This allows them to be\n      // picked up w/ `Object.assign`.\n\n      Object.defineProperty(this, 'ease', {\n         get: () => { return this.#ease; },\n         set: (newEase) =>\n         {\n            if (typeof newEase !== 'boolean') { throw new TypeError(`'ease' is not a boolean.`); }\n\n            this.#ease = newEase;\n            this.#updateSubscribers();\n         },\n         enumerable: true\n      });\n\n      Object.defineProperty(this, 'easeOptions', {\n         get: () => { return this.#easeOptions; },\n         set: (newEaseOptions) =>\n         {\n            if (newEaseOptions === null || typeof newEaseOptions !== 'object')\n            {\n               throw new TypeError(`'easeOptions' is not an object.`);\n            }\n\n            if (newEaseOptions.duration !== void 0)\n            {\n               if (!Number.isFinite(newEaseOptions.duration))\n               {\n                  throw new TypeError(`'easeOptions.duration' is not a finite number.`);\n               }\n\n               if (newEaseOptions.duration < 0) { throw new Error(`'easeOptions.duration' is less than 0.`); }\n\n               this.#easeOptions.duration = newEaseOptions.duration;\n            }\n\n            if (newEaseOptions.ease !== void 0)\n            {\n               if (typeof newEaseOptions.ease !== 'function' && typeof newEaseOptions.ease !== 'string')\n               {\n                  throw new TypeError(`'easeOptions.ease' is not a function or string.`);\n               }\n\n               this.#easeOptions.ease = newEaseOptions.ease;\n            }\n\n            this.#updateSubscribers();\n         },\n         enumerable: true\n      });\n\n      Object.defineProperty(this, 'inertia', {\n         get: () => { return this.#inertia; },\n         set: (newInertia) =>\n         {\n            if (typeof newInertia !== 'boolean') { throw new TypeError(`'inertia' is not a boolean.`); }\n\n            this.#inertia = newInertia;\n            this.#updateSubscribers();\n         },\n         enumerable: true\n      });\n\n      Object.defineProperty(this, 'inertiaOptions', {\n         get: () => { return this.#inertiaOptions; },\n         set: (newInertiaOptions) =>\n         {\n            if (newInertiaOptions === null || typeof newInertiaOptions !== 'object')\n            {\n               throw new TypeError(`'inertiaOptions' is not an object.`);\n            }\n\n            if (newInertiaOptions.end !== void 0)\n            {\n               if (typeof newInertiaOptions.end !== 'function' && newInertiaOptions.end !== void 0)\n               {\n                  throw new TypeError(`'inertiaOptions.end' is not a function or undefined.`);\n               }\n\n               this.#inertiaOptions.end = newInertiaOptions.end;\n            }\n\n            if (newInertiaOptions.duration !== void 0)\n            {\n               if (newInertiaOptions.duration === null || typeof newInertiaOptions.duration !== 'object')\n               {\n                  throw new TypeError(`'inertiaOptions.duration' is not an object.`);\n               }\n\n               if (newInertiaOptions.duration.max !== void 0)\n               {\n                  if (!Number.isFinite(newInertiaOptions.duration.max))\n                  {\n                     throw new TypeError(`'inertiaOptions.duration.max' is not a finite number.`);\n                  }\n\n                  if (newInertiaOptions.duration.max < 0)\n                  {\n                     throw new Error(`'newInertiaOptions.duration.max' is less than 0.`);\n                  }\n\n                  this.#inertiaOptions.duration.max = newInertiaOptions.duration.max;\n               }\n\n               if (newInertiaOptions.duration.min !== void 0)\n               {\n                  if (!Number.isFinite(newInertiaOptions.duration.min))\n                  {\n                     throw new TypeError(`'inertiaOptions.duration.min' is not a finite number.`);\n                  }\n\n                  if (newInertiaOptions.duration.min < 0)\n                  {\n                     throw new Error(`'newInertiaOptions.duration.min' is less than 0.`);\n                  }\n\n                  this.#inertiaOptions.duration.min = newInertiaOptions.duration.min;\n               }\n\n               if (this.#inertiaOptions.duration.min > this.#inertiaOptions.duration.max)\n               {\n                  this.#inertiaOptions.duration.max = this.#inertiaOptions.duration.min;\n               }\n\n               if (this.#inertiaOptions.duration.max < this.#inertiaOptions.duration.min)\n               {\n                  this.#inertiaOptions.duration.min = this.#inertiaOptions.duration.max;\n               }\n            }\n\n            if (newInertiaOptions.resistance !== void 0)\n            {\n               if (!Number.isFinite(newInertiaOptions.resistance))\n               {\n                  throw new TypeError(`'inertiaOptions.resistance' is not a finite number.`);\n               }\n\n               if (newInertiaOptions.resistance < 0) { throw new Error(`'inertiaOptions.resistance' is less than 0.`); }\n\n               this.#inertiaOptions.resistance = newInertiaOptions.resistance;\n            }\n\n            if (newInertiaOptions.velocityScale !== void 0)\n            {\n               if (!Number.isFinite(newInertiaOptions.velocityScale))\n               {\n                  throw new TypeError(`'inertiaOptions.velocityScale' is not a finite number.`);\n               }\n\n               if (newInertiaOptions.velocityScale < 0)\n               {\n                  throw new Error(`'inertiaOptions.velocityScale' is less than 0.`);\n               }\n\n               this.#inertiaOptions.velocityScale = newInertiaOptions.velocityScale;\n            }\n\n            this.#updateSubscribers();\n         },\n         enumerable: true\n      });\n\n      // Set default options.\n      if (ease !== void 0) { this.ease = ease; }\n      if (easeOptions !== void 0) { this.easeOptions = easeOptions; }\n      if (inertia !== void 0) { this.inertia = inertia; }\n      if (inertiaOptions !== void 0) { this.inertiaOptions = inertiaOptions; }\n   }\n\n   /**\n    * @returns {number} Get ease duration\n    */\n   get easeDuration() { return this.#easeOptions.duration; }\n\n   /**\n    * @returns {string|Function} Get easing function value.\n    */\n   get easeValue() { return this.#easeOptions.ease; }\n\n   /**\n    * @returns {number|Array|Function} Get inertia end.\n    * @see `end` {@link https://greensock.com/docs/v3/Plugins/InertiaPlugin}\n    */\n   get inertiaEnd() { return this.#inertiaOptions.end; }\n\n   /**\n    * @returns {number} Get inertia duration max time (seconds)\n    */\n   get inertiaDurationMax() { return this.#inertiaOptions.duration.max; }\n\n   /**\n    * @returns {number} Get inertia duration min time (seconds)\n    */\n   get inertiaDurationMin() { return this.#inertiaOptions.duration.min; }\n\n   /**\n    * @returns {number} Get inertia resistance (1000 is default).\n    */\n   get inertiaResistance() { return this.#inertiaOptions.resistance; }\n\n   /**\n    * @returns {number} Get inertia velocity scale.\n    */\n   get inertiaVelocityScale() { return this.#inertiaOptions.velocityScale; }\n\n   /**\n    * @param {number}   duration - Set ease duration.\n    */\n   set easeDuration(duration)\n   {\n      if (!Number.isFinite(duration))\n      {\n         throw new TypeError(`'duration' is not a finite number.`);\n      }\n\n      if (duration < 0) { throw new Error(`'duration' is less than 0.`); }\n\n      this.#easeOptions.duration = duration;\n      this.#updateSubscribers();\n   }\n\n   /**\n    * @param {string|Function} value - Get easing function value.\n    */\n   set easeValue(value)\n   {\n      if (typeof value !== 'function' && typeof value !== 'string')\n      {\n         throw new TypeError(`'value' is not a function or string.`);\n      }\n\n      this.#easeOptions.ease = value;\n      this.#updateSubscribers();\n   }\n\n\n   /**\n    * @param {number|Array|Function} end - Set inertia end.\n    *\n    * @see `end` {@link https://greensock.com/docs/v3/Plugins/InertiaPlugin}\n    */\n   set inertiaEnd(end)\n   {\n      if (typeof end !== 'function' && end !== void 0) { throw new TypeError(`'end' is not a function or undefined.`); }\n\n      this.#inertiaOptions.end = end;\n      this.#updateSubscribers();\n   }\n\n   /**\n    * @param {{min: number, max: number}} duration - Set inertia duration min & max.\n    */\n   set inertiaDuration(duration)\n   {\n      if (typeof duration !== 'object' && !Number.isFinite(duration.min) && !Number.isFinite(duration.max))\n      {\n         throw new TypeError(`'duration' is not an object with 'min' & 'max' properties as finite numbers.`);\n      }\n\n      if (duration.max < 0) { throw new Error(`'duration.max' is less than 0.`); }\n      if (duration.min < 0) { throw new Error(`'duration.min' is less than 0.`); }\n\n      // Automatically correct for when min / max are out of sync.\n      if (duration.min > duration.max) { duration.max = duration.min; }\n      if (duration.max < duration.min) { duration.min = duration.max; }\n\n      this.#inertiaOptions.duration.max = duration.max;\n      this.#inertiaOptions.duration.min = duration.min;\n      this.#updateSubscribers();\n   }\n\n   /**\n    * @param {number}   max - Set inertia duration max.\n    */\n   set inertiaDurationMax(max)\n   {\n      if (!Number.isFinite(max)) { throw new TypeError(`'max' is not a finite number.`); }\n      if (max < 0) { throw new Error(`'max' is less than 0.`); }\n\n      if (max < this.#inertiaOptions.duration.min) { this.#inertiaOptions.duration.min = max; }\n\n      this.#inertiaOptions.duration.max = max;\n      this.#updateSubscribers();\n   }\n\n   /**\n    * @param {number}   min - Set inertia duration min.\n    */\n   set inertiaDurationMin(min)\n   {\n      if (!Number.isFinite(min)) { throw new TypeError(`'min' is not a finite number.`); }\n      if (min < 0) { throw new Error(`'min' is less than 0.`); }\n\n      if (min > this.#inertiaOptions.duration.max) { this.#inertiaOptions.duration.max = min; }\n\n      this.#inertiaOptions.duration.min = min;\n      this.#updateSubscribers();\n   }\n\n   /**\n    * @param {number}   resistance - Set inertia resistance. Default: 1000\n    */\n   set inertiaResistance(resistance)\n   {\n      if (!Number.isFinite(resistance)) { throw new TypeError(`'resistance' is not a finite number.`); }\n      if (resistance < 0) { throw new Error(`'resistance' is less than 0.`); }\n\n      this.#inertiaOptions.resistance = resistance;\n      this.#updateSubscribers();\n   }\n\n   /**\n    * @param {number}   velocityScale - Set inertia velocity scale.\n    */\n   set inertiaVelocityScale(velocityScale)\n   {\n      if (!Number.isFinite(velocityScale)) { throw new TypeError(`'velocityScale' is not a finite number.`); }\n      if (velocityScale < 0) { throw new Error(`'velocityScale' is less than 0.`); }\n\n      this.#inertiaOptions.velocityScale = velocityScale;\n      this.#updateSubscribers();\n   }\n\n   /**\n    * Resets all options data to default values.\n    */\n   reset()\n   {\n      this.#ease = true;\n      this.#inertia = false;\n      this.#easeOptions = { duration: 0.1, ease: 'power3.out' };\n      this.#inertiaOptions = { end: void 0, duration: { min: 0, max: 3 }, resistance: 1000, velocityScale: 1 };\n      this.#updateSubscribers();\n   }\n\n   /**\n    * Resets easing options to default values.\n    */\n   resetEase()\n   {\n      this.#easeOptions = { duration: 0.1, ease: 'power3.out' };\n      this.#updateSubscribers();\n   }\n\n   /**\n    * Resets inertia options to default values.\n    */\n   resetInertia()\n   {\n      this.#inertiaOptions = { end: void 0, duration: { min: 0, max: 3 }, resistance: 1000, velocityScale: 1 };\n      this.#updateSubscribers();\n   }\n\n   /**\n    * Store subscribe method.\n    *\n    * @param {function(DraggableGsapOptions): void} handler - Callback function that is invoked on update / changes.\n    *                                                         Receives the DraggableOptions object / instance.\n    *\n    * @returns {(function(): void)} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\n\n      handler(this);                     // call handler with current value\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n\n   /**\n    * Update all subscribers.\n    */\n   #updateSubscribers()\n   {\n      const subscriptions = this.#subscriptions;\n\n      // Early out if there are no subscribers.\n      if (subscriptions.length > 0)\n      {\n         for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](this); }\n      }\n   }\n}\n\n/**\n * Define a function to get a DraggableGsapOptions instance.\n *\n * @returns {DraggableGsapOptions} A new options instance.\n */\ndraggableGsap.options = (options) => new DraggableGsapOptions(options);\n\n/**\n * Extra options for GsapCompose.\n *\n * @type {{initialProps: string[]}}\n */\nconst s_INTERTIA_GC_OPTIONS = { initialProps: ['top', 'left'] };\n\n/**\n * Used for direct call to `position.set`.\n *\n * @type {{top: number, left: number}}\n */\nconst s_POSITION_DATA = { left: 0, top: 0 };\n\n/**\n * @param {string}   name - Name of GSAP plugin to load.\n *\n * @returns {Promise<*>} The loaded plugin.\n */\nasync function gsapLoadPlugin(name)\n{\n   /**\n    * Note usage of `globalThis.location.origin` as this is the origin of the importing location which is necessary for\n    * connecting to the Foundry server when the package is located on a CDN.\n    *\n    * @type {string}\n    */\n   const modulePath = `${globalThis.location.origin}${foundry.utils.getRoute(`/scripts/greensock/esm/${name}.js`)}`;\n\n   try\n   {\n      const module = await import(/* @vite-ignore */modulePath);\n      return module.default;\n   }\n   catch (err)\n   {\n      console.error(`TyphonJS Runtime Library error; Could not load ${name} plugin from: '${modulePath}'`);\n      console.error(err);\n   }\n}\n\nexport { GsapCompose, draggableGsap, easingFunc, easingList, gsap, gsapLoadPlugin };\n//# sourceMappingURL=index.js.map\n","<script>\n   import { applyPosition }   from '@typhonjs-fvtt/runtime/svelte/action';\n   import { draggableGsap }   from '@typhonjs-fvtt/runtime/svelte/gsap';\n\n   export let box;\n\n   // This is run once when the component is created. It sets the position width / height back to initial bounds.\n   const bounds = box.position._initialBounds;\n   box.position.set({ width: bounds, height: bounds });\n</script>\n\n<div use:applyPosition={box.position}\n     use:draggableGsap={{ position: box.position, inertia: true }}\n     style:background={box.color}>\n</div>\n\n<style>\n   div {\n      position: absolute;\n      border-radius: 0.25em;\n      border: solid brown 2px;\n   }\n</style>","<script>\r\n    import {\r\n        alwaysBlur,\r\n        autoBlur }        from '@typhonjs-fvtt/runtime/svelte/action';\r\n\r\n    import {\r\n        easingFunc,\r\n        easingList }      from '@typhonjs-fvtt/runtime/svelte/gsap';\r\n\r\n    import { boxStore }  from './boxStore.js';\r\n\r\n    export let controls;\r\n\r\n    const storeValidator = boxStore.validator;\r\n</script>\r\n\r\n<div class=\"flex\">\r\n  Hi, I'm a sidebar.\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n  button {\r\n    height: fit-content;\r\n    width: 75px;\r\n    line-height: 20px;\r\n  }\r\n\r\n  div.container {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 0.25em;\r\n    border: 2px solid rgba(60,60,207,0.8);\r\n    padding: 0 0.25em;\r\n    width: 95%;\r\n    margin-left: 0.25em\r\n  }\r\n\r\n  div.header {\r\n    background: linear-gradient(337deg, rgba(2,0,36,0.75) 0%, rgba(40,40,207,0.5) 48%, rgba(149,171,176,0.75) 100%);\r\n    border-bottom: solid black 1px;\r\n    white-space: nowrap;\r\n  }\r\n\r\n  div.group {\r\n    display: flex;\r\n    padding-top: 0.25em;\r\n  }\r\n\r\n  input { color: white; margin: 3px 3px }\r\n  input[type=range] { max-width: 3.75em }\r\n  input[type=text] { max-width: 2em; pointer-events: none; }\r\n\r\n  select {\r\n    color: white;\r\n    margin: 3px 6px;\r\n  }\r\n\r\n  select option {\r\n    background: rgba(60,60,207,0.8);\r\n    color: inherit;\r\n  }\r\n\r\n  .flex {\r\n    display: flex;\r\n    height: fit-content;\r\n    align-items: center;\r\n  }\r\n\r\n  .flex-vert {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: fit-content;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  label {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: white;\r\n  }\r\n\r\n  span {\r\n    color: white;\r\n  }\r\n</style>","<script>\n   import { getContext }               from 'svelte';\n\n   import { resizeObserver }           from '@typhonjs-fvtt/runtime/svelte/action';\n   import { TJSApplicationShell }      from '@typhonjs-fvtt/runtime/svelte/component/core';\n\n   import { boxStore, validator }      from './boxStore.js';\n\n   import Box                          from './boxes/Box.svelte';\n   import SideBar from \"./SideBar.svelte\";\n\n   export let elementRoot;\n\n   const application = getContext('external').application;\n\n   const storeValidator = boxStore.validator;\n\n   let component;\n   let controls;\n\n   const boundingRect = new DOMRect(0, 0, 0, 0);\n\n   $: boxStore.setValidatorEnabled($storeValidator);\n\n   function setDimension(offsetWidth, offsetHeight)\n   {\n      validator.setDimension(offsetWidth, offsetHeight);\n\n      boundingRect.width = offsetWidth;\n      boundingRect.height = offsetHeight;\n\n      // Force validation for all Position instances.\n      for (const box of $boxStore) { box.position.set(); }\n   }\n</script>\n\n<svelte:options accessors={true}/>\n\n<TJSApplicationShell bind:elementRoot stylesContent={{ padding: 0 }}>\n   <SideBar {controls} />\n   <main use:resizeObserver={setDimension}>\n      {#each $boxStore as box (box.id)}\n         <svelte:component this={Box} {box} />\n      {/each}\n   </main>\n</TJSApplicationShell>\n\n<style lang=scss>\n   main {\n      position: relative;\n      height: 100%;\n      overflow: hidden;\n   }\n</style>","import { SvelteApplication }  from '@typhonjs-fvtt/runtime/svelte/application';\n\nimport BoxLayer               from './BoxLayer.svelte';\n\nexport default class PositionBoxApplication extends SvelteApplication\n{\n   /**\n    * @inheritDoc\n    */\n   constructor(options = {}) { super(options); }\n\n   /**\n    * Default Application options\n    *\n    * @returns {object} options - Application options.\n    * @see https://foundryvtt.com/api/Application.html#options\n    */\n   static get defaultOptions()\n   {\n      return foundry.utils.mergeObject(super.defaultOptions, {\n         id: 'position-boxs',\n         title: 'Position (Box)',\n         width: 860,\n         height: 800,\n         resizable: true,\n         minimizable: true,\n\n         svelte: {\n            class: BoxLayer,\n            target: document.body\n         }\n      });\n   }\n\n   /*async close(...args){\n       debugger;\n       return super.close(...args);\n   }*/\n}","import API from \"./api.js\";\r\nimport PositionBoxApplication from \"./applications/config/PositionBoxApplication.js\";\r\n\r\nHooks.on('init', () => {\r\n    game.bossbar = API;\r\n    API.initialize();\r\n});\r\n\r\nHooks.once(\"ready\", () => {\r\n    console.log(\"wat\")\r\n    new PositionBoxApplication().render(true);\r\n})"],"names":["now","data","element","text","hash","detach","init","create_each_block","insert","update","instance","create_fragment","subscribe","run","children","get","document","writable$2","scale","constants.animateKeys","constants.relativeRegex","lerp","duration","ease","interpolate","options","linear","validator","constants.transformOriginDefault","constants.transformKeysBitwise","constants.transformKeys","s_VALIDATION_DATA","constants.transformOrigins","parent","constants.numericDefaults","constants.setNumericDefaults","promise","draggable","ctx","active","s_POSITION_DATA","booleanStore","dragDefault","storeResizing","apps","BossBar"],"mappings":"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"}